{
  "basePath": "/psd2",
  "definitions": {
    "Error400_AIS": {
      "description": "Standardised definition of reporting error information according to [RFC7807] \nin case of a HTTP error code 400 for AIS.\n",
      "properties": {
        "_links": {
          "$ref": "#/definitions/_linksAll"
        },
        "additionalErrors": {
          "description": "Array of Error Information Blocks.\n\nMight be used if more than one error is to be communicated\n",
          "items": {
            "description": "This is a data element to support the declaration of additional errors in the context of [RFC7807].",
            "properties": {
              "code": {
                "$ref": "#/definitions/MessageCode400_AIS"
              },
              "detail": {
                "$ref": "#/definitions/tppErrorDetail"
              },
              "title": {
                "$ref": "#/definitions/tppErrorTitle"
              }
            },
            "required": [
              "code"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "code": {
          "$ref": "#/definitions/MessageCode400_AIS"
        },
        "detail": {
          "description": "Detailed human readable text specific to this instance of the error. \nXPath might be used to point to the issue generating the error in addition.\nRemark for Future: In future, a dedicated field might be introduced for the XPath.\n",
          "maxLength": 512,
          "type": "string"
        },
        "title": {
          "description": "Short human readable description of error type. \nCould be in local language. \nTo be provided by ASPSPs.\n",
          "maxLength": 70,
          "type": "string"
        },
        "type": {
          "description": "A URI reference [RFC3986] that identifies the problem type. \nRemark For Future: These URI will be provided by NextGenPSD2 in future.\n",
          "format": "uri",
          "maxLength": 70,
          "type": "string"
        }
      },
      "required": [
        "type",
        "code"
      ],
      "type": "object"
    },
    "Error400_NG_AIS": {
      "description": "NextGenPSD2 specific definition of reporting error information in case of a HTTP error code 400.\n",
      "properties": {
        "_links": {
          "$ref": "#/definitions/_linksAll"
        },
        "tppMessages": {
          "items": {
            "$ref": "#/definitions/tppMessage400_AIS"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Error400_NG_PIIS": {
      "description": "NextGenPSD2 specific definition of reporting error information in case of a HTTP error code 400.\n",
      "properties": {
        "_links": {
          "$ref": "#/definitions/_linksAll"
        },
        "tppMessages": {
          "items": {
            "$ref": "#/definitions/tppMessage400_PIIS"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Error400_NG_PIS": {
      "description": "NextGenPSD2 specific definition of reporting error information in case of a HTTP error code 400.\n",
      "properties": {
        "_links": {
          "$ref": "#/definitions/_linksAll"
        },
        "tppMessages": {
          "items": {
            "$ref": "#/definitions/tppMessage400_PIS"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Error400_NG_SB": {
      "description": "NextGenPSD2 specific definition of reporting error information in case of a HTTP error code 400.\n",
      "properties": {
        "_links": {
          "$ref": "#/definitions/_linksAll"
        },
        "tppMessages": {
          "items": {
            "$ref": "#/definitions/tppMessage400_SB"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Error400_PIIS": {
      "description": "Standardised definition of reporting error information according to [RFC7807] \nin case of a HTTP error code 400 for PIIS.\n",
      "properties": {
        "_links": {
          "$ref": "#/definitions/_linksAll"
        },
        "additionalErrors": {
          "description": "Array of Error Information Blocks.\n\nMight be used if more than one error is to be communicated\n",
          "items": {
            "description": "This is a data element to support the declaration of additional errors in the context of [RFC7807].",
            "properties": {
              "code": {
                "$ref": "#/definitions/MessageCode400_PIIS"
              },
              "detail": {
                "$ref": "#/definitions/tppErrorDetail"
              },
              "title": {
                "$ref": "#/definitions/tppErrorTitle"
              }
            },
            "required": [
              "code"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "code": {
          "$ref": "#/definitions/MessageCode400_PIIS"
        },
        "detail": {
          "description": "Detailed human readable text specific to this instance of the error. \nXPath might be used to point to the issue generating the error in addition.\nRemark for Future: In future, a dedicated field might be introduced for the XPath.\n",
          "maxLength": 512,
          "type": "string"
        },
        "title": {
          "description": "Short human readable description of error type. \nCould be in local language. \nTo be provided by ASPSPs.\n",
          "maxLength": 70,
          "type": "string"
        },
        "type": {
          "description": "A URI reference [RFC3986] that identifies the problem type. \nRemark For Future: These URI will be provided by NextGenPSD2 in future.\n",
          "format": "uri",
          "maxLength": 70,
          "type": "string"
        }
      },
      "required": [
        "type",
        "code"
      ],
      "type": "object"
    },
    "Error400_PIS": {
      "description": "Standardised definition of reporting error information according to [RFC7807] \nin case of a HTTP error code 400 for PIS.\n",
      "properties": {
        "_links": {
          "$ref": "#/definitions/_linksAll"
        },
        "additionalErrors": {
          "description": "Array of Error Information Blocks.\n\nMight be used if more than one error is to be communicated\n",
          "items": {
            "description": "This is a data element to support the declaration of additional errors in the context of [RFC7807].",
            "properties": {
              "code": {
                "$ref": "#/definitions/MessageCode400_PIS"
              },
              "detail": {
                "$ref": "#/definitions/tppErrorDetail"
              },
              "title": {
                "$ref": "#/definitions/tppErrorTitle"
              }
            },
            "required": [
              "code"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "code": {
          "$ref": "#/definitions/MessageCode400_PIS"
        },
        "detail": {
          "description": "Detailed human readable text specific to this instance of the error. \nXPath might be used to point to the issue generating the error in addition.\nRemark for Future: In future, a dedicated field might be introduced for the XPath.\n",
          "maxLength": 512,
          "type": "string"
        },
        "title": {
          "description": "Short human readable description of error type. \nCould be in local language. \nTo be provided by ASPSPs.\n",
          "maxLength": 70,
          "type": "string"
        },
        "type": {
          "description": "A URI reference [RFC3986] that identifies the problem type. \nRemark For Future: These URI will be provided by NextGenPSD2 in future.\n",
          "format": "uri",
          "maxLength": 70,
          "type": "string"
        }
      },
      "required": [
        "type",
        "code"
      ],
      "type": "object"
    },
    "Error400_SB": {
      "description": "Standardised definition of reporting error information according to [RFC7807] \nin case of a HTTP error code 400 for signing baskets.\n",
      "properties": {
        "_links": {
          "$ref": "#/definitions/_linksAll"
        },
        "additionalErrors": {
          "description": "Array of Error Information Blocks.\n\nMight be used if more than one error is to be communicated\n",
          "items": {
            "description": "This is a data element to support the declaration of additional errors in the context of [RFC7807].",
            "properties": {
              "code": {
                "$ref": "#/definitions/MessageCode400_SB"
              },
              "detail": {
                "$ref": "#/definitions/tppErrorDetail"
              },
              "title": {
                "$ref": "#/definitions/tppErrorTitle"
              }
            },
            "required": [
              "code"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "code": {
          "$ref": "#/definitions/MessageCode400_SB"
        },
        "detail": {
          "description": "Detailed human readable text specific to this instance of the error. \nXPath might be used to point to the issue generating the error in addition.\nRemark for Future: In future, a dedicated field might be introduced for the XPath.\n",
          "maxLength": 512,
          "type": "string"
        },
        "title": {
          "description": "Short human readable description of error type. \nCould be in local language. \nTo be provided by ASPSPs.\n",
          "maxLength": 70,
          "type": "string"
        },
        "type": {
          "description": "A URI reference [RFC3986] that identifies the problem type. \nRemark For Future: These URI will be provided by NextGenPSD2 in future.\n",
          "format": "uri",
          "maxLength": 70,
          "type": "string"
        }
      },
      "required": [
        "type",
        "code"
      ],
      "type": "object"
    },
    "Error401_AIS": {
      "description": "Standardised definition of reporting error information according to [RFC7807] \nin case of a HTTP error code 401 for AIS.\n",
      "properties": {
        "_links": {
          "$ref": "#/definitions/_linksAll"
        },
        "additionalErrors": {
          "description": "Array of Error Information Blocks.\n\nMight be used if more than one error is to be communicated\n",
          "items": {
            "description": "This is a data element to support the declaration of additional errors in the context of [RFC7807].",
            "properties": {
              "code": {
                "$ref": "#/definitions/MessageCode401_AIS"
              },
              "detail": {
                "$ref": "#/definitions/tppErrorDetail"
              },
              "title": {
                "$ref": "#/definitions/tppErrorTitle"
              }
            },
            "required": [
              "code"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "code": {
          "$ref": "#/definitions/MessageCode401_AIS"
        },
        "detail": {
          "description": "Detailed human readable text specific to this instance of the error. \nXPath might be used to point to the issue generating the error in addition.\nRemark for Future: In future, a dedicated field might be introduced for the XPath.\n",
          "maxLength": 512,
          "type": "string"
        },
        "title": {
          "description": "Short human readable description of error type. \nCould be in local language. \nTo be provided by ASPSPs.\n",
          "maxLength": 70,
          "type": "string"
        },
        "type": {
          "description": "A URI reference [RFC3986] that identifies the problem type. \nRemark For Future: These URI will be provided by NextGenPSD2 in future.\n",
          "format": "uri",
          "maxLength": 70,
          "type": "string"
        }
      },
      "required": [
        "type",
        "code"
      ],
      "type": "object"
    },
    "Error401_NG_AIS": {
      "description": "NextGenPSD2 specific definition of reporting error information in case of a HTTP error code 401.\n",
      "properties": {
        "_links": {
          "$ref": "#/definitions/_linksAll"
        },
        "tppMessages": {
          "items": {
            "$ref": "#/definitions/tppMessage401_AIS"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Error401_NG_PIIS": {
      "description": "NextGenPSD2 specific definition of reporting error information in case of a HTTP error code 401.\n",
      "properties": {
        "_links": {
          "$ref": "#/definitions/_linksAll"
        },
        "tppMessages": {
          "items": {
            "$ref": "#/definitions/tppMessage401_PIIS"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Error401_NG_PIS": {
      "description": "NextGenPSD2 specific definition of reporting error information in case of a HTTP error code 401.\n",
      "properties": {
        "_links": {
          "$ref": "#/definitions/_linksAll"
        },
        "tppMessages": {
          "items": {
            "$ref": "#/definitions/tppMessage401_PIS"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Error401_NG_SB": {
      "description": "NextGenPSD2 specific definition of reporting error information in case of a HTTP error code 401.\n",
      "properties": {
        "_links": {
          "$ref": "#/definitions/_linksAll"
        },
        "tppMessages": {
          "items": {
            "$ref": "#/definitions/tppMessage401_SB"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Error401_PIIS": {
      "description": "Standardised definition of reporting error information according to [RFC7807] \nin case of a HTTP error code 401 for PIIS.\n",
      "properties": {
        "_links": {
          "$ref": "#/definitions/_linksAll"
        },
        "additionalErrors": {
          "description": "Array of Error Information Blocks.\n\nMight be used if more than one error is to be communicated\n",
          "items": {
            "description": "This is a data element to support the declaration of additional errors in the context of [RFC7807].",
            "properties": {
              "code": {
                "$ref": "#/definitions/MessageCode401_PIIS"
              },
              "detail": {
                "$ref": "#/definitions/tppErrorDetail"
              },
              "title": {
                "$ref": "#/definitions/tppErrorTitle"
              }
            },
            "required": [
              "code"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "code": {
          "$ref": "#/definitions/MessageCode401_PIS"
        },
        "detail": {
          "description": "Detailed human readable text specific to this instance of the error. \nXPath might be used to point to the issue generating the error in addition.\nRemark for Future: In future, a dedicated field might be introduced for the XPath.\n",
          "maxLength": 512,
          "type": "string"
        },
        "title": {
          "description": "Short human readable description of error type. \nCould be in local language. \nTo be provided by ASPSPs.\n",
          "maxLength": 70,
          "type": "string"
        },
        "type": {
          "description": "A URI reference [RFC3986] that identifies the problem type. \nRemark For Future: These URI will be provided by NextGenPSD2 in future.\n",
          "format": "uri",
          "maxLength": 70,
          "type": "string"
        }
      },
      "required": [
        "type",
        "code"
      ],
      "type": "object"
    },
    "Error401_PIS": {
      "description": "Standardised definition of reporting error information according to [RFC7807] \nin case of a HTTP error code 401 for PIS.\n",
      "properties": {
        "_links": {
          "$ref": "#/definitions/_linksAll"
        },
        "additionalErrors": {
          "description": "Array of Error Information Blocks.\n\nMight be used if more than one error is to be communicated\n",
          "items": {
            "description": "This is a data element to support the declaration of additional errors in the context of [RFC7807].",
            "properties": {
              "code": {
                "$ref": "#/definitions/MessageCode401_PIS"
              },
              "detail": {
                "$ref": "#/definitions/tppErrorDetail"
              },
              "title": {
                "$ref": "#/definitions/tppErrorTitle"
              }
            },
            "required": [
              "code"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "code": {
          "$ref": "#/definitions/MessageCode401_PIS"
        },
        "detail": {
          "description": "Detailed human readable text specific to this instance of the error. \nXPath might be used to point to the issue generating the error in addition.\nRemark for Future: In future, a dedicated field might be introduced for the XPath.\n",
          "maxLength": 512,
          "type": "string"
        },
        "title": {
          "description": "Short human readable description of error type. \nCould be in local language. \nTo be provided by ASPSPs.\n",
          "maxLength": 70,
          "type": "string"
        },
        "type": {
          "description": "A URI reference [RFC3986] that identifies the problem type. \nRemark For Future: These URI will be provided by NextGenPSD2 in future.\n",
          "format": "uri",
          "maxLength": 70,
          "type": "string"
        }
      },
      "required": [
        "type",
        "code"
      ],
      "type": "object"
    },
    "Error401_SB": {
      "description": "Standardised definition of reporting error information according to [RFC7807] \nin case of a HTTP error code 401 for signing baskets.\n",
      "properties": {
        "_links": {
          "$ref": "#/definitions/_linksAll"
        },
        "additionalErrors": {
          "description": "Array of Error Information Blocks.\n\nMight be used if more than one error is to be communicated\n",
          "items": {
            "description": "This is a data element to support the declaration of additional errors in the context of [RFC7807].",
            "properties": {
              "code": {
                "$ref": "#/definitions/MessageCode401_SB"
              },
              "detail": {
                "$ref": "#/definitions/tppErrorDetail"
              },
              "title": {
                "$ref": "#/definitions/tppErrorTitle"
              }
            },
            "required": [
              "code"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "code": {
          "$ref": "#/definitions/MessageCode401_SB"
        },
        "detail": {
          "description": "Detailed human readable text specific to this instance of the error. \nXPath might be used to point to the issue generating the error in addition.\nRemark for Future: In future, a dedicated field might be introduced for the XPath.\n",
          "maxLength": 512,
          "type": "string"
        },
        "title": {
          "description": "Short human readable description of error type. \nCould be in local language. \nTo be provided by ASPSPs.\n",
          "maxLength": 70,
          "type": "string"
        },
        "type": {
          "description": "A URI reference [RFC3986] that identifies the problem type. \nRemark For Future: These URI will be provided by NextGenPSD2 in future.\n",
          "format": "uri",
          "maxLength": 70,
          "type": "string"
        }
      },
      "required": [
        "type",
        "code"
      ],
      "type": "object"
    },
    "Error403_AIS": {
      "description": "Standardised definition of reporting error information according to [RFC7807] \nin case of a HTTP error code 403 for AIS.\n",
      "properties": {
        "_links": {
          "$ref": "#/definitions/_linksAll"
        },
        "additionalErrors": {
          "description": "Array of Error Information Blocks.\n\nMight be used if more than one error is to be communicated\n",
          "items": {
            "description": "This is a data element to support the declaration of additional errors in the context of [RFC7807].",
            "properties": {
              "code": {
                "$ref": "#/definitions/MessageCode403_AIS"
              },
              "detail": {
                "$ref": "#/definitions/tppErrorDetail"
              },
              "title": {
                "$ref": "#/definitions/tppErrorTitle"
              }
            },
            "required": [
              "code"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "code": {
          "$ref": "#/definitions/MessageCode403_AIS"
        },
        "detail": {
          "description": "Detailed human readable text specific to this instance of the error. \nXPath might be used to point to the issue generating the error in addition.\nRemark for Future: In future, a dedicated field might be introduced for the XPath.\n",
          "maxLength": 512,
          "type": "string"
        },
        "title": {
          "description": "Short human readable description of error type. \nCould be in local language. \nTo be provided by ASPSPs.\n",
          "maxLength": 70,
          "type": "string"
        },
        "type": {
          "description": "A URI reference [RFC3986] that identifies the problem type. \nRemark For Future: These URI will be provided by NextGenPSD2 in future.\n",
          "format": "uri",
          "maxLength": 70,
          "type": "string"
        }
      },
      "required": [
        "type",
        "code"
      ],
      "type": "object"
    },
    "Error403_NG_AIS": {
      "description": "NextGenPSD2 specific definition of reporting error information in case of a HTTP error code 403.\n",
      "properties": {
        "_links": {
          "$ref": "#/definitions/_linksAll"
        },
        "tppMessages": {
          "items": {
            "$ref": "#/definitions/tppMessage403_AIS"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Error403_NG_PIIS": {
      "description": "NextGenPSD2 specific definition of reporting error information in case of a HTTP error code 403.\n",
      "properties": {
        "_links": {
          "$ref": "#/definitions/_linksAll"
        },
        "tppMessages": {
          "items": {
            "$ref": "#/definitions/tppMessage403_PIIS"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Error403_NG_PIS": {
      "description": "NextGenPSD2 specific definition of reporting error information in case of a HTTP error code 403.\n",
      "properties": {
        "_links": {
          "$ref": "#/definitions/_linksAll"
        },
        "tppMessages": {
          "items": {
            "$ref": "#/definitions/tppMessage403_PIS"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Error403_NG_SB": {
      "description": "NextGenPSD2 specific definition of reporting error information in case of a HTTP error code 403.\n",
      "properties": {
        "_links": {
          "$ref": "#/definitions/_linksAll"
        },
        "tppMessages": {
          "items": {
            "$ref": "#/definitions/tppMessage403_SB"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Error403_PIIS": {
      "description": "Standardised definition of reporting error information according to [RFC7807] \nin case of a HTTP error code 403 for PIIS.\n",
      "properties": {
        "_links": {
          "$ref": "#/definitions/_linksAll"
        },
        "additionalErrors": {
          "description": "Array of Error Information Blocks.\n\nMight be used if more than one error is to be communicated\n",
          "items": {
            "description": "This is a data element to support the declaration of additional errors in the context of [RFC7807].",
            "properties": {
              "code": {
                "$ref": "#/definitions/MessageCode403_PIIS"
              },
              "detail": {
                "$ref": "#/definitions/tppErrorDetail"
              },
              "title": {
                "$ref": "#/definitions/tppErrorTitle"
              }
            },
            "required": [
              "code"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "code": {
          "$ref": "#/definitions/MessageCode403_PIIS"
        },
        "detail": {
          "description": "Detailed human readable text specific to this instance of the error. \nXPath might be used to point to the issue generating the error in addition.\nRemark for Future: In future, a dedicated field might be introduced for the XPath.\n",
          "maxLength": 512,
          "type": "string"
        },
        "title": {
          "description": "Short human readable description of error type. \nCould be in local language. \nTo be provided by ASPSPs.\n",
          "maxLength": 70,
          "type": "string"
        },
        "type": {
          "description": "A URI reference [RFC3986] that identifies the problem type. \nRemark For Future: These URI will be provided by NextGenPSD2 in future.\n",
          "format": "uri",
          "maxLength": 70,
          "type": "string"
        }
      },
      "required": [
        "type",
        "code"
      ],
      "type": "object"
    },
    "Error403_PIS": {
      "description": "Standardised definition of reporting error information according to [RFC7807] \nin case of a HTTP error code 403 for PIS.\n",
      "properties": {
        "_links": {
          "$ref": "#/definitions/_linksAll"
        },
        "additionalErrors": {
          "description": "Array of Error Information Blocks.\n\nMight be used if more than one error is to be communicated\n",
          "items": {
            "description": "This is a data element to support the declaration of additional errors in the context of [RFC7807].",
            "properties": {
              "code": {
                "$ref": "#/definitions/MessageCode403_PIS"
              },
              "detail": {
                "$ref": "#/definitions/tppErrorDetail"
              },
              "title": {
                "$ref": "#/definitions/tppErrorTitle"
              }
            },
            "required": [
              "code"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "code": {
          "$ref": "#/definitions/MessageCode403_PIS"
        },
        "detail": {
          "description": "Detailed human readable text specific to this instance of the error. \nXPath might be used to point to the issue generating the error in addition.\nRemark for Future: In future, a dedicated field might be introduced for the XPath.\n",
          "maxLength": 512,
          "type": "string"
        },
        "title": {
          "description": "Short human readable description of error type. \nCould be in local language. \nTo be provided by ASPSPs.\n",
          "maxLength": 70,
          "type": "string"
        },
        "type": {
          "description": "A URI reference [RFC3986] that identifies the problem type. \nRemark For Future: These URI will be provided by NextGenPSD2 in future.\n",
          "format": "uri",
          "maxLength": 70,
          "type": "string"
        }
      },
      "required": [
        "type",
        "code"
      ],
      "type": "object"
    },
    "Error403_SB": {
      "description": "Standardised definition of reporting error information according to [RFC7807] \nin case of a HTTP error code 403 for signing baskets.\n",
      "properties": {
        "_links": {
          "$ref": "#/definitions/_linksAll"
        },
        "additionalErrors": {
          "description": "Array of Error Information Blocks.\n\nMight be used if more than one error is to be communicated\n",
          "items": {
            "description": "This is a data element to support the declaration of additional errors in the context of [RFC7807].",
            "properties": {
              "code": {
                "$ref": "#/definitions/MessageCode403_SB"
              },
              "detail": {
                "$ref": "#/definitions/tppErrorDetail"
              },
              "title": {
                "$ref": "#/definitions/tppErrorTitle"
              }
            },
            "required": [
              "code"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "code": {
          "$ref": "#/definitions/MessageCode403_SB"
        },
        "detail": {
          "description": "Detailed human readable text specific to this instance of the error. \nXPath might be used to point to the issue generating the error in addition.\nRemark for Future: In future, a dedicated field might be introduced for the XPath.\n",
          "maxLength": 512,
          "type": "string"
        },
        "title": {
          "description": "Short human readable description of error type. \nCould be in local language. \nTo be provided by ASPSPs.\n",
          "maxLength": 70,
          "type": "string"
        },
        "type": {
          "description": "A URI reference [RFC3986] that identifies the problem type. \nRemark For Future: These URI will be provided by NextGenPSD2 in future.\n",
          "format": "uri",
          "maxLength": 70,
          "type": "string"
        }
      },
      "required": [
        "type",
        "code"
      ],
      "type": "object"
    },
    "Error404_AIS": {
      "description": "Standardised definition of reporting error information according to [RFC7807] \nin case of a HTTP error code 404 for AIS.\n",
      "properties": {
        "_links": {
          "$ref": "#/definitions/_linksAll"
        },
        "additionalErrors": {
          "description": "Array of Error Information Blocks.\n\nMight be used if more than one error is to be communicated\n",
          "items": {
            "description": "This is a data element to support the declaration of additional errors in the context of [RFC7807].",
            "properties": {
              "code": {
                "$ref": "#/definitions/MessageCode404_AIS"
              },
              "detail": {
                "$ref": "#/definitions/tppErrorDetail"
              },
              "title": {
                "$ref": "#/definitions/tppErrorTitle"
              }
            },
            "required": [
              "code"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "code": {
          "$ref": "#/definitions/MessageCode404_AIS"
        },
        "detail": {
          "description": "Detailed human readable text specific to this instance of the error. \nXPath might be used to point to the issue generating the error in addition.\nRemark for Future: In future, a dedicated field might be introduced for the XPath.\n",
          "maxLength": 512,
          "type": "string"
        },
        "title": {
          "description": "Short human readable description of error type. \nCould be in local language. \nTo be provided by ASPSPs.\n",
          "maxLength": 70,
          "type": "string"
        },
        "type": {
          "description": "A URI reference [RFC3986] that identifies the problem type. \nRemark For Future: These URI will be provided by NextGenPSD2 in future.\n",
          "format": "uri",
          "maxLength": 70,
          "type": "string"
        }
      },
      "required": [
        "type",
        "code"
      ],
      "type": "object"
    },
    "Error404_NG_AIS": {
      "description": "NextGenPSD2 specific definition of reporting error information in case of a HTTP error code 404.\n",
      "properties": {
        "_links": {
          "$ref": "#/definitions/_linksAll"
        },
        "tppMessages": {
          "items": {
            "$ref": "#/definitions/tppMessage404_AIS"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Error404_NG_PIIS": {
      "description": "NextGenPSD2 specific definition of reporting error information in case of a HTTP error code 404.\n",
      "properties": {
        "_links": {
          "$ref": "#/definitions/_linksAll"
        },
        "tppMessages": {
          "items": {
            "$ref": "#/definitions/tppMessage404_PIIS"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Error404_NG_PIS": {
      "description": "NextGenPSD2 specific definition of reporting error information in case of a HTTP error code 404.\n",
      "properties": {
        "_links": {
          "$ref": "#/definitions/_linksAll"
        },
        "tppMessages": {
          "items": {
            "$ref": "#/definitions/tppMessage404_PIS"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Error404_NG_SB": {
      "description": "NextGenPSD2 specific definition of reporting error information in case of a HTTP error code 404.\n",
      "properties": {
        "_links": {
          "$ref": "#/definitions/_linksAll"
        },
        "tppMessages": {
          "items": {
            "$ref": "#/definitions/tppMessage404_SB"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Error404_PIIS": {
      "description": "Standardised definition of reporting error information according to [RFC7807] \nin case of a HTTP error code 404 for PIIS.\n",
      "properties": {
        "_links": {
          "$ref": "#/definitions/_linksAll"
        },
        "additionalErrors": {
          "description": "Array of Error Information Blocks.\n\nMight be used if more than one error is to be communicated\n",
          "items": {
            "description": "This is a data element to support the declaration of additional errors in the context of [RFC7807].",
            "properties": {
              "code": {
                "$ref": "#/definitions/MessageCode404_PIIS"
              },
              "detail": {
                "$ref": "#/definitions/tppErrorDetail"
              },
              "title": {
                "$ref": "#/definitions/tppErrorTitle"
              }
            },
            "required": [
              "code"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "code": {
          "$ref": "#/definitions/MessageCode404_PIIS"
        },
        "detail": {
          "description": "Detailed human readable text specific to this instance of the error. \nXPath might be used to point to the issue generating the error in addition.\nRemark for Future: In future, a dedicated field might be introduced for the XPath.\n",
          "maxLength": 512,
          "type": "string"
        },
        "title": {
          "description": "Short human readable description of error type. \nCould be in local language. \nTo be provided by ASPSPs.\n",
          "maxLength": 70,
          "type": "string"
        },
        "type": {
          "description": "A URI reference [RFC3986] that identifies the problem type. \nRemark For Future: These URI will be provided by NextGenPSD2 in future.\n",
          "format": "uri",
          "maxLength": 70,
          "type": "string"
        }
      },
      "required": [
        "type",
        "code"
      ],
      "type": "object"
    },
    "Error404_PIS": {
      "description": "Standardised definition of reporting error information according to [RFC7807] \nin case of a HTTP error code 404 for PIS.\n",
      "properties": {
        "_links": {
          "$ref": "#/definitions/_linksAll"
        },
        "additionalErrors": {
          "description": "Array of Error Information Blocks.\n\nMight be used if more than one error is to be communicated\n",
          "items": {
            "description": "This is a data element to support the declaration of additional errors in the context of [RFC7807].",
            "properties": {
              "code": {
                "$ref": "#/definitions/MessageCode404_PIS"
              },
              "detail": {
                "$ref": "#/definitions/tppErrorDetail"
              },
              "title": {
                "$ref": "#/definitions/tppErrorTitle"
              }
            },
            "required": [
              "code"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "code": {
          "$ref": "#/definitions/MessageCode404_PIS"
        },
        "detail": {
          "description": "Detailed human readable text specific to this instance of the error. \nXPath might be used to point to the issue generating the error in addition.\nRemark for Future: In future, a dedicated field might be introduced for the XPath.\n",
          "maxLength": 512,
          "type": "string"
        },
        "title": {
          "description": "Short human readable description of error type. \nCould be in local language. \nTo be provided by ASPSPs.\n",
          "maxLength": 70,
          "type": "string"
        },
        "type": {
          "description": "A URI reference [RFC3986] that identifies the problem type. \nRemark For Future: These URI will be provided by NextGenPSD2 in future.\n",
          "format": "uri",
          "maxLength": 70,
          "type": "string"
        }
      },
      "required": [
        "type",
        "code"
      ],
      "type": "object"
    },
    "Error404_SB": {
      "description": "Standardised definition of reporting error information according to [RFC7807] \nin case of a HTTP error code 404 for signing baskets.\n",
      "properties": {
        "_links": {
          "$ref": "#/definitions/_linksAll"
        },
        "additionalErrors": {
          "description": "Array of Error Information Blocks.\n\nMight be used if more than one error is to be communicated\n",
          "items": {
            "description": "This is a data element to support the declaration of additional errors in the context of [RFC7807].",
            "properties": {
              "code": {
                "$ref": "#/definitions/MessageCode404_SB"
              },
              "detail": {
                "$ref": "#/definitions/tppErrorDetail"
              },
              "title": {
                "$ref": "#/definitions/tppErrorTitle"
              }
            },
            "required": [
              "code"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "code": {
          "$ref": "#/definitions/MessageCode404_SB"
        },
        "detail": {
          "description": "Detailed human readable text specific to this instance of the error. \nXPath might be used to point to the issue generating the error in addition.\nRemark for Future: In future, a dedicated field might be introduced for the XPath.\n",
          "maxLength": 512,
          "type": "string"
        },
        "title": {
          "description": "Short human readable description of error type. \nCould be in local language. \nTo be provided by ASPSPs.\n",
          "maxLength": 70,
          "type": "string"
        },
        "type": {
          "description": "A URI reference [RFC3986] that identifies the problem type. \nRemark For Future: These URI will be provided by NextGenPSD2 in future.\n",
          "format": "uri",
          "maxLength": 70,
          "type": "string"
        }
      },
      "required": [
        "type",
        "code"
      ],
      "type": "object"
    },
    "Error405_AIS": {
      "description": "Standardised definition of reporting error information according to [RFC7807] \nin case of a HTTP error code 405 for AIS.\n",
      "properties": {
        "_links": {
          "$ref": "#/definitions/_linksAll"
        },
        "additionalErrors": {
          "description": "Array of Error Information Blocks.\n\nMight be used if more than one error is to be communicated\n",
          "items": {
            "description": "This is a data element to support the declaration of additional errors in the context of [RFC7807].",
            "properties": {
              "code": {
                "$ref": "#/definitions/MessageCode405_AIS"
              },
              "detail": {
                "$ref": "#/definitions/tppErrorDetail"
              },
              "title": {
                "$ref": "#/definitions/tppErrorTitle"
              }
            },
            "required": [
              "code"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "code": {
          "$ref": "#/definitions/MessageCode405_AIS"
        },
        "detail": {
          "description": "Detailed human readable text specific to this instance of the error. \nXPath might be used to point to the issue generating the error in addition.\nRemark for Future: In future, a dedicated field might be introduced for the XPath.\n",
          "maxLength": 512,
          "type": "string"
        },
        "title": {
          "description": "Short human readable description of error type. \nCould be in local language. \nTo be provided by ASPSPs.\n",
          "maxLength": 70,
          "type": "string"
        },
        "type": {
          "description": "A URI reference [RFC3986] that identifies the problem type. \nRemark For Future: These URI will be provided by NextGenPSD2 in future.\n",
          "format": "uri",
          "maxLength": 70,
          "type": "string"
        }
      },
      "required": [
        "type",
        "code"
      ],
      "type": "object"
    },
    "Error405_NG_AIS": {
      "description": "NextGenPSD2 specific definition of reporting error information in case of a HTTP error code 401.\n",
      "properties": {
        "_links": {
          "$ref": "#/definitions/_linksAll"
        },
        "tppMessages": {
          "items": {
            "$ref": "#/definitions/tppMessage405_AIS"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Error405_NG_PIIS": {
      "description": "NextGenPSD2 specific definition of reporting error information in case of a HTTP error code 401.\n",
      "properties": {
        "_links": {
          "$ref": "#/definitions/_linksAll"
        },
        "tppMessages": {
          "items": {
            "$ref": "#/definitions/tppMessage405_PIIS"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Error405_NG_PIS": {
      "description": "NextGenPSD2 specific definition of reporting error information in case of a HTTP error code 401.\n",
      "properties": {
        "_links": {
          "$ref": "#/definitions/_linksAll"
        },
        "tppMessages": {
          "items": {
            "$ref": "#/definitions/tppMessage405_PIS"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Error405_NG_PIS_CANC": {
      "description": "NextGenPSD2 specific definition of reporting error information in case of a HTTP error code 401.\n",
      "properties": {
        "_links": {
          "$ref": "#/definitions/_linksAll"
        },
        "tppMessages": {
          "items": {
            "$ref": "#/definitions/tppMessage405_PIS_CANC"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Error405_NG_SB": {
      "description": "NextGenPSD2 specific definition of reporting error information in case of a HTTP error code 401.\n",
      "properties": {
        "_links": {
          "$ref": "#/definitions/_linksAll"
        },
        "tppMessages": {
          "items": {
            "$ref": "#/definitions/tppMessage405_SB"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Error405_PIIS": {
      "description": "Standardised definition of reporting error information according to [RFC7807] \nin case of a HTTP error code 405 for PIIS.\n",
      "properties": {
        "_links": {
          "$ref": "#/definitions/_linksAll"
        },
        "additionalErrors": {
          "description": "Array of Error Information Blocks.\n\nMight be used if more than one error is to be communicated\n",
          "items": {
            "description": "This is a data element to support the declaration of additional errors in the context of [RFC7807].",
            "properties": {
              "code": {
                "$ref": "#/definitions/MessageCode405_PIIS"
              },
              "detail": {
                "$ref": "#/definitions/tppErrorDetail"
              },
              "title": {
                "$ref": "#/definitions/tppErrorTitle"
              }
            },
            "required": [
              "code"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "code": {
          "$ref": "#/definitions/MessageCode405_PIIS"
        },
        "detail": {
          "description": "Detailed human readable text specific to this instance of the error. \nXPath might be used to point to the issue generating the error in addition.\nRemark for Future: In future, a dedicated field might be introduced for the XPath.\n",
          "maxLength": 512,
          "type": "string"
        },
        "title": {
          "description": "Short human readable description of error type. \nCould be in local language. \nTo be provided by ASPSPs.\n",
          "maxLength": 70,
          "type": "string"
        },
        "type": {
          "description": "A URI reference [RFC3986] that identifies the problem type. \nRemark For Future: These URI will be provided by NextGenPSD2 in future.\n",
          "format": "uri",
          "maxLength": 70,
          "type": "string"
        }
      },
      "required": [
        "type",
        "code"
      ],
      "type": "object"
    },
    "Error405_PIS": {
      "description": "Standardised definition of reporting error information according to [RFC7807] \nin case of a HTTP error code 405 for PIS.\n",
      "properties": {
        "_links": {
          "$ref": "#/definitions/_linksAll"
        },
        "additionalErrors": {
          "description": "Array of Error Information Blocks.\n\nMight be used if more than one error is to be communicated\n",
          "items": {
            "description": "This is a data element to support the declaration of additional errors in the context of [RFC7807].",
            "properties": {
              "code": {
                "$ref": "#/definitions/MessageCode405_PIS"
              },
              "detail": {
                "$ref": "#/definitions/tppErrorDetail"
              },
              "title": {
                "$ref": "#/definitions/tppErrorTitle"
              }
            },
            "required": [
              "code"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "code": {
          "$ref": "#/definitions/MessageCode405_PIS"
        },
        "detail": {
          "description": "Detailed human readable text specific to this instance of the error. \nXPath might be used to point to the issue generating the error in addition.\nRemark for Future: In future, a dedicated field might be introduced for the XPath.\n",
          "maxLength": 512,
          "type": "string"
        },
        "title": {
          "description": "Short human readable description of error type. \nCould be in local language. \nTo be provided by ASPSPs.\n",
          "maxLength": 70,
          "type": "string"
        },
        "type": {
          "description": "A URI reference [RFC3986] that identifies the problem type. \nRemark For Future: These URI will be provided by NextGenPSD2 in future.\n",
          "format": "uri",
          "maxLength": 70,
          "type": "string"
        }
      },
      "required": [
        "type",
        "code"
      ],
      "type": "object"
    },
    "Error405_PIS_CANC": {
      "description": "Standardised definition of reporting error information according to [RFC7807] \nin case of a HTTP error code 405 for a pament cancelation (PIS).\n",
      "properties": {
        "_links": {
          "$ref": "#/definitions/_linksAll"
        },
        "additionalErrors": {
          "description": "Array of Error Information Blocks.\n\nMight be used if more than one error is to be communicated\n",
          "items": {
            "description": "This is a data element to support the declaration of additional errors in the context of [RFC7807].",
            "properties": {
              "code": {
                "$ref": "#/definitions/MessageCode405_PIS_CANC"
              },
              "detail": {
                "$ref": "#/definitions/tppErrorDetail"
              },
              "title": {
                "$ref": "#/definitions/tppErrorTitle"
              }
            },
            "required": [
              "code"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "code": {
          "$ref": "#/definitions/MessageCode405_PIS_CANC"
        },
        "detail": {
          "description": "Detailed human readable text specific to this instance of the error. \nXPath might be used to point to the issue generating the error in addition.\nRemark for Future: In future, a dedicated field might be introduced for the XPath.\n",
          "maxLength": 512,
          "type": "string"
        },
        "title": {
          "description": "Short human readable description of error type. \nCould be in local language. \nTo be provided by ASPSPs.\n",
          "maxLength": 70,
          "type": "string"
        },
        "type": {
          "description": "A URI reference [RFC3986] that identifies the problem type. \nRemark For Future: These URI will be provided by NextGenPSD2 in future.\n",
          "format": "uri",
          "maxLength": 70,
          "type": "string"
        }
      },
      "required": [
        "type",
        "code"
      ],
      "type": "object"
    },
    "Error405_SB": {
      "description": "Standardised definition of reporting error information according to [RFC7807] \nin case of a HTTP error code 405 for signing baskets.\n",
      "properties": {
        "_links": {
          "$ref": "#/definitions/_linksAll"
        },
        "additionalErrors": {
          "description": "Array of Error Information Blocks.\n\nMight be used if more than one error is to be communicated\n",
          "items": {
            "description": "This is a data element to support the declaration of additional errors in the context of [RFC7807].",
            "properties": {
              "code": {
                "$ref": "#/definitions/MessageCode405_SB"
              },
              "detail": {
                "$ref": "#/definitions/tppErrorDetail"
              },
              "title": {
                "$ref": "#/definitions/tppErrorTitle"
              }
            },
            "required": [
              "code"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "code": {
          "$ref": "#/definitions/MessageCode405_SB"
        },
        "detail": {
          "description": "Detailed human readable text specific to this instance of the error. \nXPath might be used to point to the issue generating the error in addition.\nRemark for Future: In future, a dedicated field might be introduced for the XPath.\n",
          "maxLength": 512,
          "type": "string"
        },
        "title": {
          "description": "Short human readable description of error type. \nCould be in local language. \nTo be provided by ASPSPs.\n",
          "maxLength": 70,
          "type": "string"
        },
        "type": {
          "description": "A URI reference [RFC3986] that identifies the problem type. \nRemark For Future: These URI will be provided by NextGenPSD2 in future.\n",
          "format": "uri",
          "maxLength": 70,
          "type": "string"
        }
      },
      "required": [
        "type",
        "code"
      ],
      "type": "object"
    },
    "Error406_AIS": {
      "description": "Standardised definition of reporting error information according to [RFC7807] \nin case of a HTTP error code 406 for AIS.\n",
      "properties": {
        "_links": {
          "$ref": "#/definitions/_linksAll"
        },
        "additionalErrors": {
          "description": "Array of Error Information Blocks.\n\nMight be used if more than one error is to be communicated\n",
          "items": {
            "description": "This is a data element to support the declaration of additional errors in the context of [RFC7807].",
            "properties": {
              "code": {
                "$ref": "#/definitions/MessageCode406_AIS"
              },
              "detail": {
                "$ref": "#/definitions/tppErrorDetail"
              },
              "title": {
                "$ref": "#/definitions/tppErrorTitle"
              }
            },
            "required": [
              "code"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "code": {
          "$ref": "#/definitions/MessageCode406_AIS"
        },
        "detail": {
          "description": "Detailed human readable text specific to this instance of the error. \nXPath might be used to point to the issue generating the error in addition.\nRemark for Future: In future, a dedicated field might be introduced for the XPath.\n",
          "maxLength": 512,
          "type": "string"
        },
        "title": {
          "description": "Short human readable description of error type. \nCould be in local language. \nTo be provided by ASPSPs.\n",
          "maxLength": 70,
          "type": "string"
        },
        "type": {
          "description": "A URI reference [RFC3986] that identifies the problem type. \nRemark For Future: These URI will be provided by NextGenPSD2 in future.\n",
          "format": "uri",
          "maxLength": 70,
          "type": "string"
        }
      },
      "required": [
        "type",
        "code"
      ],
      "type": "object"
    },
    "Error406_NG_AIS": {
      "description": "NextGenPSD2 specific definition of reporting error information in case of a HTTP error code 406.\n",
      "properties": {
        "_links": {
          "$ref": "#/definitions/_linksAll"
        },
        "tppMessages": {
          "items": {
            "$ref": "#/definitions/tppMessage406_AIS"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Error409_AIS": {
      "description": "Standardised definition of reporting error information according to [RFC7807] \nin case of a HTTP error code 409 for AIS.\n",
      "properties": {
        "_links": {
          "$ref": "#/definitions/_linksAll"
        },
        "additionalErrors": {
          "description": "Array of Error Information Blocks.\n\nMight be used if more than one error is to be communicated\n",
          "items": {
            "description": "This is a data element to support the declaration of additional errors in the context of [RFC7807].",
            "properties": {
              "code": {
                "$ref": "#/definitions/MessageCode409_AIS"
              },
              "detail": {
                "$ref": "#/definitions/tppErrorDetail"
              },
              "title": {
                "$ref": "#/definitions/tppErrorTitle"
              }
            },
            "required": [
              "code"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "code": {
          "$ref": "#/definitions/MessageCode409_AIS"
        },
        "detail": {
          "description": "Detailed human readable text specific to this instance of the error. \nXPath might be used to point to the issue generating the error in addition.\nRemark for Future: In future, a dedicated field might be introduced for the XPath.\n",
          "maxLength": 512,
          "type": "string"
        },
        "title": {
          "description": "Short human readable description of error type. \nCould be in local language. \nTo be provided by ASPSPs.\n",
          "maxLength": 70,
          "type": "string"
        },
        "type": {
          "description": "A URI reference [RFC3986] that identifies the problem type. \nRemark For Future: These URI will be provided by NextGenPSD2 in future.\n",
          "format": "uri",
          "maxLength": 70,
          "type": "string"
        }
      },
      "required": [
        "type",
        "code"
      ],
      "type": "object"
    },
    "Error409_NG_AIS": {
      "description": "NextGenPSD2 specific definition of reporting error information in case of a HTTP error code 409.\n",
      "example": [
        {
          "category": "ERROR",
          "code": "STATUS_INVALID",
          "text": "additional text information of the ASPSP up to 512 characters"
        }
      ],
      "properties": {
        "_links": {
          "$ref": "#/definitions/_linksAll"
        },
        "tppMessages": {
          "items": {
            "$ref": "#/definitions/tppMessage409_AIS"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Error409_NG_PIIS": {
      "description": "NextGenPSD2 specific definition of reporting error information in case of a HTTP error code 409.\n",
      "example": [
        {
          "category": "ERROR",
          "code": "STATUS_INVALID",
          "text": "additional text information of the ASPSP up to 512 characters"
        }
      ],
      "properties": {
        "_links": {
          "$ref": "#/definitions/_linksAll"
        },
        "tppMessages": {
          "items": {
            "$ref": "#/definitions/tppMessage409_PIIS"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Error409_NG_PIS": {
      "description": "NextGenPSD2 specific definition of reporting error information in case of a HTTP error code 409.\n",
      "example": [
        {
          "category": "ERROR",
          "code": "STATUS_INVALID",
          "text": "additional text information of the ASPSP up to 512 characters"
        }
      ],
      "properties": {
        "_links": {
          "$ref": "#/definitions/_linksAll"
        },
        "tppMessages": {
          "items": {
            "$ref": "#/definitions/tppMessage409_PIS"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Error409_NG_SB": {
      "description": "NextGenPSD2 specific definition of reporting error information in case of a HTTP error code 409.\n",
      "example": [
        {
          "category": "ERROR",
          "code": "STATUS_INVALID",
          "text": "additional text information of the ASPSP up to 512 characters"
        }
      ],
      "properties": {
        "_links": {
          "$ref": "#/definitions/_linksAll"
        },
        "tppMessages": {
          "items": {
            "$ref": "#/definitions/tppMessage409_SB"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Error409_PIIS": {
      "description": "Standardised definition of reporting error information according to [RFC7807] \nin case of a HTTP error code 409 for PIIS.\n",
      "properties": {
        "_links": {
          "$ref": "#/definitions/_linksAll"
        },
        "additionalErrors": {
          "description": "Array of Error Information Blocks.\n\nMight be used if more than one error is to be communicated\n",
          "items": {
            "description": "This is a data element to support the declaration of additional errors in the context of [RFC7807].",
            "properties": {
              "code": {
                "$ref": "#/definitions/MessageCode409_PIIS"
              },
              "detail": {
                "$ref": "#/definitions/tppErrorDetail"
              },
              "title": {
                "$ref": "#/definitions/tppErrorTitle"
              }
            },
            "required": [
              "code"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "code": {
          "$ref": "#/definitions/MessageCode409_PIIS"
        },
        "detail": {
          "description": "Detailed human readable text specific to this instance of the error. \nXPath might be used to point to the issue generating the error in addition.\nRemark for Future: In future, a dedicated field might be introduced for the XPath.\n",
          "maxLength": 512,
          "type": "string"
        },
        "title": {
          "description": "Short human readable description of error type. \nCould be in local language. \nTo be provided by ASPSPs.\n",
          "maxLength": 70,
          "type": "string"
        },
        "type": {
          "description": "A URI reference [RFC3986] that identifies the problem type. \nRemark For Future: These URI will be provided by NextGenPSD2 in future.\n",
          "format": "uri",
          "maxLength": 70,
          "type": "string"
        }
      },
      "required": [
        "type",
        "code"
      ],
      "type": "object"
    },
    "Error409_PIS": {
      "description": "Standardised definition of reporting error information according to [RFC7807] \nin case of a HTTP error code 409 for PIS.\n",
      "properties": {
        "_links": {
          "$ref": "#/definitions/_linksAll"
        },
        "additionalErrors": {
          "description": "Array of Error Information Blocks.\n\nMight be used if more than one error is to be communicated\n",
          "items": {
            "description": "This is a data element to support the declaration of additional errors in the context of [RFC7807].",
            "properties": {
              "code": {
                "$ref": "#/definitions/MessageCode409_PIS"
              },
              "detail": {
                "$ref": "#/definitions/tppErrorDetail"
              },
              "title": {
                "$ref": "#/definitions/tppErrorTitle"
              }
            },
            "required": [
              "code"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "code": {
          "$ref": "#/definitions/MessageCode409_PIS"
        },
        "detail": {
          "description": "Detailed human readable text specific to this instance of the error. \nXPath might be used to point to the issue generating the error in addition.\nRemark for Future: In future, a dedicated field might be introduced for the XPath.\n",
          "maxLength": 512,
          "type": "string"
        },
        "title": {
          "description": "Short human readable description of error type. \nCould be in local language. \nTo be provided by ASPSPs.\n",
          "maxLength": 70,
          "type": "string"
        },
        "type": {
          "description": "A URI reference [RFC3986] that identifies the problem type. \nRemark For Future: These URI will be provided by NextGenPSD2 in future.\n",
          "format": "uri",
          "maxLength": 70,
          "type": "string"
        }
      },
      "required": [
        "type",
        "code"
      ],
      "type": "object"
    },
    "Error409_SB": {
      "description": "Standardised definition of reporting error information according to [RFC7807] \nin case of a HTTP error code 409 for signing baskets.\n",
      "properties": {
        "_links": {
          "$ref": "#/definitions/_linksAll"
        },
        "additionalErrors": {
          "description": "Array of Error Information Blocks.\n\nMight be used if more than one error is to be communicated\n",
          "items": {
            "description": "This is a data element to support the declaration of additional errors in the context of [RFC7807].",
            "properties": {
              "code": {
                "$ref": "#/definitions/MessageCode409_SB"
              },
              "detail": {
                "$ref": "#/definitions/tppErrorDetail"
              },
              "title": {
                "$ref": "#/definitions/tppErrorTitle"
              }
            },
            "required": [
              "code"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "code": {
          "$ref": "#/definitions/MessageCode409_SB"
        },
        "detail": {
          "description": "Detailed human readable text specific to this instance of the error. \nXPath might be used to point to the issue generating the error in addition.\nRemark for Future: In future, a dedicated field might be introduced for the XPath.\n",
          "maxLength": 512,
          "type": "string"
        },
        "title": {
          "description": "Short human readable description of error type. \nCould be in local language. \nTo be provided by ASPSPs.\n",
          "maxLength": 70,
          "type": "string"
        },
        "type": {
          "description": "A URI reference [RFC3986] that identifies the problem type. \nRemark For Future: These URI will be provided by NextGenPSD2 in future.\n",
          "format": "uri",
          "maxLength": 70,
          "type": "string"
        }
      },
      "required": [
        "type",
        "code"
      ],
      "type": "object"
    },
    "Error429_AIS": {
      "description": "Standardised definition of reporting error information according to [RFC7807] \nin case of a HTTP error code 429 for AIS.\n",
      "properties": {
        "_links": {
          "$ref": "#/definitions/_linksAll"
        },
        "additionalErrors": {
          "description": "Array of Error Information Blocks.\n\nMight be used if more than one error is to be communicated\n",
          "items": {
            "description": "This is a data element to support the declaration of additional errors in the context of [RFC7807] \nin case of a HTTP error code 429 for. \n",
            "properties": {
              "code": {
                "$ref": "#/definitions/MessageCode429_AIS"
              },
              "detail": {
                "$ref": "#/definitions/tppErrorDetail"
              },
              "title": {
                "$ref": "#/definitions/tppErrorTitle"
              }
            },
            "required": [
              "code"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "code": {
          "$ref": "#/definitions/MessageCode429_AIS"
        },
        "detail": {
          "description": "Detailed human readable text specific to this instance of the error. \nXPath might be used to point to the issue generating the error in addition.\nRemark for Future: In future, a dedicated field might be introduced for the XPath.\n",
          "maxLength": 512,
          "type": "string"
        },
        "title": {
          "description": "Short human readable description of error type. \nCould be in local language. \nTo be provided by ASPSPs.\n",
          "maxLength": 70,
          "type": "string"
        },
        "type": {
          "description": "A URI reference [RFC3986] that identifies the problem type. \nRemark For Future: These URI will be provided by NextGenPSD2 in future.\n",
          "format": "uri",
          "maxLength": 70,
          "type": "string"
        }
      },
      "required": [
        "type",
        "code"
      ],
      "type": "object"
    },
    "Error429_NG_AIS": {
      "description": "NextGenPSD2 specific definition of reporting error information in case of a HTTP error code 429.\n",
      "example": [
        {
          "category": "ERROR",
          "code": "ACCESS_EXCEEDED",
          "text": "additional text information of the ASPSP up to 512 characters"
        }
      ],
      "properties": {
        "_links": {
          "$ref": "#/definitions/_linksAll"
        },
        "tppMessages": {
          "items": {
            "$ref": "#/definitions/tppMessage429_AIS"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "MessageCode2XX": {
      "description": "Message codes for HTTP Error codes 2XX.",
      "enum": [
        "WARNING"
      ],
      "type": "string"
    },
    "MessageCode400_AIS": {
      "description": "Message codes defined for AIS for HTTP Error code 400 (BAD_REQUEST).",
      "enum": [
        "FORMAT_ERROR",
        "PARAMETER_NOT_CONSISTENT",
        "PARAMETER_NOT_SUPPORTED",
        "SERVICE_INVALID",
        "RESOURCE_UNKNOWN",
        "RESOURCE_EXPIRED",
        "RESOURCE_BLOCKED",
        "TIMESTAMP_INVALID",
        "PERIOD_INVALID",
        "SCA_METHOD_UNKNOWN",
        "CONSENT_UNKNOWN",
        "SESSIONS_NOT_SUPPORTED"
      ],
      "type": "string"
    },
    "MessageCode400_PIIS": {
      "description": "Message codes defined for PIIS for HTTP Error code 400 (BAD_REQUEST).",
      "enum": [
        "FORMAT_ERROR",
        "PARAMETER_NOT_CONSISTENT",
        "PARAMETER_NOT_SUPPORTED",
        "SERVICE_INVALID",
        "RESOURCE_UNKNOWN",
        "RESOURCE_EXPIRED",
        "RESOURCE_BLOCKED",
        "TIMESTAMP_INVALID",
        "PERIOD_INVALID",
        "SCA_METHOD_UNKNOWN",
        "CONSENT_UNKNOWN",
        "CARD_INVALID",
        "NO_PIIS_ACTIVATION"
      ],
      "type": "string"
    },
    "MessageCode400_PIS": {
      "description": "Message codes defined for PIS for HTTP Error code 400 (BAD_REQUEST).",
      "enum": [
        "FORMAT_ERROR",
        "PARAMETER_NOT_CONSISTENT",
        "PARAMETER_NOT_SUPPORTED",
        "SERVICE_INVALID",
        "RESOURCE_UNKNOWN",
        "RESOURCE_EXPIRED",
        "RESOURCE_BLOCKED",
        "TIMESTAMP_INVALID",
        "PERIOD_INVALID",
        "SCA_METHOD_UNKNOWN",
        "CONSENT_UNKNOWN",
        "PAYMENT_FAILED",
        "EXECUTION_DATE_INVALID"
      ],
      "type": "string"
    },
    "MessageCode400_SB": {
      "description": "Message codes defined for signing baskets for HTTP Error code 400 (BAD_REQUEST).",
      "enum": [
        "FORMAT_ERROR",
        "PARAMETER_NOT_CONSISTENT",
        "PARAMETER_NOT_SUPPORTED",
        "SERVICE_INVALID",
        "RESOURCE_UNKNOWN",
        "RESOURCE_EXPIRED",
        "RESOURCE_BLOCKED",
        "TIMESTAMP_INVALID",
        "PERIOD_INVALID",
        "SCA_METHOD_UNKNOWN",
        "CONSENT_UNKNOWN",
        "REFERENCE_MIX_INVALID"
      ],
      "type": "string"
    },
    "MessageCode401_AIS": {
      "description": "Message codes defined for AIS for HTTP Error code 401 (UNAUTHORIZED).",
      "enum": [
        "CERTIFICATE_INVALID",
        "CERTIFICATE_EXPIRED",
        "CERTIFICATE_BLOCKED",
        "CERTIFICATE_REVOKE",
        "CERTIFICATE_MISSING",
        "SIGNATURE_INVALID",
        "SIGNATURE_MISSING",
        "CORPORATE_ID_INVALID",
        "PSU_CREDENTIALS_INVALID",
        "CONSENT_INVALID",
        "CONSENT_EXPIRED",
        "TOKEN_UNKNOWN",
        "TOKEN_INVALID",
        "TOKEN_EXPIRED"
      ],
      "type": "string"
    },
    "MessageCode401_PIIS": {
      "description": "Message codes defined for PIIS for HTTP Error code 401 (UNAUTHORIZED).",
      "enum": [
        "CERTIFICATE_INVALID",
        "CERTIFICATE_EXPIRED",
        "CERTIFICATE_BLOCKED",
        "CERTIFICATE_REVOKE",
        "CERTIFICATE_MISSING",
        "SIGNATURE_INVALID",
        "SIGNATURE_MISSING",
        "CORPORATE_ID_INVALID",
        "PSU_CREDENTIALS_INVALID",
        "CONSENT_INVALID",
        "CONSENT_EXPIRED",
        "TOKEN_UNKNOWN",
        "TOKEN_INVALID",
        "TOKEN_EXPIRED"
      ],
      "type": "string"
    },
    "MessageCode401_PIS": {
      "description": "Message codes defined for PIS for HTTP Error code 401 (UNAUTHORIZED).",
      "enum": [
        "CERTIFICATE_INVALID",
        "CERTIFICATE_EXPIRED",
        "CERTIFICATE_BLOCKED",
        "CERTIFICATE_REVOKE",
        "CERTIFICATE_MISSING",
        "SIGNATURE_INVALID",
        "SIGNATURE_MISSING",
        "CORPORATE_ID_INVALID",
        "PSU_CREDENTIALS_INVALID",
        "CONSENT_INVALID",
        "CONSENT_EXPIRED",
        "TOKEN_UNKNOWN",
        "TOKEN_INVALID",
        "TOKEN_EXPIRED",
        "REQUIRED_KID_MISSING"
      ],
      "type": "string"
    },
    "MessageCode401_SB": {
      "description": "Message codes defined for signing baskets for HTTP Error code 401 (UNAUTHORIZED).",
      "enum": [
        "CERTIFICATE_INVALID",
        "CERTIFICATE_EXPIRED",
        "CERTIFICATE_BLOCKED",
        "CERTIFICATE_REVOKE",
        "CERTIFICATE_MISSING",
        "SIGNATURE_INVALID",
        "SIGNATURE_MISSING",
        "CORPORATE_ID_INVALID",
        "PSU_CREDENTIALS_INVALID",
        "CONSENT_INVALID",
        "CONSENT_EXPIRED",
        "TOKEN_UNKNOWN",
        "TOKEN_INVALID",
        "TOKEN_EXPIRED"
      ],
      "type": "string"
    },
    "MessageCode403_AIS": {
      "description": "Message codes defined for AIS for HTTP Error code 403 (FORBIDDEN).",
      "enum": [
        "CONSENT_UNKNOWN",
        "SERVICE_BLOCKED",
        "RESOURCE_UNKNOWN",
        "RESOURCE_EXPIRED"
      ],
      "type": "string"
    },
    "MessageCode403_PIIS": {
      "description": "Message codes defined for PIIS for HTTP Error code 403 (FORBIDDEN).",
      "enum": [
        "CONSENT_UNKNOWN",
        "SERVICE_BLOCKED",
        "RESOURCE_UNKNOWN",
        "RESOURCE_EXPIRED"
      ],
      "type": "string"
    },
    "MessageCode403_PIS": {
      "description": "Message codes defined defined for PIS for PIS for HTTP Error code 403 (FORBIDDEN).",
      "enum": [
        "CONSENT_UNKNOWN",
        "SERVICE_BLOCKED",
        "RESOURCE_UNKNOWN",
        "RESOURCE_EXPIRED",
        "PRODUCT_INVALID"
      ],
      "type": "string"
    },
    "MessageCode403_SB": {
      "description": "Message codes defined for signing baskets for HTTP Error code 403 (FORBIDDEN).",
      "enum": [
        "CONSENT_UNKNOWN",
        "SERVICE_BLOCKED",
        "RESOURCE_UNKNOWN",
        "RESOURCE_EXPIRED"
      ],
      "type": "string"
    },
    "MessageCode404_AIS": {
      "description": "Message codes defined for AIS for HTTP Error code 404 (NOT FOUND).",
      "enum": [
        "RESOURCE_UNKNOWN"
      ],
      "type": "string"
    },
    "MessageCode404_PIIS": {
      "description": "Message codes defined for PIIS for HTTP Error code 404 (NOT FOUND).",
      "enum": [
        "RESOURCE_UNKNOWN"
      ],
      "type": "string"
    },
    "MessageCode404_PIS": {
      "description": "Message codes defined for PIS for HTTP Error code 404 (NOT FOUND).",
      "enum": [
        "RESOURCE_UNKNOWN",
        "PRODUCT_UNKNOWN"
      ],
      "type": "string"
    },
    "MessageCode404_SB": {
      "description": "Message codes defined for signing baskets for HTTP Error code 404 (NOT FOUND).",
      "enum": [
        "RESOURCE_UNKNOWN"
      ],
      "type": "string"
    },
    "MessageCode405_AIS": {
      "description": "Message codes defined for AIS for HTTP Error code 405 (METHOD NOT ALLOWED).",
      "enum": [
        "SERVICE_INVALID"
      ],
      "type": "string"
    },
    "MessageCode405_PIIS": {
      "description": "Message codes defined for PIIS for HTTP Error code 405 (METHOD NOT ALLOWED).",
      "enum": [
        "SERVICE_INVALID"
      ],
      "type": "string"
    },
    "MessageCode405_PIS": {
      "description": "Message codes defined for payment cancelations PIS for HTTP Error code 405 (METHOD NOT ALLOWED).",
      "enum": [
        "SERVICE_INVALID"
      ],
      "type": "string"
    },
    "MessageCode405_PIS_CANC": {
      "description": "Message codes defined for payment cancelations PIS for HTTP Error code 405 (METHOD NOT ALLOWED).",
      "enum": [
        "CANCELLATION_INVALID",
        "SERVICE_INVALID"
      ],
      "type": "string"
    },
    "MessageCode405_SB": {
      "description": "Message codes defined for SB for HTTP Error code 405 (METHOD NOT ALLOWED).",
      "enum": [
        "SERVICE_INVALID"
      ],
      "type": "string"
    },
    "MessageCode406_AIS": {
      "description": "Message codes defined for AIS for HTTP Error code 406 (NOT ACCEPTABLE).",
      "enum": [
        "REQUESTED_FORMATS_INVALID"
      ],
      "type": "string"
    },
    "MessageCode409_AIS": {
      "description": "Message codes defined for AIS for HTTP Error code 409 (CONFLICT).",
      "enum": [
        "STATUS_INVALID"
      ],
      "type": "string"
    },
    "MessageCode409_PIIS": {
      "description": "Message codes defined for PIIS for HTTP Error code 409 (CONFLICT).",
      "enum": [
        "STATUS_INVALID"
      ],
      "type": "string"
    },
    "MessageCode409_PIS": {
      "description": "Message codes defined for PIS for HTTP Error code 409 (CONFLICT).",
      "enum": [
        "STATUS_INVALID"
      ],
      "type": "string"
    },
    "MessageCode409_SB": {
      "description": "Message codes defined for signing baskets for HTTP Error code 409 (CONFLICT).",
      "enum": [
        "REFERENCE_STATUS_INVALID",
        "STATUS_INVALID"
      ],
      "type": "string"
    },
    "MessageCode429_AIS": {
      "description": "Message codes for HTTP Error code 429 (TOO MANY REQUESTS).",
      "enum": [
        "ACCESS_EXCEEDED"
      ],
      "type": "string"
    },
    "_linksAccountDetails": {
      "additionalProperties": {
        "$ref": "#/definitions/hrefType"
      },
      "description": "Links to the account, which can be directly used for retrieving account information from this dedicated account.\n\nLinks to \"balances\" and/or \"transactions\"\n\nThese links are only supported, when the corresponding consent has been already granted.\n",
      "properties": {
        "balances": {
          "$ref": "#/definitions/hrefType"
        },
        "transactions": {
          "$ref": "#/definitions/hrefType"
        }
      },
      "type": "object"
    },
    "_linksAccountReport": {
      "additionalProperties": {
        "$ref": "#/definitions/hrefType"
      },
      "properties": {
        "account": {
          "$ref": "#/definitions/hrefType"
        },
        "first": {
          "$ref": "#/definitions/hrefType"
        },
        "last": {
          "$ref": "#/definitions/hrefType"
        },
        "next": {
          "$ref": "#/definitions/hrefType"
        },
        "previous": {
          "$ref": "#/definitions/hrefType"
        }
      },
      "required": [
        "account"
      ],
      "type": "object"
    },
    "_linksAll": {
      "additionalProperties": {
        "$ref": "#/definitions/hrefType"
      },
      "description": "A _link object with all availabel link types\n",
      "properties": {
        "account": {
          "$ref": "#/definitions/hrefType"
        },
        "authoriseTransaction": {
          "$ref": "#/definitions/hrefType"
        },
        "balances": {
          "$ref": "#/definitions/hrefType"
        },
        "cardAccount": {
          "$ref": "#/definitions/hrefType"
        },
        "cardTransactions": {
          "$ref": "#/definitions/hrefType"
        },
        "download": {
          "$ref": "#/definitions/hrefType"
        },
        "first": {
          "$ref": "#/definitions/hrefType"
        },
        "last": {
          "$ref": "#/definitions/hrefType"
        },
        "next": {
          "$ref": "#/definitions/hrefType"
        },
        "previous": {
          "$ref": "#/definitions/hrefType"
        },
        "scaOAuth": {
          "$ref": "#/definitions/hrefType"
        },
        "scaRedirect": {
          "$ref": "#/definitions/hrefType"
        },
        "scaStatus": {
          "$ref": "#/definitions/hrefType"
        },
        "selectAuthenticationMethod": {
          "$ref": "#/definitions/hrefType"
        },
        "self": {
          "$ref": "#/definitions/hrefType"
        },
        "startAuthorisation": {
          "$ref": "#/definitions/hrefType"
        },
        "startAuthorisationWithAuthenticationMethodSelection": {
          "$ref": "#/definitions/hrefType"
        },
        "startAuthorisationWithEncryptedPsuAuthentication": {
          "$ref": "#/definitions/hrefType"
        },
        "startAuthorisationWithProprietaryData": {
          "$ref": "#/definitions/hrefType"
        },
        "startAuthorisationWithPsuAuthentication": {
          "$ref": "#/definitions/hrefType"
        },
        "startAuthorisationWithPsuIdentification": {
          "$ref": "#/definitions/hrefType"
        },
        "startAuthorisationWithTransactionAuthorisation": {
          "$ref": "#/definitions/hrefType"
        },
        "status": {
          "$ref": "#/definitions/hrefType"
        },
        "transactionDetails": {
          "$ref": "#/definitions/hrefType"
        },
        "transactions": {
          "$ref": "#/definitions/hrefType"
        },
        "updateEncryptedPsuAuthentication": {
          "$ref": "#/definitions/hrefType"
        },
        "updateProprietaryData": {
          "$ref": "#/definitions/hrefType"
        },
        "updatePsuAuthentication": {
          "$ref": "#/definitions/hrefType"
        },
        "updatePsuIdentification": {
          "$ref": "#/definitions/hrefType"
        }
      },
      "type": "object"
    },
    "_linksCardAccountReport": {
      "additionalProperties": {
        "$ref": "#/definitions/hrefType"
      },
      "properties": {
        "cardAccount": {
          "$ref": "#/definitions/hrefType"
        },
        "first": {
          "$ref": "#/definitions/hrefType"
        },
        "last": {
          "$ref": "#/definitions/hrefType"
        },
        "next": {
          "$ref": "#/definitions/hrefType"
        },
        "previous": {
          "$ref": "#/definitions/hrefType"
        }
      },
      "required": [
        "cardAccount"
      ],
      "type": "object"
    },
    "_linksConsents": {
      "additionalProperties": {
        "$ref": "#/definitions/hrefType"
      },
      "description": "A list of hyperlinks to be recognised by the TPP.\n\nType of links admitted in this response (which might be extended by single ASPSPs as indicated in its XS2A \ndocumentation):\n  - 'scaRedirect': \n    In case of an SCA Redirect Approach, the ASPSP is transmitting the link to which to redirect the \n    PSU browser.\n  - 'scaOAuth': \n    In case of an OAuth2 based Redirect Approach, the ASPSP is transmitting the link where the configuration \n    of the OAuth2 Server is defined. \n    The configuration follows the OAuth 2.0 Authorisation Server Metadata specification. \n  - 'startAuthorisation': \n    In case, where an explicit start of the transaction authorisation is needed, \n    but no more data needs to be updated (no authentication method to be selected, \n    no PSU identification nor PSU authentication data to be uploaded).\n  - 'startAuthorisationWithPsuIdentification': \n    The link to the authorisation end-point, where the authorisation sub-resource has to be generated \n    while uploading the PSU identification data.\n  - 'startAuthorisationWithPsuAuthentication':\n    The link to the authorisation end-point, where the authorisation sub-resource has to be generated \n    while uploading the PSU authentication data.\n  * 'startAuthorisationWithEncryptedPsuAuthentication':\n    Same as startAuthorisactionWithPsuAuthentication where the authentication data need to be encrypted on \n    application layer in uploading.\n  - 'startAuthorisationWithAuthenticationMethodSelection':\n    The link to the authorisation end-point, where the authorisation sub-resource has to be generated \n    while selecting the authentication method. This link is contained under exactly the same conditions \n    as the data element 'scaMethods' \n  - 'startAuthorisationWithTransactionAuthorisation':\n    The link to the authorisation end-point, where the authorisation sub-resource has to be generated \n    while authorising the transaction e.g. by uploading an OTP received by SMS.\n  - 'self': \n    The link to the Establish Account Information Consent resource created by this request. \n    This link can be used to retrieve the resource data. \n  - 'status': \n    The link to retrieve the status of the account information consent.\n  - 'scaStatus': The link to retrieve the scaStatus of the corresponding authorisation sub-resource. \n    This link is only contained, if an authorisation sub-resource has been already created.\n",
      "properties": {
        "scaOAuth": {
          "$ref": "#/definitions/hrefType"
        },
        "scaRedirect": {
          "$ref": "#/definitions/hrefType"
        },
        "scaStatus": {
          "$ref": "#/definitions/hrefType"
        },
        "self": {
          "$ref": "#/definitions/hrefType"
        },
        "startAuthorisation": {
          "$ref": "#/definitions/hrefType"
        },
        "startAuthorisationWithAuthenticationMethodSelection": {
          "$ref": "#/definitions/hrefType"
        },
        "startAuthorisationWithEncryptedPsuAuthentication": {
          "$ref": "#/definitions/hrefType"
        },
        "startAuthorisationWithPsuAuthentication": {
          "$ref": "#/definitions/hrefType"
        },
        "startAuthorisationWithPsuIdentification": {
          "$ref": "#/definitions/hrefType"
        },
        "startAuthorisationWithTransactionAuthorisation": {
          "$ref": "#/definitions/hrefType"
        },
        "status": {
          "$ref": "#/definitions/hrefType"
        }
      },
      "type": "object"
    },
    "_linksDownload": {
      "additionalProperties": {
        "$ref": "#/definitions/hrefType"
      },
      "description": "A list of hyperlinks to be recognised by the TPP.\n\nType of links admitted in this response:\n  - \"download\": a link to a resource, where the transaction report might be downloaded from in \n  case where transaction reports have a huge size.\n\nRemark: This feature shall only be used where camt-data is requested which has a huge size.\n",
      "properties": {
        "download": {
          "$ref": "#/definitions/hrefType"
        }
      },
      "required": [
        "download"
      ],
      "type": "object"
    },
    "_linksPaymentInitiation": {
      "additionalProperties": {
        "$ref": "#/definitions/hrefType"
      },
      "description": "A list of hyperlinks to be recognised by the TPP.\nThe actual hyperlinks used in the response depend on the dynamical decisions of the ASPSP when\nprocessing the request.\n\n**Remark:** All links can be relative or full links, to be decided by the ASPSP.\n\nType of links admitted in this response, (further links might be added for ASPSP defined extensions):\n\n* 'scaRedirect': \n  In case of an SCA Redirect Approach, the ASPSP is transmitting the link to which to redirect the PSU browser.\n* 'scaOAuth': \n  In case of a SCA OAuth2 Approach, the ASPSP is transmitting the URI where the configuration of the Authorisation\n  Server can be retrieved. The configuration follows the OAuth 2.0 Authorisation Server Metadata specification.\n* 'startAuthorisation': \n  In case, where an explicit start of the transaction authorisation is needed, but no more data needs to be updated \n  (no authentication method to be selected, no PSU identification nor PSU authentication data to be uploaded).\n* 'startAuthorisationWithPsuIdentification': \n  The link to the authorisation end-point, where the authorisation sub-resource has to be generated while \n  uploading the PSU identification data.\n* 'startAuthorisationWithPsuAuthentication': \n  The link to the authorisation end-point, where the authorisation sub-resource has to be generated while \n  uploading the PSU authentication data.\n  * 'startAuthorisationWithEncryptedPsuAuthentication':\n    Same as startAuthorisactionWithPsuAuthentication where the authentication data need to be encrypted on \n    application layer in uploading.\n* 'startAuthorisationWithAuthenticationMethodSelection': \n  The link to the authorisation end-point, where the authorisation sub-resource has to be generated while \n  selecting the authentication method. \n  This link is contained under exactly the same conditions as the data element \"scaMethods\"\n* 'startAuthorisationWithTransactionAuthorisation':\n  The link to the authorisation end-point, where the authorisation sub-resource has to be generated while \n  authorising the transaction e.g. by uploading an OTP received by SMS.\n* 'self': \n  The link to the payment initiation resource created by this request.\n  This link can be used to retrieve the resource data.\n* 'status': \n  The link to retrieve the transaction status of the payment initiation.\n* 'scaStatus': \n  The link to retrieve the scaStatus of the corresponding authorisation sub-resource. \n  This link is only contained, if an authorisation sub-resource has been already created.\n",
      "example": {
        "scaRedirect": {
          "href": "https://www.testbank.com/asdfasdfasdf"
        },
        "self": {
          "href": "/v1/payments/sepa-credit-transfers/1234-wertiq-983"
        }
      },
      "properties": {
        "scaOAuth": {
          "$ref": "#/definitions/hrefType"
        },
        "scaRedirect": {
          "$ref": "#/definitions/hrefType"
        },
        "scaStatus": {
          "$ref": "#/definitions/hrefType"
        },
        "self": {
          "$ref": "#/definitions/hrefType"
        },
        "startAuthorisation": {
          "$ref": "#/definitions/hrefType"
        },
        "startAuthorisationWithAuthenticationMethodSelection": {
          "$ref": "#/definitions/hrefType"
        },
        "startAuthorisationWithEncryptedPsuAuthentication": {
          "$ref": "#/definitions/hrefType"
        },
        "startAuthorisationWithPsuAuthentication": {
          "$ref": "#/definitions/hrefType"
        },
        "startAuthorisationWithPsuIdentification": {
          "$ref": "#/definitions/hrefType"
        },
        "startAuthorisationWithTransactionAuthorisation": {
          "$ref": "#/definitions/hrefType"
        },
        "status": {
          "$ref": "#/definitions/hrefType"
        }
      },
      "type": "object"
    },
    "_linksPaymentInitiationCancel": {
      "additionalProperties": {
        "$ref": "#/definitions/hrefType"
      },
      "description": "A list of hyperlinks to be recognised by the TPP. The actual hyperlinks used in the response depend on the \ndynamical decisions of the ASPSP when processing the request.\n\nRemark: All links can be relative or full links, to be decided by the ASPSP.\n\nType of links admitted in this response, (further links might be added for ASPSP defined extensions):\n\n  * 'startAuthorisation': \n    In case, where just the authorisation process of the cancellation needs to be started, \n    but no additional data needs to be updated for time being (no authentication method to be selected, \n    no PSU identification nor PSU authentication data to be uploaded).\n  * 'startAuthorisationWithPsuIdentification': \n    In case where a PSU Identification needs to be updated when starting the cancellation authorisation: \n    The link to the cancellation-authorisations end-point, where the cancellation sub-resource has to be \n    generated while uploading the PSU identification data.\n  * 'startAuthorisationWithPsuAuthentication': \n    In case of a yet to be created authorisation sub-resource: The link to the cancalation authorisation end-point, \n    where the authorisation sub-resource has to be generated while uploading the PSU authentication data.\n  * 'startAuthorisationWithEncryptedPsuAuthentication':\n    Same as startAuthorisactionWithPsuAuthentication where the authentication data need to be encrypted on \n    application layer in uploading.\n  * 'startAuthorisationWithAuthenticationMethodSelection':\n    The link to the authorisation end-point, where the cancellation-authorisation sub-resource has to be \n    generated while selecting the authentication method. This link is contained under exactly the same \n    conditions as the data element 'scaMethods'\n",
      "properties": {
        "startAuthorisation": {
          "$ref": "#/definitions/hrefType"
        },
        "startAuthorisationWithAuthenticationMethodSelection": {
          "$ref": "#/definitions/hrefType"
        },
        "startAuthorisationWithEncryptedPsuAuthentication": {
          "$ref": "#/definitions/hrefType"
        },
        "startAuthorisationWithPsuAuthentication": {
          "$ref": "#/definitions/hrefType"
        },
        "startAuthorisationWithPsuIdentification": {
          "$ref": "#/definitions/hrefType"
        }
      },
      "type": "object"
    },
    "_linksPaymentInitiationMultiLevelSca": {
      "additionalProperties": {
        "$ref": "#/definitions/hrefType"
      },
      "description": "Type of links admitted in this response, (further links might be added for ASPSP defined extensions):\n\n  * 'startAuthorisation': \n    In case, where an explicit start of the transaction authorisation is needed, but no more data needs to be updated (no authentication method to be selected, no PSU identification nor PSU authentication data to be uploaded).\n  * 'startAuthorisationWithPsuIdentification': \n    The link to the authorisation end-point, where the authorisation sub-resource has to be generated while uploading the PSU identification data.\n  * 'startAuthorisationWithPsuAuthentication':\n    The link to the authorisation end-point, where an authorisation sub-resource has to be generated while uploading the PSU authentication data.\n  * 'startAuthorisationWithEncryptedPsuAuthentication':\n    Same as startAuthorisactionWithPsuAuthentication where the authentication data need to be encrypted on \n    application layer in uploading.\n  * 'self': \n    The link to the payment initiation resource created by this request. This link can be used to retrieve the resource data. \n  * 'status': \n    The link to retrieve the transaction status of the payment initiation.\n",
      "properties": {
        "self": {
          "$ref": "#/definitions/hrefType"
        },
        "startAuthorisation": {
          "$ref": "#/definitions/hrefType"
        },
        "startAuthorisationWithPsuAuthentication": {
          "$ref": "#/definitions/hrefType"
        },
        "startAuthorisationWithPsuIdentification": {
          "$ref": "#/definitions/hrefType"
        },
        "status": {
          "$ref": "#/definitions/hrefType"
        }
      },
      "type": "object"
    },
    "_linksSelectPsuAuthenticationMethod": {
      "additionalProperties": {
        "$ref": "#/definitions/hrefType"
      },
      "description": "A list of hyperlinks to be recognised by the TPP. The actual hyperlinks used in \nthe response depend on the dynamical decisions of the ASPSP when processing the request.\n\n**Remark:** All links can be relative or full links, to be decided by the ASPSP. \n\n**Remark:** This method can be applied before or after PSU identification. \nThis leads to many possible hyperlink responses.\nType of links admitted in this response, (further links might be added for ASPSP defined \nextensions):\n\n- \"scaRedirect\": \n  In case of an SCA Redirect Approach, the ASPSP is transmitting the link to which to \n  redirect the PSU browser.\n- \"scaOAuth\": \n  In case of a SCA OAuth2 Approach, the ASPSP is transmitting the URI where the \n  configuration of the Authorisation Server can be retrieved. \n  The configuration follows the OAuth 2.0 Authorisation Server Metadata specification.\n- \"updatePsuIdentification\": \n  The link to the authorisation or cancellation authorisation sub-resource, \n  where PSU identification data needs to be uploaded.\n- \"updatePsuAuthentication\":\n  The link to the authorisation or cancellation authorisation sub-resource, \n  where PSU authentication data needs to be uploaded.\n\"authoriseTransaction\":\n  The link to the authorisation or cancellation authorisation sub-resource, \n  where the authorisation data has to be uploaded, e.g. the TOP received by SMS. \n\"scaStatus\": \n  The link to retrieve the scaStatus of the corresponding authorisation sub-resource.\n",
      "properties": {
        "authoriseTransaction": {
          "$ref": "#/definitions/hrefType"
        },
        "scaOAuth": {
          "$ref": "#/definitions/hrefType"
        },
        "scaRedirect": {
          "$ref": "#/definitions/hrefType"
        },
        "scaStatus": {
          "$ref": "#/definitions/hrefType"
        },
        "updatePsuAuthentication": {
          "$ref": "#/definitions/hrefType"
        },
        "updatePsuIdentification": {
          "$ref": "#/definitions/hrefType"
        }
      },
      "type": "object"
    },
    "_linksSigningBasket": {
      "description": "A list of hyperlinks to be recognised by the TPP. The actual hyperlinks used in the \nresponse depend on the dynamical decisions of the ASPSP when processing the request.\n\nRemark: All links can be relative or full links, to be decided by the ASPSP.\nType of links admitted in this response, (further links might be added for ASPSP defined \nextensions):\n\n  * 'scaRedirect': \n    In case of an SCA Redirect Approach, the ASPSP is transmitting the link to \n    which to redirect the PSU browser.\n  * 'scaOAuth': \n    In case of a SCA OAuth2 Approach, the ASPSP is transmitting the URI where the configuration of \n    the Authorisation Server can be retrieved. The configuration follows the \n    OAuth 2.0 Authorisation Server Metadata specification.\n  * 'startAuthorisation': \n    In case, where an explicit start of the transaction authorisation is needed, \n    but no more data needs to be updated (no authentication method to be selected, \n    no PSU identification nor PSU authentication data to be uploaded).\n  * 'startAuthorisationWithPsuIdentification': \n    The link to the authorisation end-point, where the authorisation sub-resource \n    has to be generated while uploading the PSU identification data.\n  * 'startAuthorisationWithPsuAuthentication':\n    The link to the authorisation end-point, where the authorisation sub-resource \n    has to be generated while uploading the PSU authentication data.\n  * 'startAuthorisationWithEncryptedPsuAuthentication':\n    The link to the authorisation end-point, where the authorisation sub-resource has \n    to be generated while uploading the encrypted PSU authentication data.\n  * 'startAuthorisationWithAuthenticationMethodSelection':\n    The link to the authorisation end-point, where the authorisation sub-resource \n    has to be generated while selecting the authentication method. \n    This link is contained under exactly the same conditions as the data element 'scaMethods' \n  * 'startAuthorisationWithTransactionAuthorisation':\n    The link to the authorisation end-point, where the authorisation sub-resource \n    has to be generated while authorising the transaction e.g. by uploading an \n    OTP received by SMS.\n  * 'self': \n    The link to the payment initiation resource created by this request. \n    This link can be used to retrieve the resource data. \n  * 'status': \n    The link to retrieve the transaction status of the payment initiation.\n  * 'scaStatus': \n    The link to retrieve the scaStatus of the corresponding authorisation sub-resource. \n    This link is only contained, if an authorisation sub-resource has been already created.\n",
      "properties": {
        "scaOAuth": {
          "$ref": "#/definitions/hrefType"
        },
        "scaRedirect": {
          "$ref": "#/definitions/hrefType"
        },
        "scaStatus": {
          "$ref": "#/definitions/hrefType"
        },
        "self": {
          "$ref": "#/definitions/hrefType"
        },
        "startAuthorisation": {
          "$ref": "#/definitions/hrefType"
        },
        "startAuthorisationWithAuthenticationMethodSelection": {
          "$ref": "#/definitions/hrefType"
        },
        "startAuthorisationWithEncryptedPsuAuthentication": {
          "$ref": "#/definitions/hrefType"
        },
        "startAuthorisationWithPsuAuthentication": {
          "$ref": "#/definitions/hrefType"
        },
        "startAuthorisationWithPsuIdentification": {
          "$ref": "#/definitions/hrefType"
        },
        "startAuthorisationWithTransactionAuthorisation": {
          "$ref": "#/definitions/hrefType"
        },
        "status": {
          "$ref": "#/definitions/hrefType"
        }
      },
      "type": "object"
    },
    "_linksStartScaProcess": {
      "additionalProperties": {
        "$ref": "#/definitions/hrefType"
      },
      "description": "A list of hyperlinks to be recognised by the TPP. The actual hyperlinks used in the \nresponse depend on the dynamical decisions of the ASPSP when processing the request.\n\n**Remark:** All links can be relative or full links, to be decided by the ASPSP.\n\nType of links admitted in this response, (further links might be added for ASPSP defined \nextensions):\n\n- 'scaRedirect': \n  In case of an SCA Redirect Approach, the ASPSP is transmitting the link to which to \n  redirect the PSU browser.\n- 'scaOAuth': \n  In case of a SCA OAuth2 Approach, the ASPSP is transmitting the URI where the configuration of the Authorisation Server can be retrieved. The configuration follows the OAuth 2.0 Authorisation Server Metadata specification.\n- 'updatePsuIdentification': \n  The link to the authorisation or cancellation authorisation sub-resource, \n  where PSU identification data needs to be uploaded.\n- 'startAuthorisationWithPsuAuthentication':\n  The link to the authorisation or cancellation authorisation sub-resource, \n  where PSU authentication data needs to be uploaded.\n  * 'startAuthorisationWithEncryptedPsuAuthentication':\n    Same as startAuthorisactionWithPsuAuthentication where the authentication data need to be encrypted on \n    application layer in uploading.\n- 'selectAuthenticationMethod':\n  The link to the authorisation or cancellation authorisation sub-resource, \n  where the selected authentication method needs to be uploaded. \n  This link is contained under exactly the same conditions as the data element 'scaMethods'.\n- 'authoriseTransaction':\n  The link to the authorisation or cancellation authorisation sub-resource, \n  where the authorisation data has to be uploaded, e.g. the TOP received by SMS. \n- 'scaStatus': \n  The link to retrieve the scaStatus of the corresponding authorisation sub-resource. \n",
      "properties": {
        "authoriseTransaction": {
          "$ref": "#/definitions/hrefType"
        },
        "scaOAuth": {
          "$ref": "#/definitions/hrefType"
        },
        "scaRedirect": {
          "$ref": "#/definitions/hrefType"
        },
        "scaStatus": {
          "$ref": "#/definitions/hrefType"
        },
        "selectAuthenticationMethod": {
          "$ref": "#/definitions/hrefType"
        },
        "startAuthorisationWithEncryptedPsuAuthentication": {
          "$ref": "#/definitions/hrefType"
        },
        "startAuthorisationWithPsuAuthentication": {
          "$ref": "#/definitions/hrefType"
        },
        "updatePsuIdentification": {
          "$ref": "#/definitions/hrefType"
        }
      },
      "type": "object"
    },
    "_linksTransactionDetails": {
      "additionalProperties": {
        "$ref": "#/definitions/hrefType"
      },
      "properties": {
        "transactionDetails": {
          "$ref": "#/definitions/hrefType"
        }
      },
      "required": [
        "transactionDetails"
      ],
      "type": "object"
    },
    "_linksUpdatePsuAuthentication": {
      "additionalProperties": {
        "$ref": "#/definitions/hrefType"
      },
      "description": "A list of hyperlinks to be recognised by the TPP. Might be contained, if several authentication methods \nare available for the PSU.\nType of links admitted in this response:\n  * 'selectAuthenticationMethod': \n    This is a link to a resource, where the TPP can select the applicable second factor authentication \n    methods for the PSU, if there were several available authentication methods. \n    This link is only contained, if the PSU is already identified or authenticated with the first relevant \n    factor or alternatively an access token, if SCA is required and if the PSU has a choice between different \n    authentication methods. \n    If this link is contained, then there is also the data element 'scaMethods' contained in the response body.\n  * 'authoriseTransaction': \n    The link to the resource, where the \"Transaction Authorisation Request\" is sent to. \n    This is the link to the resource which will authorise the transaction by checking the SCA authentication \n    data within the Embedded SCA approach.\n  * 'scaStatus': \n    The link to retrieve the scaStatus of the corresponding authorisation sub-resource.\n",
      "properties": {
        "authoriseTransaction": {
          "$ref": "#/definitions/hrefType"
        },
        "scaStatus": {
          "$ref": "#/definitions/hrefType"
        },
        "selectAuthenticationMethod": {
          "$ref": "#/definitions/hrefType"
        }
      },
      "type": "object"
    },
    "_linksUpdatePsuIdentification": {
      "additionalProperties": {
        "$ref": "#/definitions/hrefType"
      },
      "description": "A list of hyperlinks to be recognised by the TPP. The actual hyperlinks used in the response depend on the dynamical decisions of the ASPSP when processing the request.\n\n**Remark:** All links can be relative or full links, to be decided by the ASPSP.\n\nType of links admitted in this response, (further links might be added for ASPSP \ndefined extensions):\n\n- 'scaStatus': The link to retrieve the scaStatus of the corresponding authorisation sub-resource.\n",
      "properties": {
        "scaStatus": {
          "$ref": "#/definitions/hrefType"
        }
      },
      "type": "object"
    },
    "accountAccess": {
      "description": "Requested access services for a consent.\n",
      "properties": {
        "accounts": {
          "description": "Is asking for detailed account information. \n\nIf the array is empty, the TPP is asking for an accessible account list. \nThis may be restricted in a PSU/ASPSP authorization dialogue.\nIf the array is empty, also the arrays for balances or transactions shall be empty, if used.\n",
          "items": {
            "$ref": "#/definitions/accountReference"
          },
          "type": "array"
        },
        "allPsd2": {
          "description": "Optional if supported by API provider.\n\nOnly the value \"allAccounts\" is admitted.\n",
          "enum": [
            "allAccounts"
          ],
          "type": "string"
        },
        "availableAccounts": {
          "description": "Optional if supported by API provider.\n\nOnly the values \"allAccounts\" or \"allAccountsWithBalances\" is admitted.\n",
          "enum": [
            "allAccounts",
            "allAccountsWithBalances"
          ],
          "type": "string"
        },
        "balances": {
          "description": "Is asking for balances of the addressed accounts.\n\nIf the array is empty, the TPP is asking for the balances of all accessible account lists. \nThis may be restricted in a PSU/ASPSP authorization dialogue.\nIf the array is empty, also the arrays for accounts or transactions shall be empty, if used.\n",
          "items": {
            "$ref": "#/definitions/accountReference"
          },
          "type": "array"
        },
        "transactions": {
          "description": "Is asking for transactions of the addressed accounts. \n\nIf the array is empty, the TPP is asking for the transactions of all accessible account lists. \nThis may be restricted in a PSU/ASPSP authorization dialogue.\nIf the array is empty, also the arrays for accounts or balances shall be empty, if used.\n",
          "items": {
            "$ref": "#/definitions/accountReference"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "accountDetails": {
      "description": "The ASPSP shall give at least one of the account reference identifiers:\n  - iban\n  - bban\n  - pan\n  - maskedPan\n  - msisdn\nIf the account is a multicurrency account currency code in \"currency\" is set to \"XXX\".\n",
      "properties": {
        "_links": {
          "$ref": "#/definitions/_linksAccountDetails"
        },
        "balances": {
          "$ref": "#/definitions/balanceList"
        },
        "bban": {
          "$ref": "#/definitions/bban"
        },
        "bic": {
          "$ref": "#/definitions/bicfi"
        },
        "cashAccountType": {
          "$ref": "#/definitions/cashAccountType"
        },
        "currency": {
          "$ref": "#/definitions/currencyCode"
        },
        "details": {
          "description": "Specifications that might be provided by the ASPSP\n  - characteristics of the account\n  - characteristics of the relevant card\n",
          "maxLength": 140,
          "type": "string"
        },
        "iban": {
          "$ref": "#/definitions/iban"
        },
        "linkedAccounts": {
          "description": "Case of a set of pending card transactions, the APSP will provide the relevant cash account the card is set up on.",
          "maxLength": 70,
          "type": "string"
        },
        "msisdn": {
          "$ref": "#/definitions/msisdn"
        },
        "name": {
          "description": "Name of the account given by the bank or the PSU in online-banking.",
          "maxLength": 35,
          "type": "string"
        },
        "product": {
          "description": "Product name of the bank for this account, proprietary definition.",
          "maxLength": 35,
          "type": "string"
        },
        "resourceId": {
          "description": "This shall be filled, if addressable resource are created by the ASPSP on the /accounts or /card-accounts endpoint.",
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/accountStatus"
        },
        "usage": {
          "description": "Specifies the usage of the account\n  * PRIV: private personal account\n  * ORGA: professional account\n",
          "enum": [
            "PRIV",
            "ORGA"
          ],
          "maxLength": 4,
          "type": "string"
        }
      },
      "required": [
        "currency"
      ],
      "type": "object"
    },
    "accountId": {
      "description": "This identification is denoting the addressed account, where the transaction has been performed.",
      "example": "qwer3456tzui7890",
      "type": "string"
    },
    "accountList": {
      "description": "List of accounts with details.\n",
      "properties": {
        "accounts": {
          "items": {
            "$ref": "#/definitions/accountDetails"
          },
          "type": "array"
        }
      },
      "required": [
        "accounts"
      ],
      "type": "object"
    },
    "accountReference": {
      "description": "Reference to an account by either\n  * IBAN, of a payment accounts, or\n  * BBAN, for payment accounts if there is no IBAN, or \n  * the Primary Account Number (PAN) of a card, can be tokenised by the ASPSP due to PCI DSS requirements, or\n  * the Primary Account Number (PAN) of a card in a masked form, or\n  * an alias to access a payment account via a registered mobile phone number (MSISDN).\n",
      "properties": {
        "bban": {
          "$ref": "#/definitions/bban"
        },
        "currency": {
          "$ref": "#/definitions/currencyCode"
        },
        "iban": {
          "$ref": "#/definitions/iban"
        },
        "maskedPan": {
          "$ref": "#/definitions/maskedPan"
        },
        "msisdn": {
          "$ref": "#/definitions/msisdn"
        },
        "pan": {
          "$ref": "#/definitions/pan"
        }
      },
      "type": "object"
    },
    "accountReport": {
      "description": "JSON based account report.\nThis account report contains transactions resulting from the query parameters.\n\n'booked' shall be contained if bookingStatus parameter is set to \"booked\" or \"both\".\n\n'pending' is not contained if the bookingStatus parameter is set to \"booked\".\n",
      "properties": {
        "_links": {
          "$ref": "#/definitions/_linksAccountReport"
        },
        "booked": {
          "$ref": "#/definitions/transactionList"
        },
        "pending": {
          "$ref": "#/definitions/transactionList"
        }
      },
      "required": [
        "_links"
      ],
      "type": "object"
    },
    "accountStatus": {
      "description": "Account status. The value is one of the following:\n  - \"enabled\": account is available\n  - \"deleted\": account is terminated\n  - \"blocked\": account is blocked e.g. for legal reasons\nIf this field is not used, than the account is available in the sense of this specification.\n",
      "enum": [
        "enabled",
        "deleted",
        "blocked"
      ],
      "type": "string"
    },
    "address": {
      "example": {
        "buildingnNumber": "89",
        "city": "Paris",
        "country": "FR",
        "postalCode": "75000",
        "street": "rue blue"
      },
      "properties": {
        "buildingNumber": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "country": {
          "$ref": "#/definitions/countryCode"
        },
        "postalCode": {
          "type": "string"
        },
        "street": {
          "maxLength": 70,
          "type": "string"
        }
      },
      "required": [
        "country"
      ],
      "type": "object"
    },
    "amount": {
      "example": {
        "amount": "123",
        "currency": "EUR"
      },
      "properties": {
        "amount": {
          "$ref": "#/definitions/amountValue"
        },
        "currency": {
          "$ref": "#/definitions/currencyCode"
        }
      },
      "required": [
        "currency",
        "amount"
      ],
      "type": "object"
    },
    "amountValue": {
      "description": "The amount given with fractional digits, where fractions must be compliant to the currency definition.\nUp to 14 significant figures. Negative amounts are signed by minus.\nThe decimal separator is a dot.\n\n**Example:**\nValid representations for EUR with up to two decimals are:\n\n  * 1056\n  * 5768.2\n  * -1.50\n  * 5877.78\n",
      "example": "5877.78",
      "pattern": "-?[0-9]{1,14}(\\.[0-9]{1,3})?",
      "type": "string"
    },
    "authenticationMethodId": {
      "description": "An identification provided by the ASPSP for the later identification of the authentication method selection.\n",
      "example": "myAuthenticationID",
      "maxLength": 35,
      "type": "string"
    },
    "authenticationObject": {
      "description": "Authentication Object\n",
      "properties": {
        "authenticationMethodId": {
          "$ref": "#/definitions/authenticationMethodId"
        },
        "authenticationType": {
          "$ref": "#/definitions/authenticationType"
        },
        "authenticationVersion": {
          "description": "Depending on the \"authenticationType\".\nThis version can be used by differentiating authentication tools used within performing OTP generation in the same authentication type.\nThis version can be referred to in the ASPSP?s documentation.\n",
          "type": "string"
        },
        "explanation": {
          "description": "Detailed information about the SCA method for the PSU.\n",
          "example": "Detailed information about the SCA method for the PSU.",
          "type": "string"
        },
        "name": {
          "description": "This is the name of the authentication method defined by the PSU in the Online Banking frontend of the ASPSP.\nAlternatively this could be a description provided by the ASPSP like \"SMS OTP on phone +49160 xxxxx 28\".\nThis name shall be used by the TPP when presenting a list of authentication methods to the PSU, if available.\n",
          "example": "SMS OTP on phone +49160 xxxxx 28",
          "type": "string"
        }
      },
      "required": [
        "authenticationType",
        "authenticationMethodId"
      ],
      "type": "object"
    },
    "authenticationType": {
      "description": "Type of the authentication method.\n\nMore authentication types might be added during implementation projects and documented in the ASPSP documentation.\n\n  - 'SMS_OTP': An SCA method, where an OTP linked to the transaction to be authorised is sent to the PSU through a SMS channel.\n  - 'CHIP_OTP': An SCA method, where an OTP is generated by a chip card, e.g. an TOP derived from an EMV cryptogram. \n    To contact the card, the PSU normally needs a (handheld) device. \n    With this device, the PSU either reads the challenging data through a visual interface like flickering or \n    the PSU types in the challenge through the device key pad. \n    The device then derives an OTP from the challenge data and displays the OTP to the PSU.\n  - 'PHOTO_OTP': An SCA method, where the challenge is a QR code or similar encoded visual data \n    which can be read in by a consumer device or specific mobile app. \n    The device resp. the specific app than derives an OTP from the visual challenge data and displays \n    the OTP to the PSU.\n  - 'PUSH_OTP': An OTP is pushed to a dedicated authentication APP and displayed to the PSU.\n",
      "enum": [
        "SMS_OTP",
        "CHIP_OTP",
        "PHOTO_OTP",
        "PUSH_OTP"
      ],
      "type": "string"
    },
    "authorisationId": {
      "description": "Resource identification of the related SCA",
      "example": "123auth456",
      "type": "string"
    },
    "authorisations": {
      "description": "An array of all authorisationIds",
      "properties": {
        "authorisationIds": {
          "$ref": "#/definitions/authorisationsList"
        }
      },
      "required": [
        "authorisationIds"
      ],
      "type": "object"
    },
    "authorisationsList": {
      "description": "An array of all authorisationIds",
      "items": {
        "$ref": "#/definitions/authorisationId"
      },
      "type": "array"
    },
    "balance": {
      "description": "A single balance element\n",
      "properties": {
        "balanceAmount": {
          "$ref": "#/definitions/amount"
        },
        "balanceType": {
          "$ref": "#/definitions/balanceType"
        },
        "lastChangeDateTime": {
          "description": "This data element might be used to indicate e.g. with the expected or booked balance that no action is known \non the account, which is not yet booked.\n",
          "format": "date-time",
          "type": "string"
        },
        "lastCommittedTransaction": {
          "description": "\"entryReference\" of the last commited transaction to support the TPP in identifying whether all \nPSU transactions are already known.\n",
          "maxLength": 35,
          "type": "string"
        },
        "referenceDate": {
          "description": "Reference date of the balance",
          "format": "date",
          "type": "string"
        }
      },
      "required": [
        "balanceAmount",
        "balanceType"
      ],
      "type": "object"
    },
    "balanceList": {
      "description": "A list of balances regarding this account, e.g. the current balance, the last booked balance.\nThe list migght be restricted to the current ballance.\n",
      "items": {
        "$ref": "#/definitions/balance"
      },
      "type": "array"
    },
    "balanceType": {
      "description": "The following balance types are defined:\n  - \"closingBooked\": \n    Balance of the account at the end of the pre-agreed account reporting period. \n    It is the sum of the opening booked balance at the beginning of the period and all entries booked \n    to the account during the pre-agreed account reporting period.\n    \n    For card-accounts, this is composed of\n    \n      - invoiced, but not yet paid entries\n    \n  - \"expected\":\n    Balance composed of booked entries and pending items known at the time of calculation, \n    which projects the end of day balance if everything is booked on the account and no other entry is posted.\n    \n    For card accounts, this is composed of \n      - invoiced, but not yet paid entries, \n      - not yet invoiced but already booked entries and\n      - pending items (not yet booked)\n    \n  - \"authorised\":\n    The expected balance together with the value of a pre-approved credit line the ASPSP makes permanently available to the user.\n    \n    For card-accounts:\n    \n    \"money to spend with the value of a pre-approved credit limit on the card account\"\n    \n  - \"openingBooked\":\n    Book balance of the account at the beginning of the account reporting period. \n    It always equals the closing book balance from the previous report.\n  - \"interimAvailable\":\n    Available balance calculated in the course of the account ?servicer?s business day, \n    at the time specified, and subject to further changes during the business day. \n    The interim balance is calculated on the basis of booked credit and debit items during the calculation \n    time/period specified.\n    \n    For card-accounts, this is composed of\n      - invoiced, but not yet paid entries, \n      - not yet invoiced but already booked entries\n  - \"forwardAvailable\":\n    Forward available balance of money that is at the disposal of the account owner on the date specified.\n  - \"nonInvoiced\": \n    Only for card accounts, to be checked yet. \n",
      "enum": [
        "closingBooked",
        "expected",
        "authorised",
        "openingBooked",
        "interimAvailable",
        "forwardAvailable",
        "nonInvoiced"
      ],
      "type": "string"
    },
    "bankTransactionCode": {
      "description": "Bank transaction code as used by the ASPSP and using the sub elements of this structured code defined by ISO 20022. \n\nThis code type is concatenating the three ISO20022 Codes \n  * Domain Code, \n  * Family Code, and \n  * SubFamiliy Code \nby hyphens, resulting in �DomainCode�-�FamilyCode�-�SubFamilyCode�.\n",
      "example": "PMNT-RCDT-ESCT",
      "type": "string"
    },
    "basketId": {
      "description": "Resource identification of the generated signing basket resource.",
      "example": "1234-basket-567",
      "type": "string"
    },
    "batchBookingPreferred": {
      "description": "If this element equals 'true', the PSU prefers only one booking entry. \nIf this element equals 'false', the PSU prefers individual booking of all contained individual transactions. \n\nThe ASPSP will follow this preference according to contracts agreed on with the PSU.\n",
      "example": false,
      "type": "boolean"
    },
    "bban": {
      "description": "Basic Bank Account Number (BBAN) Identifier\n\nThis data element can be used in the body of the Consent Request\n  Message for retrieving Account access Consent from this Account. This\n  data elements is used for payment Accounts which have no IBAN.\n  ISO20022: Basic Bank Account Number (BBAN). \n  \n  Identifier used nationally by financial institutions, i.e., in individual countries, \n  generally as part of a National Account Numbering Scheme(s), \n  which uniquely identifies the account of a customer.\n",
      "example": "BARC12345612345678",
      "pattern": "[a-zA-Z0-9]{1,30}",
      "type": "string"
    },
    "bicfi": {
      "description": "BICFI\n",
      "example": "AAAADEBBXXX",
      "pattern": "[A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}",
      "type": "string"
    },
    "bookingDate": {
      "description": "The Date when an entry is posted to an account on the ASPSPs books.\n",
      "format": "date",
      "type": "string"
    },
    "bulkPaymentInitiationCrossBorderWithStatusResponse": {
      "description": "JSON response body consistion of the corresponding bulk cross-border payment initation JSON body together with an optional transaction status field.\n",
      "properties": {
        "batchBookingPreferred": {
          "$ref": "#/definitions/batchBookingPreferred"
        },
        "debtorAccount": {
          "$ref": "#/definitions/accountReference"
        },
        "payments": {
          "description": "A list of JSON bodies for cross-border payments.",
          "items": {
            "$ref": "#/definitions/paymentInitiationCrossBorder_json"
          },
          "type": "array"
        },
        "requestedExecutionDate": {
          "format": "date",
          "type": "string"
        },
        "transactionStatus": {
          "$ref": "#/definitions/transactionStatus"
        }
      },
      "required": [
        "payments",
        "debtorAccount"
      ],
      "type": "object"
    },
    "bulkPaymentInitiationCrossBorder_json": {
      "description": "JSON body for a bulk cross-border payment initation.\n",
      "properties": {
        "batchBookingPreferred": {
          "$ref": "#/definitions/batchBookingPreferred"
        },
        "debtorAccount": {
          "$ref": "#/definitions/accountReference"
        },
        "payments": {
          "description": "A List of JSON bodies for cross-border payments.",
          "items": {
            "$ref": "#/definitions/paymentInitiationCrossBorderBulkElement_json"
          },
          "type": "array"
        },
        "requestedExecutionDate": {
          "format": "date",
          "type": "string"
        }
      },
      "required": [
        "payments",
        "debtorAccount"
      ],
      "type": "object"
    },
    "bulkPaymentInitiationSctInstWithStatusResponse": {
      "description": "JSON response body consistion of the corresponding bulk SCT INST payment initation JSON body together with an optional transaction status field.\n",
      "properties": {
        "batchBookingPreferred": {
          "$ref": "#/definitions/batchBookingPreferred"
        },
        "debtorAccount": {
          "$ref": "#/definitions/accountReference"
        },
        "payments": {
          "description": "A list of JSON bodies for SCT INST payments.",
          "items": {
            "$ref": "#/definitions/paymentInitiationSctInst_json"
          },
          "type": "array"
        },
        "requestedExecutionDate": {
          "format": "date",
          "type": "string"
        },
        "transactionStatus": {
          "$ref": "#/definitions/transactionStatus"
        }
      },
      "required": [
        "payments",
        "debtorAccount"
      ],
      "type": "object"
    },
    "bulkPaymentInitiationSctInst_json": {
      "description": "JSON Body for a bulk SCT INST payment initation.\n",
      "properties": {
        "batchBookingPreferred": {
          "$ref": "#/definitions/batchBookingPreferred"
        },
        "debtorAccount": {
          "$ref": "#/definitions/accountReference"
        },
        "payments": {
          "description": "A list of JSON bodies for SCT INST payments.",
          "items": {
            "$ref": "#/definitions/paymentInitiationSctInstBulkElement_json"
          },
          "type": "array"
        },
        "requestedExecutionDate": {
          "format": "date",
          "type": "string"
        }
      },
      "required": [
        "payments",
        "debtorAccount"
      ],
      "type": "object"
    },
    "bulkPaymentInitiationSctWithStatusResponse": {
      "description": "JSON response body consistion of the corresponding bulk SCT payment initation JSON body together with an optional transaction status field.\n",
      "properties": {
        "batchBookingPreferred": {
          "$ref": "#/definitions/batchBookingPreferred"
        },
        "debtorAccount": {
          "$ref": "#/definitions/accountReference"
        },
        "payments": {
          "description": "A list of JSON bodies for SCT payments.",
          "items": {
            "$ref": "#/definitions/paymentInitiationSct_json"
          },
          "type": "array"
        },
        "requestedExecutionDate": {
          "format": "date",
          "type": "string"
        },
        "transactionStatus": {
          "$ref": "#/definitions/transactionStatus"
        }
      },
      "required": [
        "payments",
        "debtorAccount"
      ],
      "type": "object"
    },
    "bulkPaymentInitiationSct_json": {
      "description": "JSON Body for a bulk SCT payment initation.\n",
      "properties": {
        "batchBookingPreferred": {
          "$ref": "#/definitions/batchBookingPreferred"
        },
        "debtorAccount": {
          "$ref": "#/definitions/accountReference"
        },
        "payments": {
          "description": "A list of JSON bodies for SCT payments.",
          "items": {
            "$ref": "#/definitions/paymentInitiationSctBulkElement_json"
          },
          "type": "array"
        },
        "requestedExecutionDate": {
          "format": "date",
          "type": "string"
        }
      },
      "required": [
        "payments",
        "debtorAccount"
      ],
      "type": "object"
    },
    "bulkPaymentInitiationTarget2WithStatusResponse": {
      "description": "JSON response body consistion of the corresponding bulk TARGET-2 payment initation JSON body together with an optional transaction status field.\n",
      "properties": {
        "batchBookingPreferred": {
          "$ref": "#/definitions/batchBookingPreferred"
        },
        "debtorAccount": {
          "$ref": "#/definitions/accountReference"
        },
        "payments": {
          "description": "A list of JSON bodies for TARGET-2 payments.",
          "items": {
            "$ref": "#/definitions/paymentInitiationTarget2_json"
          },
          "type": "array"
        },
        "requestedExecutionDate": {
          "format": "date",
          "type": "string"
        },
        "transactionStatus": {
          "$ref": "#/definitions/transactionStatus"
        }
      },
      "required": [
        "payments",
        "debtorAccount"
      ],
      "type": "object"
    },
    "bulkPaymentInitiationTarget2_json": {
      "description": "JSON Body for a bulk TARGET-2 payment initation.\n",
      "properties": {
        "batchBookingPreferred": {
          "$ref": "#/definitions/batchBookingPreferred"
        },
        "debtorAccount": {
          "$ref": "#/definitions/accountReference"
        },
        "payments": {
          "description": "A list of JSON bodies for TARGET-2 payments.",
          "items": {
            "$ref": "#/definitions/paymentInitiationTarget2BulkElement_json"
          },
          "type": "array"
        },
        "requestedExecutionDate": {
          "format": "date",
          "type": "string"
        }
      },
      "required": [
        "payments",
        "debtorAccount"
      ],
      "type": "object"
    },
    "camt.052": {
      "description": "camt.052 XML message\n",
      "type": "string"
    },
    "camt.053": {
      "description": "camt.053 XML message\n",
      "type": "string"
    },
    "camt.054": {
      "description": "camt.054 XML message\n",
      "type": "string"
    },
    "cancellationId": {
      "description": "Identification for cancellation resource",
      "example": "123auth456",
      "type": "string"
    },
    "cancellationList": {
      "description": "An array of all cancellationIds connected to this resource.",
      "items": {
        "$ref": "#/definitions/cancellationId"
      },
      "type": "array"
    },
    "cardAcceptorCategoryCode": {
      "description": "Card Acceptor Category Code of the Card Acceptor as given in the related card transaction. \n",
      "type": "string"
    },
    "cardAccountDetails": {
      "description": "Card account details\n",
      "properties": {
        "_links": {
          "$ref": "#/definitions/_linksAccountDetails"
        },
        "balances": {
          "$ref": "#/definitions/balanceList"
        },
        "creditLimit": {
          "$ref": "#/definitions/amount"
        },
        "currency": {
          "$ref": "#/definitions/currencyCode"
        },
        "details": {
          "description": "Specifications that might be provided by the ASPSP\n  - characteristics of the account\n  - characteristics of the relevant card\n",
          "maxLength": 140,
          "type": "string"
        },
        "maskedPan": {
          "$ref": "#/definitions/maskedPan"
        },
        "name": {
          "description": "Name of the account given by the bank or the PSU in online-banking.",
          "maxLength": 35,
          "type": "string"
        },
        "product": {
          "description": "Product name of the bank for this account, proprietary definition.",
          "maxLength": 35,
          "type": "string"
        },
        "resourceId": {
          "description": "This is the data element to be used in the path when retrieving data from a dedicated account.\nThis shall be filled, if addressable resource are created by the ASPSP on the /card-accounts endpoint.\n",
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/accountStatus"
        },
        "usage": {
          "description": "Specifies the usage of the account\n  * PRIV: private personal account\n  * ORGA: professional account\n",
          "enum": [
            "PRIV",
            "ORGA"
          ],
          "maxLength": 4,
          "type": "string"
        }
      },
      "required": [
        "maskedPan",
        "currency"
      ],
      "type": "object"
    },
    "cardAccountList": {
      "description": "List of card accounts with details.\n",
      "properties": {
        "cardAccounts": {
          "items": {
            "$ref": "#/definitions/cardAccountDetails"
          },
          "type": "array"
        }
      },
      "required": [
        "cardAccounts"
      ],
      "type": "object"
    },
    "cardAccountReport": {
      "description": "JSON based card account report.\n\nThis card account report contains transactions resulting from the query parameters.\n",
      "properties": {
        "_links": {
          "$ref": "#/definitions/_linksCardAccountReport"
        },
        "booked": {
          "$ref": "#/definitions/cardTransactionList"
        },
        "pending": {
          "$ref": "#/definitions/cardTransactionList"
        }
      },
      "required": [
        "booked",
        "_links"
      ],
      "type": "object"
    },
    "cardAccountsTransactionsResponse200": {
      "description": "Body of the JSON response for a successful read card account transaction list request.\nThis card account report contains transactions resulting from the query parameters.\n",
      "properties": {
        "_links": {
          "$ref": "#/definitions/_linksDownload"
        },
        "balances": {
          "$ref": "#/definitions/balanceList"
        },
        "cardAccount": {
          "$ref": "#/definitions/accountReference"
        },
        "cardTransactions": {
          "$ref": "#/definitions/cardAccountReport"
        }
      },
      "type": "object"
    },
    "cardTransaction": {
      "description": "Card transaction information",
      "properties": {
        "bookingDate": {
          "$ref": "#/definitions/bookingDate"
        },
        "cardAcceptorAddress": {
          "$ref": "#/definitions/address"
        },
        "cardAcceptorCategoryCode": {
          "$ref": "#/definitions/cardAcceptorCategoryCode"
        },
        "cardAcceptorId": {
          "maxLength": 35,
          "type": "string"
        },
        "cardTransactionId": {
          "$ref": "#/definitions/cardTransactionId"
        },
        "exchangeRate": {
          "$ref": "#/definitions/exchangeRateList"
        },
        "invoiced": {
          "type": "boolean"
        },
        "markupFee": {
          "$ref": "#/definitions/amount"
        },
        "markupFeePercentage": {
          "type": "string"
        },
        "maskedPAN": {
          "$ref": "#/definitions/maskedPan"
        },
        "originalAmount": {
          "$ref": "#/definitions/amount"
        },
        "proprietaryBankTransactionCode": {
          "$ref": "#/definitions/proprietaryBankTransactionCode"
        },
        "terminalId": {
          "$ref": "#/definitions/terminalId"
        },
        "transactionAmount": {
          "$ref": "#/definitions/amount"
        },
        "transactionDate": {
          "$ref": "#/definitions/transactionDate"
        },
        "transactionDetails": {
          "maxLength": 140,
          "type": "string"
        }
      },
      "required": [
        "transactionAmount"
      ],
      "type": "object"
    },
    "cardTransactionId": {
      "description": "Unique end to end identity.",
      "maxLength": 35,
      "type": "string"
    },
    "cardTransactionList": {
      "description": "Array of transaction details",
      "items": {
        "$ref": "#/definitions/cardTransaction"
      },
      "type": "array"
    },
    "cashAccountType": {
      "description": "ExternalCashAccountType1Code from ISO 20022.\n",
      "type": "string"
    },
    "challengeData": {
      "description": "It is contained in addition to the data element 'chosenScaMethod' if challenge data is needed for SCA.\nIn rare cases this attribute is also used in the context of the 'startAuthorisationWithPsuAuthentication' link.\n",
      "properties": {
        "additionalInformation": {
          "description": "Additional explanation for the PSU to explain\ne.g. fallback mechanism for the chosen SCA method.\nThe TPP is obliged to show this to the PSU.\n",
          "type": "string"
        },
        "data": {
          "description": "String challenge data",
          "type": "string"
        },
        "image": {
          "description": "PNG data (max. 512 kilobyte) to be displayed to the PSU,\nBase64 encoding, cp. [RFC4648].\nThis attribute is used only, when PHOTO_OTP or CHIP_OTP\nis the selected SCA method.\n",
          "format": "byte",
          "type": "string"
        },
        "imageLink": {
          "description": "A link where the ASPSP will provides the challenge image for the TPP.",
          "format": "url",
          "type": "string"
        },
        "otpFormat": {
          "description": "The format type of the OTP to be typed in. The admitted values are \"characters\" or \"integer\".",
          "enum": [
            "characters",
            "integer"
          ],
          "type": "string"
        },
        "otpMaxLength": {
          "description": "The maximal length for the OTP to be typed in by the PSU.",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "chosenScaMethod": {
      "$ref": "#/definitions/authenticationObject"
    },
    "combinedServiceIndicator": {
      "description": "If \"true\" indicates that a payment initiation service will be addressed in the same \"session\".\n",
      "example": false,
      "type": "boolean"
    },
    "confirmationOfFunds": {
      "description": "JSON Request body for the \"Confirmation of Funds Service\"\n\n<table> \n<tr> \n  <td>cardNumber</td> \n  <td>String </td>\n  <td>Optional</td>\n  <td>Card Number of the card issued by the PIISP. Should be delivered if available.</td>\n</tr> \n<tr>\n  <td>account</td>\n  <td> Account Reference</td>\n  <td>Mandatory</td>\n  <td>PSU's account number.</td>\n</tr> \n<tr> \n  <td>payee</td>\n  <td>Max70Text</td>\n  <td>Optional</td>\n  <td>The merchant where the card is accepted as an information to the PSU.</td>\n</tr> \n<tr>\n  <td>instructedAmount</td>\n  <td>Amount</td>\n  <td>Mandatory</td>\n  <td>Transaction amount to be checked within the funds check mechanism.</td>\n</tr> \n</table>\n",
      "properties": {
        "account": {
          "$ref": "#/definitions/accountReference"
        },
        "cardNumber": {
          "description": "Card Number of the card issued by the PIISP. \nShould be delivered if available.\n",
          "type": "string"
        },
        "instructedAmount": {
          "$ref": "#/definitions/amount"
        },
        "payee": {
          "description": "Name payee",
          "maxLength": 70,
          "type": "string"
        }
      },
      "required": [
        "account",
        "instructedAmount"
      ],
      "type": "object"
    },
    "consentId": {
      "description": "ID of the corresponding consent object as returned by an Account Information Consent Request.\n",
      "type": "string"
    },
    "consentIdList": {
      "description": "A list of consentIds",
      "items": {
        "$ref": "#/definitions/consentId"
      },
      "minItems": 1,
      "type": "array"
    },
    "consentInformationResponse-200_json": {
      "description": "Body of the JSON response for a successfull get consent request.",
      "properties": {
        "access": {
          "$ref": "#/definitions/accountAccess"
        },
        "consentStatus": {
          "$ref": "#/definitions/consentStatus"
        },
        "frequencyPerDay": {
          "$ref": "#/definitions/frequencyPerDay"
        },
        "lastActionDate": {
          "$ref": "#/definitions/lastActionDate"
        },
        "recurringIndicator": {
          "$ref": "#/definitions/recurringIndicator"
        },
        "validUntil": {
          "$ref": "#/definitions/validUntil"
        }
      },
      "required": [
        "access",
        "recurringIndicator",
        "validUntil",
        "frequencyPerDay",
        "lastActionDate",
        "consentStatus"
      ],
      "type": "object"
    },
    "consentStatus": {
      "description": "This is the overall lifecycle status of the consent.\n\nValid values are:\n  - 'received': The consent data have been received and are technically correct. \n    The data is not authorised yet.\n  - 'rejected': The consent data have been rejected e.g. since no successful authorisation has taken place.\n  - 'valid': The consent is accepted and valid for GET account data calls and others as specified in the consent object.\n  - 'revokedByPsu': The consent has been revoked by the PSU towards the ASPSP.\n  - 'expired': The consent expired.\n  - 'terminatedByTpp': The corresponding TPP has terminated the consent by applying the DELETE method to the consent resource.\n\nThe ASPSP might add further codes. These codes then shall be contained in the ASPSP's documentation of the XS2A interface \nand has to be added to this API definition as well.\n",
      "enum": [
        "received",
        "rejected",
        "valid",
        "revokedByPsu",
        "expired",
        "terminatedByTpp"
      ],
      "type": "string"
    },
    "consentStatusResponse-200": {
      "description": "Body of the JSON response for a successful get status request for a consent.",
      "properties": {
        "consentStatus": {
          "$ref": "#/definitions/consentStatus"
        }
      },
      "required": [
        "consentStatus"
      ],
      "type": "object"
    },
    "consents": {
      "description": "Content of the body of a consent request.\n",
      "properties": {
        "access": {
          "$ref": "#/definitions/accountAccess"
        },
        "combinedServiceIndicator": {
          "description": "If \"true\" indicates that a payment initiation service will be addressed in the same \"session\".\n",
          "example": false,
          "type": "boolean"
        },
        "frequencyPerDay": {
          "$ref": "#/definitions/frequencyPerDay"
        },
        "recurringIndicator": {
          "$ref": "#/definitions/recurringIndicator"
        },
        "validUntil": {
          "$ref": "#/definitions/validUntil"
        }
      },
      "required": [
        "access",
        "recurringIndicator",
        "validUntil",
        "frequencyPerDay",
        "combinedServiceIndicator"
      ],
      "type": "object"
    },
    "consentsResponse-201": {
      "description": "Body of the JSON response for a successful conset request.",
      "properties": {
        "_links": {
          "$ref": "#/definitions/_linksConsents"
        },
        "challengeData": {
          "$ref": "#/definitions/challengeData"
        },
        "chosenScaMethod": {
          "$ref": "#/definitions/chosenScaMethod"
        },
        "consentId": {
          "$ref": "#/definitions/consentId"
        },
        "consentStatus": {
          "$ref": "#/definitions/consentStatus"
        },
        "message": {
          "description": "Text to be displayed to the PSU, e.g. in a Decoupled SCA Approach.",
          "maxLength": 512,
          "type": "string"
        },
        "scaMethods": {
          "$ref": "#/definitions/scaMethods"
        }
      },
      "required": [
        "consentStatus",
        "consentId",
        "_links"
      ],
      "type": "object"
    },
    "countryCode": {
      "description": "ISO 3166 ALPHA2 country code",
      "example": "SE",
      "pattern": "[A-Z]{2}",
      "type": "string"
    },
    "creditorName": {
      "description": "Creditor Name",
      "example": "Creditor Name",
      "maxLength": 70,
      "type": "string"
    },
    "currencyCode": {
      "description": "ISO 4217 Alpha 3 currency code\n",
      "example": "EUR",
      "pattern": "[A-Z]{3}",
      "type": "string"
    },
    "dayOfExecution": {
      "description": "Day of execution as string.\n\nThis string consists of up two characters.\nLeading zeroes are not allowed.\n\n31 is ultimo of the month.\n",
      "enum": [
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "8",
        "9",
        "10",
        "11",
        "12",
        "13",
        "14",
        "15",
        "16",
        "17",
        "18",
        "19",
        "20",
        "21",
        "22",
        "23",
        "24",
        "25",
        "26",
        "27",
        "28",
        "29",
        "30",
        "31"
      ],
      "maxLength": 2,
      "type": "string"
    },
    "debtorName": {
      "description": "Debtor Name",
      "example": "Debtor Name",
      "maxLength": 70,
      "type": "string"
    },
    "endDate": {
      "description": "The last applicable day of execution\nIf not given, it is an infinite standing order.\n",
      "format": "date",
      "type": "string"
    },
    "entryReference": {
      "description": "Is the identification of the transaction as used e.g. for reference for deltafunction on application level.\n",
      "maxLength": 35,
      "type": "string"
    },
    "exchangeRate": {
      "description": "Exchange Rate",
      "properties": {
        "rate": {
          "type": "string"
        },
        "rateContract": {
          "type": "string"
        },
        "rateDate": {
          "format": "date",
          "type": "string"
        },
        "sourceCurrency": {
          "$ref": "#/definitions/currencyCode"
        },
        "targetCurrency": {
          "$ref": "#/definitions/currencyCode"
        },
        "unitCurrency": {
          "type": "string"
        }
      },
      "required": [
        "sourceCurrency",
        "rate",
        "unitCurrency",
        "targetCurrency",
        "rateDate"
      ],
      "type": "object"
    },
    "exchangeRateList": {
      "description": "Array of exchange rates",
      "items": {
        "$ref": "#/definitions/exchangeRate"
      },
      "type": "array"
    },
    "executionRule": {
      "description": "\"following\" or \"preceeding\" supported as values. \nThis data attribute defines the behavior when recurring payment dates falls on a weekend or bank holiday. \nThe payment is then executed either the \"preceeding\" or \"following\" working day.\nASPSP might reject the request due to the communicated value, if rules in Online-Banking are not supporting \nthis execution rule.\n",
      "enum": [
        "following",
        "preceeding"
      ],
      "type": "string"
    },
    "frequencyCode": {
      "description": "The following codes from the \"EventFrequency7Code\" of ISO 20022 are supported.\n- \"Daily\"\n- \"Weekly\"\n- \"EveryTwoWeeks\"\n- \"Monthly\"\n- \"EveryTwoMonths\"\n- \"Quarterly\"\n- \"SemiAnnual\"\n- \"Annual\"\n",
      "enum": [
        "Daily",
        "Weekly",
        "EveryTwoWeeks",
        "Monthly",
        "EveryTwoMonths",
        "Quarterly",
        "SemiAnnual",
        "Annual"
      ],
      "type": "string"
    },
    "frequencyPerDay": {
      "description": "This field indicates the requested maximum frequency for an access without PSU involvement per day.\nFor a one-off access, this attribute is set to \"1\".\n",
      "example": 4,
      "type": "integer"
    },
    "hrefType": {
      "description": "Link to a resource",
      "example": "/v1/payments/sepa-credit-transfers/1234-wertiq-983",
      "type": "string"
    },
    "iban": {
      "description": "IBAN of an account",
      "example": "FR7612345987650123456789014",
      "pattern": "[A-Z]{2,2}[0-9]{2,2}[a-zA-Z0-9]{1,30}",
      "type": "string"
    },
    "lastActionDate": {
      "description": "This date is containing the date of the last action on the consent object either through \nthe XS2A interface or the PSU/ASPSP interface having an impact on the status.\n",
      "example": "2018-07-01",
      "format": "date",
      "type": "string"
    },
    "maskedPan": {
      "description": "Masked Primary Account Number\n",
      "example": "123456xxxxxx1234",
      "maxLength": 35,
      "type": "string"
    },
    "msisdn": {
      "description": "Mobile phone number.",
      "example": "+49 170 1234567",
      "maxLength": 35,
      "type": "string"
    },
    "mt940": {
      "description": "Data MT940 format in a text structure. \n",
      "type": "string"
    },
    "mt942": {
      "description": "Data MT942 format in a text structure.\n",
      "type": "string"
    },
    "pan": {
      "description": "Primary Account Number according to ISO/IEC 7812.\n",
      "example": "5409050000000000",
      "maxLength": 35,
      "type": "string"
    },
    "paymentId": {
      "description": "Resource identification of the generated payment initiation resource.",
      "example": "1234-wertiq-983",
      "type": "string"
    },
    "paymentIdList": {
      "description": "A list of paymentIds",
      "items": {
        "$ref": "#/definitions/paymentId"
      },
      "minItems": 1,
      "type": "array"
    },
    "paymentInitationRequestMultiLevelScaResponse-201": {
      "description": "Body of the response for a successful payment initiation request.",
      "properties": {
        "_links": {
          "$ref": "#/definitions/_linksPaymentInitiationMultiLevelSca"
        },
        "paymentId": {
          "$ref": "#/definitions/paymentId"
        },
        "psuMessage": {
          "$ref": "#/definitions/psuMessageText"
        },
        "tppMessages": {
          "items": {
            "$ref": "#/definitions/tppMessage2XX"
          },
          "type": "array"
        },
        "transactionFeeIndicator": {
          "$ref": "#/definitions/transactionFeeIndicator"
        },
        "transactionFees": {
          "$ref": "#/definitions/amount"
        },
        "transactionStatus": {
          "$ref": "#/definitions/transactionStatus"
        }
      },
      "required": [
        "transactionStatus",
        "paymentId",
        "_links"
      ],
      "type": "object"
    },
    "paymentInitationRequestResponse-201": {
      "description": "Body of the response for a successful payment initiation request.",
      "properties": {
        "_links": {
          "$ref": "#/definitions/_linksPaymentInitiation"
        },
        "challengeData": {
          "$ref": "#/definitions/challengeData"
        },
        "chosenScaMethod": {
          "$ref": "#/definitions/chosenScaMethod"
        },
        "paymentId": {
          "$ref": "#/definitions/paymentId"
        },
        "psuMessage": {
          "$ref": "#/definitions/psuMessageText"
        },
        "scaMethods": {
          "$ref": "#/definitions/scaMethods"
        },
        "tppMessages": {
          "items": {
            "$ref": "#/definitions/tppMessage2XX"
          },
          "type": "array"
        },
        "transactionFeeIndicator": {
          "$ref": "#/definitions/transactionFeeIndicator"
        },
        "transactionFees": {
          "$ref": "#/definitions/amount"
        },
        "transactionStatus": {
          "$ref": "#/definitions/transactionStatus"
        }
      },
      "required": [
        "transactionStatus",
        "paymentId",
        "_links"
      ],
      "type": "object"
    },
    "paymentInitiationCancelResponse-204_202": {
      "description": "Body of the response for a successful cancel payment request.",
      "properties": {
        "_links": {
          "$ref": "#/definitions/_linksPaymentInitiationCancel"
        },
        "challengeData": {
          "$ref": "#/definitions/challengeData"
        },
        "chosenScaMethod": {
          "$ref": "#/definitions/chosenScaMethod"
        },
        "scaMethods": {
          "$ref": "#/definitions/scaMethods"
        },
        "transactionStatus": {
          "$ref": "#/definitions/transactionStatus"
        }
      },
      "required": [
        "transactionStatus"
      ],
      "type": "object"
    },
    "paymentInitiationCrossBorderBulkElement_json": {
      "description": "JSON body for a cross-border payment initation.\n",
      "properties": {
        "creditorAccount": {
          "$ref": "#/definitions/accountReference"
        },
        "creditorAddress": {
          "$ref": "#/definitions/address"
        },
        "creditorAgent": {
          "$ref": "#/definitions/bicfi"
        },
        "creditorName": {
          "$ref": "#/definitions/creditorName"
        },
        "instructedAmount": {
          "$ref": "#/definitions/amount"
        },
        "remittanceInformationUnstructured": {
          "maxLength": 140,
          "type": "string"
        }
      },
      "required": [
        "instructedAmount",
        "creditorAccount",
        "creditorName"
      ],
      "type": "object"
    },
    "paymentInitiationCrossBorderWithStatusResponse": {
      "description": "JSON response body consistion of the corresponding cross-border payment initation JSON body together with an optional transaction status field.\n",
      "properties": {
        "creditorAccount": {
          "$ref": "#/definitions/accountReference"
        },
        "creditorAddress": {
          "$ref": "#/definitions/address"
        },
        "creditorAgent": {
          "$ref": "#/definitions/bicfi"
        },
        "creditorName": {
          "$ref": "#/definitions/creditorName"
        },
        "debtorAccount": {
          "$ref": "#/definitions/accountReference"
        },
        "instructedAmount": {
          "$ref": "#/definitions/amount"
        },
        "remittanceInformationUnstructured": {
          "maxLength": 140,
          "type": "string"
        },
        "transactionStatus": {
          "$ref": "#/definitions/transactionStatus"
        }
      },
      "required": [
        "debtorAccount",
        "instructedAmount",
        "creditorAccount",
        "creditorName"
      ],
      "type": "object"
    },
    "paymentInitiationCrossBorder_json": {
      "description": "JSON body for a cross-border payment initation.\n",
      "properties": {
        "creditorAccount": {
          "$ref": "#/definitions/accountReference"
        },
        "creditorAddress": {
          "$ref": "#/definitions/address"
        },
        "creditorAgent": {
          "$ref": "#/definitions/bicfi"
        },
        "creditorName": {
          "$ref": "#/definitions/creditorName"
        },
        "debtorAccount": {
          "$ref": "#/definitions/accountReference"
        },
        "instructedAmount": {
          "$ref": "#/definitions/amount"
        },
        "remittanceInformationUnstructured": {
          "maxLength": 140,
          "type": "string"
        }
      },
      "required": [
        "debtorAccount",
        "instructedAmount",
        "creditorAccount",
        "creditorName"
      ],
      "type": "object"
    },
    "paymentInitiationCrossBorder_pain.001": {
      "description": "A pain.001 structure corresponding to the cross-border schema\n\nFor cross-border payments only community wide pain.001 schemes do exist.\n",
      "type": "string"
    },
    "paymentInitiationSctBulkElement_json": {
      "description": "Body for a bulk SCT payment initation.\n",
      "properties": {
        "creditorAccount": {
          "$ref": "#/definitions/accountReference"
        },
        "creditorAddress": {
          "$ref": "#/definitions/address"
        },
        "creditorAgent": {
          "$ref": "#/definitions/bicfi"
        },
        "creditorName": {
          "$ref": "#/definitions/creditorName"
        },
        "endToEndIdentification": {
          "maxLength": 35,
          "type": "string"
        },
        "instructedAmount": {
          "$ref": "#/definitions/amount"
        },
        "remittanceInformationUnstructured": {
          "$ref": "#/definitions/remittanceInformationUnstructured"
        }
      },
      "required": [
        "instructedAmount",
        "creditorAccount",
        "creditorName"
      ],
      "type": "object"
    },
    "paymentInitiationSctInstBulkElement_json": {
      "description": "Body for a SCT INST payment initation.\n",
      "properties": {
        "creditorAccount": {
          "$ref": "#/definitions/accountReference"
        },
        "creditorAddress": {
          "$ref": "#/definitions/address"
        },
        "creditorAgent": {
          "$ref": "#/definitions/bicfi"
        },
        "creditorName": {
          "$ref": "#/definitions/creditorName"
        },
        "endToEndIdentification": {
          "maxLength": 35,
          "type": "string"
        },
        "instructedAmount": {
          "$ref": "#/definitions/amount"
        },
        "remittanceInformationUnstructured": {
          "maxLength": 140,
          "type": "string"
        }
      },
      "required": [
        "instructedAmount",
        "creditorAccount",
        "creditorName"
      ],
      "type": "object"
    },
    "paymentInitiationSctInstWithStatusResponse": {
      "description": "JSON response body consistion of the corresponding SCT INST payment initation JSON body together with an optional transaction status field.\n",
      "properties": {
        "creditorAccount": {
          "$ref": "#/definitions/accountReference"
        },
        "creditorAddress": {
          "$ref": "#/definitions/address"
        },
        "creditorAgent": {
          "$ref": "#/definitions/bicfi"
        },
        "creditorName": {
          "$ref": "#/definitions/creditorName"
        },
        "debtorAccount": {
          "$ref": "#/definitions/accountReference"
        },
        "endToEndIdentification": {
          "maxLength": 35,
          "type": "string"
        },
        "instructedAmount": {
          "$ref": "#/definitions/amount"
        },
        "remittanceInformationUnstructured": {
          "maxLength": 140,
          "type": "string"
        },
        "transactionStatus": {
          "$ref": "#/definitions/transactionStatus"
        }
      },
      "required": [
        "debtorAccount",
        "instructedAmount",
        "creditorAccount",
        "creditorName"
      ],
      "type": "object"
    },
    "paymentInitiationSctInst_json": {
      "description": "Body for a SCT INST payment initation.\n",
      "properties": {
        "creditorAccount": {
          "$ref": "#/definitions/accountReference"
        },
        "creditorAddress": {
          "$ref": "#/definitions/address"
        },
        "creditorAgent": {
          "$ref": "#/definitions/bicfi"
        },
        "creditorName": {
          "$ref": "#/definitions/creditorName"
        },
        "debtorAccount": {
          "$ref": "#/definitions/accountReference"
        },
        "endToEndIdentification": {
          "maxLength": 35,
          "type": "string"
        },
        "instructedAmount": {
          "$ref": "#/definitions/amount"
        },
        "remittanceInformationUnstructured": {
          "maxLength": 140,
          "type": "string"
        }
      },
      "required": [
        "debtorAccount",
        "instructedAmount",
        "creditorAccount",
        "creditorName"
      ],
      "type": "object"
    },
    "paymentInitiationSctInst_pain.001": {
      "description": "A pain.001 structure corresponding to the SCT INST schema.\n",
      "type": "string"
    },
    "paymentInitiationSctWithStatusResponse": {
      "description": "JSON response body consistion of the corresponding SCT payment initation JSON body together with an optional transaction status field.\n",
      "properties": {
        "creditorAccount": {
          "$ref": "#/definitions/accountReference"
        },
        "creditorAddress": {
          "$ref": "#/definitions/address"
        },
        "creditorAgent": {
          "$ref": "#/definitions/bicfi"
        },
        "creditorName": {
          "$ref": "#/definitions/creditorName"
        },
        "debtorAccount": {
          "$ref": "#/definitions/accountReference"
        },
        "endToEndIdentification": {
          "maxLength": 35,
          "type": "string"
        },
        "instructedAmount": {
          "$ref": "#/definitions/amount"
        },
        "remittanceInformationUnstructured": {
          "$ref": "#/definitions/remittanceInformationUnstructured"
        },
        "transactionStatus": {
          "$ref": "#/definitions/transactionStatus"
        }
      },
      "required": [
        "debtorAccount",
        "instructedAmount",
        "creditorAccount",
        "creditorName"
      ],
      "type": "object"
    },
    "paymentInitiationSct_json": {
      "description": "Body for a SCT payment initation.\n",
      "properties": {
        "creditorAccount": {
          "$ref": "#/definitions/accountReference"
        },
        "creditorAddress": {
          "$ref": "#/definitions/address"
        },
        "creditorAgent": {
          "$ref": "#/definitions/bicfi"
        },
        "creditorName": {
          "$ref": "#/definitions/creditorName"
        },
        "debtorAccount": {
          "$ref": "#/definitions/accountReference"
        },
        "endToEndIdentification": {
          "maxLength": 35,
          "type": "string"
        },
        "instructedAmount": {
          "$ref": "#/definitions/amount"
        },
        "remittanceInformationUnstructured": {
          "$ref": "#/definitions/remittanceInformationUnstructured"
        }
      },
      "required": [
        "debtorAccount",
        "instructedAmount",
        "creditorAccount",
        "creditorName"
      ],
      "type": "object"
    },
    "paymentInitiationSct_pain.001": {
      "description": "A pain.001 structure corresponding to the SCT schema\n\nurn:iso:std:iso:20022:tech:xsd:pain.001.001.03\n",
      "example": "<Document xmlns=\"urn:iso:std:iso:20022:tech:xsd:pain.001.001.03\"> <CstmrCdtTrfInitn> <GrpHdr> <MsgId>MIPI-123456789RI-123456789</MsgId> <CreDtTm>2017-02-14T20:23:34.000Z</CreDtTm> <NbOfTxs>1</NbOfTxs> <CtrlSum>123</CtrlSum> <InitgPty> <Nm>PaymentInitiator</Nm> <Id><OrgId><Othr><Id>DE10000000012</Id> <SchmeNm><Prptry>PISP</Prptry></SchmeNm></Othr></OrgId></Id> </InitgPty> </GrpHdr> <PmtInf> <PmtInfId>BIPI-123456789RI-123456789</PmtInfId> <PmtMtd>TRF</PmtMtd> <NbOfTxs>1</NbOfTxs> <CtrlSum>123</CtrlSum> <PmtTpInf><SvcLvl><Cd>SEPA</Cd></SvcLvl></PmtTpInf> <ReqdExctnDt>2017-02-15</ReqdExctnDt> <Dbtr><Nm>PSU Name</Nm></Dbtr> <DbtrAcct><Id><IBAN>DE87200500001234567890</IBAN></Id></DbtrAcct> <ChrgBr>SLEV</ChrgBr> <CdtTrfTxInf> <PmtId><EndToEndId>RI-123456789</EndToEndId></PmtId> <Amt><InstdAmt Ccy=\"EUR\">123</InstdAmt></Amt> <Cdtr><Nm>Merchant123</Nm></Cdtr> <CdtrAcct><Id><IBAN> DE23100120020123456789</IBAN></Id></CdtrAcct> <RmtInf><Ustrd>Ref Number Merchant-123456</Ustrd></RmtInf> </CdtTrfTxInf> </PmtInf> </CstmrCdtTrfInitn> </Document>",
      "type": "string"
    },
    "paymentInitiationStatusResponse-200_json": {
      "description": "Body of the response for a successful payment initiation status request in case of an JSON based endpoint.",
      "properties": {
        "transactionStatus": {
          "$ref": "#/definitions/transactionStatus"
        }
      },
      "required": [
        "transactionStatus"
      ],
      "type": "object"
    },
    "paymentInitiationStatusResponse-200_xml": {
      "description": "Body of the response for a successful payment initiation status request in case of an XML based endpoint.\n\nThe status is returned as a pain.002 structure. \n\nurn:iso:std:iso:20022:tech:xsd:pain.002.001.03\n\nThe chosen XML schema of the Status Request is following the XML schema definitions of the original pain.001 schema.\n",
      "type": "string"
    },
    "paymentInitiationTarget2BulkElement_json": {
      "description": "Body for a bulk TARGET-2 payment initation.\n",
      "properties": {
        "creditorAccount": {
          "$ref": "#/definitions/accountReference"
        },
        "creditorAddress": {
          "$ref": "#/definitions/address"
        },
        "creditorAgent": {
          "$ref": "#/definitions/bicfi"
        },
        "creditorName": {
          "$ref": "#/definitions/creditorName"
        },
        "endToEndIdentification": {
          "maxLength": 35,
          "type": "string"
        },
        "instructedAmount": {
          "$ref": "#/definitions/amount"
        },
        "remittanceInformationUnstructured": {
          "maxLength": 140,
          "type": "string"
        }
      },
      "required": [
        "instructedAmount",
        "creditorAccount",
        "creditorName"
      ],
      "type": "object"
    },
    "paymentInitiationTarget2WithStatusResponse": {
      "description": "JSON response body consistion of the corresponding TARGET-2 payment initation JSON body together with an \noptional transaction status field.\n",
      "properties": {
        "creditorAccount": {
          "$ref": "#/definitions/accountReference"
        },
        "creditorAddress": {
          "$ref": "#/definitions/address"
        },
        "creditorAgent": {
          "$ref": "#/definitions/bicfi"
        },
        "creditorName": {
          "$ref": "#/definitions/creditorName"
        },
        "debtorAccount": {
          "$ref": "#/definitions/accountReference"
        },
        "endToEndIdentification": {
          "maxLength": 35,
          "type": "string"
        },
        "instructedAmount": {
          "$ref": "#/definitions/amount"
        },
        "remittanceInformationUnstructured": {
          "maxLength": 140,
          "type": "string"
        },
        "transactionStatus": {
          "$ref": "#/definitions/transactionStatus"
        }
      },
      "required": [
        "debtorAccount",
        "instructedAmount",
        "creditorAccount",
        "creditorName"
      ],
      "type": "object"
    },
    "paymentInitiationTarget2_json": {
      "description": "Body for a TARGET-2 payment initation.\n",
      "properties": {
        "creditorAccount": {
          "$ref": "#/definitions/accountReference"
        },
        "creditorAddress": {
          "$ref": "#/definitions/address"
        },
        "creditorAgent": {
          "$ref": "#/definitions/bicfi"
        },
        "creditorName": {
          "$ref": "#/definitions/creditorName"
        },
        "debtorAccount": {
          "$ref": "#/definitions/accountReference"
        },
        "endToEndIdentification": {
          "maxLength": 35,
          "type": "string"
        },
        "instructedAmount": {
          "$ref": "#/definitions/amount"
        },
        "remittanceInformationUnstructured": {
          "maxLength": 140,
          "type": "string"
        }
      },
      "required": [
        "debtorAccount",
        "instructedAmount",
        "creditorAccount",
        "creditorName"
      ],
      "type": "object"
    },
    "paymentInitiationTarget2_pain.001": {
      "description": "A pain.001 structure corresponding to the target-2 schema\n\nFor TARGET-2 payments only community wide pain.001 schemes do exist.\n",
      "type": "string"
    },
    "periodicPaymentInitiationCrossBorderWithStatusResponse": {
      "description": "JSON response body consistion of the corresponding periodic cross-border payment initation JSON body together with an optional transaction status field.\n",
      "properties": {
        "creditorAccount": {
          "$ref": "#/definitions/accountReference"
        },
        "creditorAddress": {
          "$ref": "#/definitions/address"
        },
        "creditorAgent": {
          "$ref": "#/definitions/bicfi"
        },
        "creditorName": {
          "$ref": "#/definitions/creditorName"
        },
        "dayOfExecution": {
          "$ref": "#/definitions/dayOfExecution"
        },
        "debtorAccount": {
          "$ref": "#/definitions/accountReference"
        },
        "endDate": {
          "$ref": "#/definitions/endDate"
        },
        "executionRule": {
          "$ref": "#/definitions/executionRule"
        },
        "frequency": {
          "$ref": "#/definitions/frequencyCode"
        },
        "instructedAmount": {
          "$ref": "#/definitions/amount"
        },
        "remittanceInformationUnstructured": {
          "maxLength": 140,
          "type": "string"
        },
        "startDate": {
          "$ref": "#/definitions/startDate"
        },
        "transactionStatus": {
          "$ref": "#/definitions/transactionStatus"
        }
      },
      "required": [
        "debtorAccount",
        "instructedAmount",
        "creditorAccount",
        "creditorName",
        "startDate",
        "frequency"
      ],
      "type": "object"
    },
    "periodicPaymentInitiationCrossBorder_json": {
      "description": "JSON body for a periodic cross-border payment initation.\n",
      "properties": {
        "creditorAccount": {
          "$ref": "#/definitions/accountReference"
        },
        "creditorAddress": {
          "$ref": "#/definitions/address"
        },
        "creditorAgent": {
          "$ref": "#/definitions/bicfi"
        },
        "creditorName": {
          "$ref": "#/definitions/creditorName"
        },
        "dayOfExecution": {
          "$ref": "#/definitions/dayOfExecution"
        },
        "debtorAccount": {
          "$ref": "#/definitions/accountReference"
        },
        "endDate": {
          "$ref": "#/definitions/endDate"
        },
        "executionRule": {
          "$ref": "#/definitions/executionRule"
        },
        "frequency": {
          "$ref": "#/definitions/frequencyCode"
        },
        "instructedAmount": {
          "$ref": "#/definitions/amount"
        },
        "remittanceInformationUnstructured": {
          "maxLength": 140,
          "type": "string"
        },
        "startDate": {
          "$ref": "#/definitions/startDate"
        }
      },
      "required": [
        "debtorAccount",
        "instructedAmount",
        "creditorAccount",
        "creditorName",
        "startDate",
        "frequency"
      ],
      "type": "object"
    },
    "periodicPaymentInitiationMultipartBody": {
      "description": "The multipart message definition for the initiation of a periodic payment initiation \nwhere the information of the payment is contained in an pain.001 message (Part 1) and \nthe additional informations related to the periodic payment is an additional JSON message (Part 2).\n",
      "properties": {
        "json_standingorderType": {
          "$ref": "#/definitions/periodicPaymentInitiation_xml-Part2-standingorderType_json"
        },
        "xml_sct": {
          "oneOf": [
            {
              "$ref": "#/definitions/paymentInitiationSct_pain.001"
            },
            {
              "$ref": "#/definitions/paymentInitiationSctInst_pain.001"
            },
            {
              "$ref": "#/definitions/paymentInitiationTarget2_pain.001"
            },
            {
              "$ref": "#/definitions/paymentInitiationCrossBorder_pain.001"
            }
          ]
        }
      },
      "type": "object"
    },
    "periodicPaymentInitiationSctInstWithStatusResponse": {
      "description": "JSON response body consistion of the corresponding periodic SCT INST payment initation JSON body together with an optional transaction status field.\n",
      "properties": {
        "creditorAccount": {
          "$ref": "#/definitions/accountReference"
        },
        "creditorAddress": {
          "$ref": "#/definitions/address"
        },
        "creditorAgent": {
          "$ref": "#/definitions/bicfi"
        },
        "creditorName": {
          "$ref": "#/definitions/creditorName"
        },
        "dayOfExecution": {
          "$ref": "#/definitions/dayOfExecution"
        },
        "debtorAccount": {
          "$ref": "#/definitions/accountReference"
        },
        "endDate": {
          "$ref": "#/definitions/endDate"
        },
        "endToEndIdentification": {
          "maxLength": 35,
          "type": "string"
        },
        "executionRule": {
          "$ref": "#/definitions/executionRule"
        },
        "frequency": {
          "$ref": "#/definitions/frequencyCode"
        },
        "instructedAmount": {
          "$ref": "#/definitions/amount"
        },
        "remittanceInformationUnstructured": {
          "$ref": "#/definitions/remittanceInformationUnstructured"
        },
        "startDate": {
          "$ref": "#/definitions/startDate"
        },
        "transactionStatus": {
          "$ref": "#/definitions/transactionStatus"
        }
      },
      "required": [
        "debtorAccount",
        "instructedAmount",
        "creditorAccount",
        "creditorName",
        "startDate",
        "frequency"
      ],
      "type": "object"
    },
    "periodicPaymentInitiationSctInst_json": {
      "description": "JSON Body for a periodic SCT INST payment initation.\n",
      "properties": {
        "creditorAccount": {
          "$ref": "#/definitions/accountReference"
        },
        "creditorAddress": {
          "$ref": "#/definitions/address"
        },
        "creditorAgent": {
          "$ref": "#/definitions/bicfi"
        },
        "creditorName": {
          "$ref": "#/definitions/creditorName"
        },
        "dayOfExecution": {
          "$ref": "#/definitions/dayOfExecution"
        },
        "debtorAccount": {
          "$ref": "#/definitions/accountReference"
        },
        "endDate": {
          "$ref": "#/definitions/endDate"
        },
        "endToEndIdentification": {
          "maxLength": 35,
          "type": "string"
        },
        "executionRule": {
          "$ref": "#/definitions/executionRule"
        },
        "frequency": {
          "$ref": "#/definitions/frequencyCode"
        },
        "instructedAmount": {
          "$ref": "#/definitions/amount"
        },
        "remittanceInformationUnstructured": {
          "maxLength": 140,
          "type": "string"
        },
        "startDate": {
          "$ref": "#/definitions/startDate"
        }
      },
      "required": [
        "debtorAccount",
        "instructedAmount",
        "creditorAccount",
        "creditorName",
        "startDate",
        "frequency"
      ],
      "type": "object"
    },
    "periodicPaymentInitiationSctWithStatusResponse": {
      "description": "JSON response body consistion of the corresponding periodic SCT payment initation JSON body together with an optional transaction status field.\n",
      "properties": {
        "creditorAccount": {
          "$ref": "#/definitions/accountReference"
        },
        "creditorAddress": {
          "$ref": "#/definitions/address"
        },
        "creditorAgent": {
          "$ref": "#/definitions/bicfi"
        },
        "creditorName": {
          "$ref": "#/definitions/creditorName"
        },
        "dayOfExecution": {
          "$ref": "#/definitions/dayOfExecution"
        },
        "debtorAccount": {
          "$ref": "#/definitions/accountReference"
        },
        "endDate": {
          "$ref": "#/definitions/endDate"
        },
        "endToEndIdentification": {
          "maxLength": 35,
          "type": "string"
        },
        "executionRule": {
          "$ref": "#/definitions/executionRule"
        },
        "frequency": {
          "$ref": "#/definitions/frequencyCode"
        },
        "instructedAmount": {
          "$ref": "#/definitions/amount"
        },
        "remittanceInformationUnstructured": {
          "$ref": "#/definitions/remittanceInformationUnstructured"
        },
        "startDate": {
          "$ref": "#/definitions/startDate"
        },
        "transactionStatus": {
          "$ref": "#/definitions/transactionStatus"
        }
      },
      "required": [
        "debtorAccount",
        "instructedAmount",
        "creditorAccount",
        "creditorName",
        "startDate",
        "frequency"
      ],
      "type": "object"
    },
    "periodicPaymentInitiationSct_json": {
      "description": "JSON Body for a periodic SCT payment initation.\n",
      "properties": {
        "creditorAccount": {
          "$ref": "#/definitions/accountReference"
        },
        "creditorAddress": {
          "$ref": "#/definitions/address"
        },
        "creditorAgent": {
          "$ref": "#/definitions/bicfi"
        },
        "creditorName": {
          "$ref": "#/definitions/creditorName"
        },
        "dayOfExecution": {
          "$ref": "#/definitions/dayOfExecution"
        },
        "debtorAccount": {
          "$ref": "#/definitions/accountReference"
        },
        "endDate": {
          "$ref": "#/definitions/endDate"
        },
        "endToEndIdentification": {
          "maxLength": 35,
          "type": "string"
        },
        "executionRule": {
          "$ref": "#/definitions/executionRule"
        },
        "frequency": {
          "$ref": "#/definitions/frequencyCode"
        },
        "instructedAmount": {
          "$ref": "#/definitions/amount"
        },
        "remittanceInformationUnstructured": {
          "$ref": "#/definitions/remittanceInformationUnstructured"
        },
        "startDate": {
          "$ref": "#/definitions/startDate"
        }
      },
      "required": [
        "debtorAccount",
        "instructedAmount",
        "creditorAccount",
        "creditorName",
        "startDate",
        "frequency"
      ],
      "type": "object"
    },
    "periodicPaymentInitiationTarget2WithStatusResponse": {
      "description": "JSON response body consistion of the corresponding periodic TARGET-2 payment initation JSON body together with \nan optional transaction status field.\n",
      "properties": {
        "creditorAccount": {
          "$ref": "#/definitions/accountReference"
        },
        "creditorAddress": {
          "$ref": "#/definitions/address"
        },
        "creditorAgent": {
          "$ref": "#/definitions/bicfi"
        },
        "creditorName": {
          "$ref": "#/definitions/creditorName"
        },
        "dayOfExecution": {
          "$ref": "#/definitions/dayOfExecution"
        },
        "debtorAccount": {
          "$ref": "#/definitions/accountReference"
        },
        "endDate": {
          "$ref": "#/definitions/endDate"
        },
        "endToEndIdentification": {
          "maxLength": 35,
          "type": "string"
        },
        "executionRule": {
          "$ref": "#/definitions/executionRule"
        },
        "frequency": {
          "$ref": "#/definitions/frequencyCode"
        },
        "instructedAmount": {
          "$ref": "#/definitions/amount"
        },
        "remittanceInformationUnstructured": {
          "maxLength": 140,
          "type": "string"
        },
        "startDate": {
          "$ref": "#/definitions/startDate"
        },
        "transactionStatus": {
          "$ref": "#/definitions/transactionStatus"
        }
      },
      "required": [
        "debtorAccount",
        "instructedAmount",
        "creditorAccount",
        "creditorName",
        "startDate",
        "frequency"
      ],
      "type": "object"
    },
    "periodicPaymentInitiationTarget2_json": {
      "description": "JSON Body for a periodic target-2 payment initation.\n",
      "properties": {
        "creditorAccount": {
          "$ref": "#/definitions/accountReference"
        },
        "creditorAddress": {
          "$ref": "#/definitions/address"
        },
        "creditorAgent": {
          "$ref": "#/definitions/bicfi"
        },
        "creditorName": {
          "$ref": "#/definitions/creditorName"
        },
        "dayOfExecution": {
          "$ref": "#/definitions/dayOfExecution"
        },
        "debtorAccount": {
          "$ref": "#/definitions/accountReference"
        },
        "endDate": {
          "$ref": "#/definitions/endDate"
        },
        "endToEndIdentification": {
          "maxLength": 35,
          "type": "string"
        },
        "executionRule": {
          "$ref": "#/definitions/executionRule"
        },
        "frequency": {
          "$ref": "#/definitions/frequencyCode"
        },
        "instructedAmount": {
          "$ref": "#/definitions/amount"
        },
        "remittanceInformationUnstructured": {
          "maxLength": 140,
          "type": "string"
        },
        "startDate": {
          "$ref": "#/definitions/startDate"
        }
      },
      "required": [
        "debtorAccount",
        "instructedAmount",
        "creditorAccount",
        "creditorName",
        "startDate",
        "frequency"
      ],
      "type": "object"
    },
    "periodicPaymentInitiation_xml-Part2-standingorderType_json": {
      "description": "The body part 2 of a periodic payment initation request containes the execution related informations \nof the periodic payment.\n",
      "properties": {
        "dayOfExecution": {
          "$ref": "#/definitions/dayOfExecution"
        },
        "endDate": {
          "$ref": "#/definitions/endDate"
        },
        "executionRule": {
          "$ref": "#/definitions/executionRule"
        },
        "frequency": {
          "$ref": "#/definitions/frequencyCode"
        },
        "startDate": {
          "$ref": "#/definitions/startDate"
        }
      },
      "required": [
        "startDate",
        "frequency"
      ],
      "type": "object"
    },
    "proprietaryBankTransactionCode": {
      "description": "Proprietary bank transaction code as used within a community or within an ASPSP e.g. \nfor MT94x based transaction reports.\n",
      "maxLength": 35,
      "type": "string"
    },
    "psuData": {
      "description": "PSU Data for Update PSU Authentication.",
      "properties": {
        "password": {
          "description": "Password",
          "type": "string"
        }
      },
      "required": [
        "password"
      ],
      "type": "object"
    },
    "psuMessageText": {
      "description": "Text to be displayed to the PSU",
      "maxLength": 512,
      "type": "string"
    },
    "purposeCode": {
      "description": "ExternalPurpose1Code from ISO 20022.\n\nValues from ISO 20022 External Code List ExternalCodeSets_1Q2018 June 2018.\n",
      "enum": [
        "BKDF",
        "BKFE",
        "BKFM",
        "BKIP",
        "BKPP",
        "CBLK",
        "CDCB",
        "CDCD",
        "CDCS",
        "CDDP",
        "CDOC",
        "CDQC",
        "ETUP",
        "FCOL",
        "MTUP",
        "ACCT",
        "CASH",
        "COLL",
        "CSDB",
        "DEPT",
        "INTC",
        "LIMA",
        "NETT",
        "BFWD",
        "CCIR",
        "CCPC",
        "CCPM",
        "CCSM",
        "CRDS",
        "CRPR",
        "CRSP",
        "CRTL",
        "EQPT",
        "EQUS",
        "EXPT",
        "EXTD",
        "FIXI",
        "FWBC",
        "FWCC",
        "FWSB",
        "FWSC",
        "MARG",
        "MBSB",
        "MBSC",
        "MGCC",
        "MGSC",
        "OCCC",
        "OPBC",
        "OPCC",
        "OPSB",
        "OPSC",
        "OPTN",
        "OTCD",
        "REPO",
        "RPBC",
        "RPCC",
        "RPSB",
        "RPSC",
        "RVPO",
        "SBSC",
        "SCIE",
        "SCIR",
        "SCRP",
        "SHBC",
        "SHCC",
        "SHSL",
        "SLEB",
        "SLOA",
        "SWBC",
        "SWCC",
        "SWPT",
        "SWSB",
        "SWSC",
        "TBAS",
        "TBBC",
        "TBCC",
        "TRCP",
        "AGRT",
        "AREN",
        "BEXP",
        "BOCE",
        "COMC",
        "CPYR",
        "GDDS",
        "GDSV",
        "GSCB",
        "LICF",
        "MP2B",
        "POPE",
        "ROYA",
        "SCVE",
        "SERV",
        "SUBS",
        "SUPP",
        "TRAD",
        "CHAR",
        "COMT",
        "MP2P",
        "ECPG",
        "ECPR",
        "ECPU",
        "EPAY",
        "CLPR",
        "COMP",
        "DBTC",
        "GOVI",
        "HLRP",
        "HLST",
        "INPC",
        "INPR",
        "INSC",
        "INSU",
        "INTE",
        "LBRI",
        "LIFI",
        "LOAN",
        "LOAR",
        "PENO",
        "PPTI",
        "RELG",
        "RINP",
        "TRFD",
        "FORW",
        "FXNT",
        "ADMG",
        "ADVA",
        "BCDM",
        "BCFG",
        "BLDM",
        "BNET",
        "CBFF",
        "CBFR",
        "CCRD",
        "CDBL",
        "CFEE",
        "CGDD",
        "CORT",
        "COST",
        "CPKC",
        "DCRD",
        "DSMT",
        "DVPM",
        "EDUC",
        "FACT",
        "FAND",
        "FCPM",
        "FEES",
        "GOVT",
        "ICCP",
        "IDCP",
        "IHRP",
        "INSM",
        "IVPT",
        "MCDM",
        "MCFG",
        "MSVC",
        "NOWS",
        "OCDM",
        "OCFG",
        "OFEE",
        "OTHR",
        "PADD",
        "PTSP",
        "RCKE",
        "RCPT",
        "REBT",
        "REFU",
        "RENT",
        "REOD",
        "RIMB",
        "RPNT",
        "RRBN",
        "RVPM",
        "SLPI",
        "SPLT",
        "STDY",
        "TBAN",
        "TBIL",
        "TCSC",
        "TELI",
        "TMPG",
        "TPRI",
        "TPRP",
        "TRNC",
        "TRVC",
        "WEBI",
        "ANNI",
        "CAFI",
        "CFDI",
        "CMDT",
        "DERI",
        "DIVD",
        "FREX",
        "HEDG",
        "INVS",
        "PRME",
        "SAVG",
        "SECU",
        "SEPI",
        "TREA",
        "UNIT",
        "FNET",
        "FUTR",
        "ANTS",
        "CVCF",
        "DMEQ",
        "DNTS",
        "HLTC",
        "HLTI",
        "HSPC",
        "ICRF",
        "LTCF",
        "MAFC",
        "MARF",
        "MDCS",
        "VIEW",
        "CDEP",
        "SWFP",
        "SWPP",
        "SWRS",
        "SWUF",
        "ADCS",
        "AEMP",
        "ALLW",
        "ALMY",
        "BBSC",
        "BECH",
        "BENE",
        "BONU",
        "CCHD",
        "COMM",
        "CSLP",
        "GFRP",
        "GVEA",
        "GVEB",
        "GVEC",
        "GVED",
        "GWLT",
        "HREC",
        "PAYR",
        "PEFC",
        "PENS",
        "PRCP",
        "RHBS",
        "SALA",
        "SSBE",
        "LBIN",
        "LCOL",
        "LFEE",
        "LMEQ",
        "LMFI",
        "LMRK",
        "LREB",
        "LREV",
        "LSFL",
        "ESTX",
        "FWLV",
        "GSTX",
        "HSTX",
        "INTX",
        "NITX",
        "PTXP",
        "RDTX",
        "TAXS",
        "VATX",
        "WHLD",
        "TAXR",
        "B112",
        "BR12",
        "TLRF",
        "TLRR",
        "AIRB",
        "BUSB",
        "FERB",
        "RLWY",
        "TRPT",
        "CBTV",
        "ELEC",
        "ENRG",
        "GASB",
        "NWCH",
        "NWCM",
        "OTLC",
        "PHON",
        "UBIL",
        "WTER"
      ],
      "type": "string"
    },
    "readAccountBalanceResponse-200": {
      "description": "Body of the response for a successful read balance for an account request.",
      "properties": {
        "account": {
          "$ref": "#/definitions/accountReference"
        },
        "balances": {
          "$ref": "#/definitions/balanceList"
        }
      },
      "required": [
        "balances"
      ],
      "type": "object"
    },
    "readCardAccountBalanceResponse-200": {
      "description": "Body of the response for a successful read balance for a card account request.",
      "properties": {
        "balances": {
          "$ref": "#/definitions/balanceList"
        },
        "cardAccount": {
          "$ref": "#/definitions/accountReference"
        }
      },
      "required": [
        "balances"
      ],
      "type": "object"
    },
    "recurringIndicator": {
      "description": "\"true\", if the consent is for recurring access to the account data.\n\n\"false\", if the consent is for one access to the account data.\n",
      "example": false,
      "type": "boolean"
    },
    "remittanceInformationStructured": {
      "description": "Structured remittance information\n",
      "properties": {
        "reference": {
          "maxLength": 35,
          "type": "string"
        },
        "referenceIssuer": {
          "maxLength": 35,
          "type": "string"
        },
        "referenceType": {
          "maxLength": 35,
          "type": "string"
        }
      },
      "required": [
        "reference"
      ],
      "type": "object"
    },
    "remittanceInformationUnstructured": {
      "description": "Unstructured remittance information\n",
      "example": "Ref Number Merchant",
      "maxLength": 140,
      "type": "string"
    },
    "resourceId": {
      "description": "This identification is given by the attribute resourceId of the corresponding entry of a transaction list.\n",
      "example": "3dc3d5b3-7023-4848-9853-f5400a64e80f",
      "type": "string"
    },
    "scaAuthenticationData": {
      "description": "SCA authentication data, depending on the chosen authentication method. \nIf the data is binary, then it is base64 encoded.\n",
      "type": "string"
    },
    "scaMethods": {
      "description": "This data element might be contained, if SCA is required and if the PSU has a choice between different\nauthentication methods.\n\nDepending on the risk management of the ASPSP this choice might be offered before or after the PSU\nhas been identified with the first relevant factor, or if an access token is transported.\n\nIf this data element is contained, then there is also an hyperlink of type 'startAuthorisationWithAuthenticationMethodSelection'\ncontained in the response body.\n\nThese methods shall be presented towards the PSU for selection by the TPP.\n",
      "items": {
        "$ref": "#/definitions/authenticationObject"
      },
      "type": "array"
    },
    "scaStatus": {
      "description": "This data element is containing information about the status of the SCA method applied. \n\nThe following codes are defined for this data type.\n\n  * 'received':\n    An authorisation or cancellation-authorisation resource has been created successfully.\n  * 'psuIdentified':\n    The PSU related to the authorisation or cancellation-authorisation resource has been identified.\n  * 'psuAuthenticated':\n    The PSU related to the authorisation or cancellation-authorisation resource has been identified and authenticated e.g. by a password or by an access token.\n  * 'scaMethodSelected':\n    The PSU/TPP has selected the related SCA routine. \n    If the SCA method is chosen implicitly since only one SCA method is available, \n    then this is the first status to be reported instead of 'received'.\n  * 'started':\n    The addressed SCA routine has been started.\n  * 'finalised':\n    The SCA routine has been finalised successfully.\n  * 'failed':\n    The SCA routine failed\n  * 'exempted':\n    SCA was exempted for the related transaction, the related authorisation is successful.\n",
      "enum": [
        "received",
        "psuIdentified",
        "psuAuthenticated",
        "scaMethodSelected",
        "started",
        "finalised",
        "failed",
        "exempted"
      ],
      "example": "psuAuthenticated",
      "type": "string"
    },
    "scaStatusResponse": {
      "description": "Body of the JSON response with SCA Status",
      "properties": {
        "scaStatus": {
          "$ref": "#/definitions/scaStatus"
        }
      },
      "type": "object"
    },
    "selectPsuAuthenticationMethod": {
      "description": "Content of the body of a Select PSU Authentication Method Request\n",
      "properties": {
        "authenticationMethodId": {
          "$ref": "#/definitions/authenticationMethodId"
        }
      },
      "required": [
        "authenticationMethodId"
      ],
      "type": "object"
    },
    "selectPsuAuthenticationMethodResponse": {
      "description": "Body of the JSON response for a successful select PSU Authentication Method request.",
      "properties": {
        "_links": {
          "$ref": "#/definitions/_linksSelectPsuAuthenticationMethod"
        },
        "challengeData": {
          "$ref": "#/definitions/challengeData"
        },
        "chosenScaMethod": {
          "$ref": "#/definitions/chosenScaMethod"
        },
        "psuMessage": {
          "$ref": "#/definitions/psuMessageText"
        },
        "scaStatus": {
          "$ref": "#/definitions/scaStatus"
        }
      },
      "required": [
        "scaStatus"
      ],
      "type": "object"
    },
    "signingBasket": {
      "description": "JSON Body of a establish signing basket request.\nThe body shall contain at least one entry.\n",
      "properties": {
        "consentIds": {
          "$ref": "#/definitions/consentIdList"
        },
        "paymentIds": {
          "$ref": "#/definitions/paymentIdList"
        }
      },
      "type": "object"
    },
    "signingBasketResponse-200": {
      "description": "Body of the JSON response for a successful get signing basket request.\n\n  * 'payments': payment initiations which shall be authorised through this signing basket.\n  * 'consents': consent objects which shall be authorised through this signing basket.\n  * 'transactionStatus': Only the codes RCVD, ACTC, RJCT are used.\n",
      "properties": {
        "consents": {
          "$ref": "#/definitions/consentIdList"
        },
        "payments": {
          "$ref": "#/definitions/paymentIdList"
        },
        "transactionStatus": {
          "$ref": "#/definitions/transactionStatus"
        }
      },
      "required": [
        "transactionStatus"
      ],
      "type": "object"
    },
    "signingBasketResponse-201": {
      "description": "Body of the JSON response for a successful create signing basket request.",
      "properties": {
        "_links": {
          "$ref": "#/definitions/_linksSigningBasket"
        },
        "basketId": {
          "$ref": "#/definitions/basketId"
        },
        "challengeData": {
          "$ref": "#/definitions/challengeData"
        },
        "chosenScaMethod": {
          "$ref": "#/definitions/chosenScaMethod"
        },
        "psuMessage": {
          "$ref": "#/definitions/psuMessageText"
        },
        "scaMethods": {
          "$ref": "#/definitions/scaMethods"
        },
        "tppMessages": {
          "items": {
            "$ref": "#/definitions/tppMessage2XX"
          },
          "type": "array"
        },
        "transactionStatus": {
          "$ref": "#/definitions/transactionStatus"
        }
      },
      "required": [
        "transactionStatus",
        "basketId",
        "_links"
      ],
      "type": "object"
    },
    "signingBasketStatusResponse-200": {
      "properties": {
        "transactionStatus": {
          "$ref": "#/definitions/transactionStatus_SB"
        }
      },
      "required": [
        "transactionStatus"
      ],
      "type": "object"
    },
    "startDate": {
      "description": "The first applicable day of execution starting from this date is the first payment.\n",
      "format": "date",
      "type": "string"
    },
    "startScaprocessResponse": {
      "description": "Body of the JSON response for a Start SCA authorisation request.",
      "properties": {
        "_links": {
          "$ref": "#/definitions/_linksStartScaProcess"
        },
        "challengeData": {
          "$ref": "#/definitions/challengeData"
        },
        "chosenScaMethod": {
          "$ref": "#/definitions/chosenScaMethod"
        },
        "psuMessage": {
          "$ref": "#/definitions/psuMessageText"
        },
        "scaMethods": {
          "$ref": "#/definitions/scaMethods"
        },
        "scaStatus": {
          "$ref": "#/definitions/scaStatus"
        }
      },
      "required": [
        "scaStatus",
        "_links"
      ],
      "type": "object"
    },
    "terminalId": {
      "description": "Identification of the Terminal, where the card has been used.",
      "maxLength": 35,
      "type": "string"
    },
    "tppErrorDetail": {
      "description": "Detailed human readable text specific to this instance of the error. \nXPath might be used to point to the issue generating the error in addition.\nRemark for Future: In future, a dedicated field might be introduced for the XPath.\n",
      "maxLength": 512,
      "type": "string"
    },
    "tppErrorTitle": {
      "description": "Short human readable description of error type. \nCould be in local language. \nTo be provided by ASPSPs.\n",
      "maxLength": 70,
      "type": "string"
    },
    "tppMessage2XX": {
      "properties": {
        "category": {
          "$ref": "#/definitions/tppMessageCategory"
        },
        "code": {
          "$ref": "#/definitions/MessageCode2XX"
        },
        "path": {
          "type": "string"
        },
        "text": {
          "$ref": "#/definitions/tppMessageText"
        }
      },
      "required": [
        "category",
        "code"
      ],
      "type": "object"
    },
    "tppMessage400_AIS": {
      "properties": {
        "category": {
          "$ref": "#/definitions/tppMessageCategory"
        },
        "code": {
          "$ref": "#/definitions/MessageCode400_AIS"
        },
        "path": {
          "type": "string"
        },
        "text": {
          "$ref": "#/definitions/tppMessageText"
        }
      },
      "required": [
        "category",
        "code"
      ],
      "type": "object"
    },
    "tppMessage400_PIIS": {
      "properties": {
        "category": {
          "$ref": "#/definitions/tppMessageCategory"
        },
        "code": {
          "$ref": "#/definitions/MessageCode400_PIIS"
        },
        "path": {
          "type": "string"
        },
        "text": {
          "$ref": "#/definitions/tppMessageText"
        }
      },
      "required": [
        "category",
        "code"
      ],
      "type": "object"
    },
    "tppMessage400_PIS": {
      "properties": {
        "category": {
          "$ref": "#/definitions/tppMessageCategory"
        },
        "code": {
          "$ref": "#/definitions/MessageCode400_PIS"
        },
        "path": {
          "type": "string"
        },
        "text": {
          "$ref": "#/definitions/tppMessageText"
        }
      },
      "required": [
        "category",
        "code"
      ],
      "type": "object"
    },
    "tppMessage400_SB": {
      "properties": {
        "category": {
          "$ref": "#/definitions/tppMessageCategory"
        },
        "code": {
          "$ref": "#/definitions/MessageCode400_SB"
        },
        "path": {
          "type": "string"
        },
        "text": {
          "$ref": "#/definitions/tppMessageText"
        }
      },
      "required": [
        "category",
        "code"
      ],
      "type": "object"
    },
    "tppMessage401_AIS": {
      "properties": {
        "category": {
          "$ref": "#/definitions/tppMessageCategory"
        },
        "code": {
          "$ref": "#/definitions/MessageCode401_AIS"
        },
        "path": {
          "type": "string"
        },
        "text": {
          "$ref": "#/definitions/tppMessageText"
        }
      },
      "required": [
        "category",
        "code"
      ],
      "type": "object"
    },
    "tppMessage401_PIIS": {
      "properties": {
        "category": {
          "$ref": "#/definitions/tppMessageCategory"
        },
        "code": {
          "$ref": "#/definitions/MessageCode401_PIIS"
        },
        "path": {
          "type": "string"
        },
        "text": {
          "$ref": "#/definitions/tppMessageText"
        }
      },
      "required": [
        "category",
        "code"
      ],
      "type": "object"
    },
    "tppMessage401_PIS": {
      "properties": {
        "category": {
          "$ref": "#/definitions/tppMessageCategory"
        },
        "code": {
          "$ref": "#/definitions/MessageCode401_PIS"
        },
        "path": {
          "type": "string"
        },
        "text": {
          "$ref": "#/definitions/tppMessageText"
        }
      },
      "required": [
        "category",
        "code"
      ],
      "type": "object"
    },
    "tppMessage401_SB": {
      "properties": {
        "category": {
          "$ref": "#/definitions/tppMessageCategory"
        },
        "code": {
          "$ref": "#/definitions/MessageCode401_SB"
        },
        "path": {
          "type": "string"
        },
        "text": {
          "$ref": "#/definitions/tppMessageText"
        }
      },
      "required": [
        "category",
        "code"
      ],
      "type": "object"
    },
    "tppMessage403_AIS": {
      "properties": {
        "category": {
          "$ref": "#/definitions/tppMessageCategory"
        },
        "code": {
          "$ref": "#/definitions/MessageCode403_AIS"
        },
        "path": {
          "type": "string"
        },
        "text": {
          "$ref": "#/definitions/tppMessageText"
        }
      },
      "required": [
        "category",
        "code"
      ],
      "type": "object"
    },
    "tppMessage403_PIIS": {
      "properties": {
        "category": {
          "$ref": "#/definitions/tppMessageCategory"
        },
        "code": {
          "$ref": "#/definitions/MessageCode403_PIIS"
        },
        "path": {
          "type": "string"
        },
        "text": {
          "$ref": "#/definitions/tppMessageText"
        }
      },
      "required": [
        "category",
        "code"
      ],
      "type": "object"
    },
    "tppMessage403_PIS": {
      "properties": {
        "category": {
          "$ref": "#/definitions/tppMessageCategory"
        },
        "code": {
          "$ref": "#/definitions/MessageCode403_PIS"
        },
        "path": {
          "type": "string"
        },
        "text": {
          "$ref": "#/definitions/tppMessageText"
        }
      },
      "required": [
        "category",
        "code"
      ],
      "type": "object"
    },
    "tppMessage403_SB": {
      "properties": {
        "category": {
          "$ref": "#/definitions/tppMessageCategory"
        },
        "code": {
          "$ref": "#/definitions/MessageCode403_SB"
        },
        "path": {
          "type": "string"
        },
        "text": {
          "$ref": "#/definitions/tppMessageText"
        }
      },
      "required": [
        "category",
        "code"
      ],
      "type": "object"
    },
    "tppMessage404_AIS": {
      "properties": {
        "category": {
          "$ref": "#/definitions/tppMessageCategory"
        },
        "code": {
          "$ref": "#/definitions/MessageCode404_AIS"
        },
        "path": {
          "type": "string"
        },
        "text": {
          "$ref": "#/definitions/tppMessageText"
        }
      },
      "required": [
        "category",
        "code"
      ],
      "type": "object"
    },
    "tppMessage404_PIIS": {
      "properties": {
        "category": {
          "$ref": "#/definitions/tppMessageCategory"
        },
        "code": {
          "$ref": "#/definitions/MessageCode404_PIIS"
        },
        "path": {
          "type": "string"
        },
        "text": {
          "$ref": "#/definitions/tppMessageText"
        }
      },
      "required": [
        "category",
        "code"
      ],
      "type": "object"
    },
    "tppMessage404_PIS": {
      "properties": {
        "category": {
          "$ref": "#/definitions/tppMessageCategory"
        },
        "code": {
          "$ref": "#/definitions/MessageCode404_PIS"
        },
        "path": {
          "type": "string"
        },
        "text": {
          "$ref": "#/definitions/tppMessageText"
        }
      },
      "required": [
        "category",
        "code"
      ],
      "type": "object"
    },
    "tppMessage404_SB": {
      "properties": {
        "category": {
          "$ref": "#/definitions/tppMessageCategory"
        },
        "code": {
          "$ref": "#/definitions/MessageCode404_SB"
        },
        "path": {
          "type": "string"
        },
        "text": {
          "$ref": "#/definitions/tppMessageText"
        }
      },
      "required": [
        "category",
        "code"
      ],
      "type": "object"
    },
    "tppMessage405_AIS": {
      "properties": {
        "category": {
          "$ref": "#/definitions/tppMessageCategory"
        },
        "code": {
          "$ref": "#/definitions/MessageCode405_AIS"
        },
        "path": {
          "type": "string"
        },
        "text": {
          "$ref": "#/definitions/tppMessageText"
        }
      },
      "required": [
        "category",
        "code"
      ],
      "type": "object"
    },
    "tppMessage405_PIIS": {
      "properties": {
        "category": {
          "$ref": "#/definitions/tppMessageCategory"
        },
        "code": {
          "$ref": "#/definitions/MessageCode405_PIIS"
        },
        "path": {
          "type": "string"
        },
        "text": {
          "$ref": "#/definitions/tppMessageText"
        }
      },
      "required": [
        "category",
        "code"
      ],
      "type": "object"
    },
    "tppMessage405_PIS": {
      "properties": {
        "category": {
          "$ref": "#/definitions/tppMessageCategory"
        },
        "code": {
          "$ref": "#/definitions/MessageCode405_PIS"
        },
        "path": {
          "type": "string"
        },
        "text": {
          "$ref": "#/definitions/tppMessageText"
        }
      },
      "required": [
        "category",
        "code"
      ],
      "type": "object"
    },
    "tppMessage405_PIS_CANC": {
      "properties": {
        "category": {
          "$ref": "#/definitions/tppMessageCategory"
        },
        "code": {
          "$ref": "#/definitions/MessageCode405_PIS_CANC"
        },
        "path": {
          "type": "string"
        },
        "text": {
          "$ref": "#/definitions/tppMessageText"
        }
      },
      "required": [
        "category",
        "code"
      ],
      "type": "object"
    },
    "tppMessage405_SB": {
      "properties": {
        "category": {
          "$ref": "#/definitions/tppMessageCategory"
        },
        "code": {
          "$ref": "#/definitions/MessageCode405_SB"
        },
        "path": {
          "type": "string"
        },
        "text": {
          "$ref": "#/definitions/tppMessageText"
        }
      },
      "required": [
        "category",
        "code"
      ],
      "type": "object"
    },
    "tppMessage406_AIS": {
      "properties": {
        "category": {
          "$ref": "#/definitions/tppMessageCategory"
        },
        "code": {
          "$ref": "#/definitions/MessageCode406_AIS"
        },
        "path": {
          "type": "string"
        },
        "text": {
          "$ref": "#/definitions/tppMessageText"
        }
      },
      "required": [
        "category",
        "code"
      ],
      "type": "object"
    },
    "tppMessage409_AIS": {
      "properties": {
        "category": {
          "$ref": "#/definitions/tppMessageCategory"
        },
        "code": {
          "$ref": "#/definitions/MessageCode409_AIS"
        },
        "path": {
          "type": "string"
        },
        "text": {
          "$ref": "#/definitions/tppMessageText"
        }
      },
      "required": [
        "category",
        "code"
      ],
      "type": "object"
    },
    "tppMessage409_PIIS": {
      "properties": {
        "category": {
          "$ref": "#/definitions/tppMessageCategory"
        },
        "code": {
          "$ref": "#/definitions/MessageCode409_PIIS"
        },
        "path": {
          "type": "string"
        },
        "text": {
          "$ref": "#/definitions/tppMessageText"
        }
      },
      "required": [
        "category",
        "code"
      ],
      "type": "object"
    },
    "tppMessage409_PIS": {
      "properties": {
        "category": {
          "$ref": "#/definitions/tppMessageCategory"
        },
        "code": {
          "$ref": "#/definitions/MessageCode409_PIS"
        },
        "path": {
          "type": "string"
        },
        "text": {
          "$ref": "#/definitions/tppMessageText"
        }
      },
      "required": [
        "category",
        "code"
      ],
      "type": "object"
    },
    "tppMessage409_SB": {
      "properties": {
        "category": {
          "$ref": "#/definitions/tppMessageCategory"
        },
        "code": {
          "$ref": "#/definitions/MessageCode409_SB"
        },
        "path": {
          "type": "string"
        },
        "text": {
          "$ref": "#/definitions/tppMessageText"
        }
      },
      "required": [
        "category",
        "code"
      ],
      "type": "object"
    },
    "tppMessage429_AIS": {
      "properties": {
        "category": {
          "$ref": "#/definitions/tppMessageCategory"
        },
        "code": {
          "$ref": "#/definitions/MessageCode429_AIS"
        },
        "path": {
          "type": "string"
        },
        "text": {
          "$ref": "#/definitions/tppMessageText"
        }
      },
      "required": [
        "category",
        "code"
      ],
      "type": "object"
    },
    "tppMessageCategory": {
      "description": "Category of the TPP message category",
      "enum": [
        "ERROR",
        "WARNING"
      ],
      "type": "string"
    },
    "tppMessageText": {
      "description": "Additional explaining text to the TPP.",
      "maxLength": 512,
      "type": "string"
    },
    "transactionAuthorisation": {
      "description": "Content of the body of a Transaction Authorisation Request\n",
      "properties": {
        "scaAuthenticationData": {
          "$ref": "#/definitions/scaAuthenticationData"
        }
      },
      "required": [
        "scaAuthenticationData"
      ],
      "type": "object"
    },
    "transactionDate": {
      "description": "Date of the actual card transaction",
      "format": "date",
      "type": "string"
    },
    "transactionDetails": {
      "description": "Transaction details",
      "properties": {
        "_links": {
          "$ref": "#/definitions/_linksTransactionDetails"
        },
        "bankTransactionCode": {
          "$ref": "#/definitions/bankTransactionCode"
        },
        "bookingDate": {
          "$ref": "#/definitions/bookingDate"
        },
        "checkId": {
          "description": "Identification of a Cheque.",
          "maxLength": 35,
          "type": "string"
        },
        "creditorAccount": {
          "$ref": "#/definitions/accountReference"
        },
        "creditorId": {
          "description": "Identification of Creditors, e.g. a SEPA Creditor ID.",
          "maxLength": 35,
          "type": "string"
        },
        "creditorName": {
          "$ref": "#/definitions/creditorName"
        },
        "debtorAccount": {
          "$ref": "#/definitions/accountReference"
        },
        "debtorName": {
          "$ref": "#/definitions/debtorName"
        },
        "endToEndId": {
          "description": "Unique end to end identity.",
          "maxLength": 35,
          "type": "string"
        },
        "entryReference": {
          "description": "Is the identification of the transaction as used e.g. for reference for deltafunction on application level. \nThe same identification as for example used within camt.05x messages.\n",
          "maxLength": 35,
          "type": "string"
        },
        "exchangeRate": {
          "$ref": "#/definitions/exchangeRateList"
        },
        "mandateId": {
          "description": "Identification of Mandates, e.g. a SEPA Mandate ID.",
          "maxLength": 35,
          "type": "string"
        },
        "proprietaryBankTransactionCode": {
          "$ref": "#/definitions/proprietaryBankTransactionCode"
        },
        "purposeCode": {
          "$ref": "#/definitions/purposeCode"
        },
        "remittanceInformationStructured": {
          "description": "Reference as contained in the structured remittance reference structure (without the surrounding XML structure).\n\nDifferent from other places the content is containt in plain form not in form of a structered field.\n",
          "maxLength": 140,
          "type": "string"
        },
        "remittanceInformationUnstructured": {
          "maxLength": 140,
          "type": "string"
        },
        "transactionAmount": {
          "$ref": "#/definitions/amount"
        },
        "transactionId": {
          "description": "the Transaction Id can be used as access-ID in the API, where more details on an transaction is offered. \nIf this data attribute is provided this shows that the AIS can get access on more details about this \ntransaction using the GET Transaction Details Request \n",
          "type": "string"
        },
        "ultimateCreditor": {
          "$ref": "#/definitions/ultimateCreditor"
        },
        "ultimateDebtor": {
          "$ref": "#/definitions/ultimateDebtor"
        },
        "valueDate": {
          "description": "The Date at which assets become available to the account owner in case of a credit.",
          "format": "date",
          "type": "string"
        }
      },
      "required": [
        "transactionAmount"
      ],
      "type": "object"
    },
    "transactionFeeIndicator": {
      "description": "If equals 'true', the transaction will involve specific transaction cost as shown by the ASPSP in\ntheir public price list or as agreed between ASPSP and PSU.\nIf equals 'false', the transaction will not involve additional specific transaction costs to the PSU.\n",
      "type": "boolean"
    },
    "transactionList": {
      "description": "Array of transaction details",
      "items": {
        "$ref": "#/definitions/transactionDetails"
      },
      "type": "array"
    },
    "transactionStatus": {
      "description": "The transaction status is filled with codes of the ISO 20022 data table:\n- 'ACCC': 'AcceptedSettlementCompleted' -\n  Settlement on the creditor's account has been completed.\n- 'ACCP': 'AcceptedCustomerProfile' - \n  Preceding check of technical validation was successful. \n  Customer profile check was also successful.\n- 'ACSC': 'AcceptedSettlementCompleted' - \n  Settlement on the debtor�s account has been completed.\n  \n  **Usage:** this can be used by the first agent to report to the debtor that the transaction has been completed. \n  \n  **Warning:** this status is provided for transaction status reasons, not for financial information. \n  It can only be used after bilateral agreement.\n- 'ACSP': 'AcceptedSettlementInProcess' - \n  All preceding checks such as technical validation and customer profile were successful and therefore the payment initiation has been accepted for execution.\n- 'ACTC': 'AcceptedTechnicalValidation' - \n  Authentication and syntactical and semantical validation are successful.\n- 'ACWC': 'AcceptedWithChange' - \n  Instruction is accepted but a change will be made, such as date or remittance not sent.\n- 'ACWP': 'AcceptedWithoutPosting' - \n  Payment instruction included in the credit transfer is accepted without being posted to the creditor customer�s account.\n- 'RCVD': 'Received' - \n  Payment initiation has been received by the receiving agent.\n- 'PDNG': 'Pending' - \n  Payment initiation or individual transaction included in the payment initiation is pending. \n  Further checks and status update will be performed.\n- 'RJCT': 'Rejected' - \n  Payment initiation or individual transaction included in the payment initiation has been rejected.\n- 'CANC': 'Cancelled'\n  Payment initiation has been cancelled before execution\n  Remark: This code is still requested from ISO20022.\n- 'ACFC': 'AcceptedFundsChecked' -\n  Preceeding check of technical validation and customer profile was successful and an automatic funds check was positive .\n  Remark: This code is still requested from ISO20022.\n- 'PATC': 'PartiallyAcceptedTechnical'\n  Correct The payment initiation needs multiple authentications, where some but not yet all have been performed. Syntactical and semantical validations are successful.\n  Remark: This code is still requested from ISO20022.\n",
      "enum": [
        "ACCC",
        "ACCP",
        "ACSC",
        "ACSP",
        "ACTC",
        "ACWC",
        "ACWP",
        "RCVD",
        "PDNG",
        "RJCT",
        "CANC",
        "ACFC",
        "PATC"
      ],
      "example": "ACCP",
      "type": "string"
    },
    "transactionStatus_SB": {
      "description": "The transaction status is filled with codes of the ISO 20022 data table.\nOnly the codes RCVD, PATC, ACTC, ACWC and RJCT are used:\n- 'ACSP': 'AcceptedSettlementInProcess' - \n  All preceding checks such as technical validation and customer profile were successful and therefore the payment initiation has been accepted for execution.\n- 'ACTC': 'AcceptedTechnicalValidation' - \n  Authentication and syntactical and semantical validation are successful.\n- 'ACWC': 'AcceptedWithChange' - \n  Instruction is accepted but a change will be made, such as date or remittance not sent.\n- 'RCVD': 'Received' - \n  Payment initiation has been received by the receiving agent.\n- 'RJCT': 'Rejected' - \n  Payment initiation or individual transaction included in the payment initiation has been rejected.\n",
      "enum": [
        "ACSC",
        "ACTC",
        "ACWC",
        "RCVD",
        "RJCT"
      ],
      "example": "RCVD",
      "type": "string"
    },
    "transactionsResponse-200_json": {
      "description": "Body of the JSON response for a successful read transaction list request.\nThis account report contains transactions resulting from the query parameters.\n",
      "properties": {
        "_links": {
          "$ref": "#/definitions/_linksDownload"
        },
        "account": {
          "$ref": "#/definitions/accountReference"
        },
        "balances": {
          "$ref": "#/definitions/balanceList"
        },
        "transactions": {
          "$ref": "#/definitions/accountReport"
        }
      },
      "type": "object"
    },
    "ultimateCreditor": {
      "description": "Ultimate Creditor",
      "example": "Ultimate Creditor",
      "maxLength": 70,
      "type": "string"
    },
    "ultimateDebtor": {
      "description": "Ultimate Debtor",
      "example": "Ultimate Debtor",
      "maxLength": 70,
      "type": "string"
    },
    "updatePsuAuthentication": {
      "description": "Content of the body of a Update PSU Authentication Request\n\nPassword subfield is used.\n",
      "properties": {
        "psuData": {
          "$ref": "#/definitions/psuData"
        }
      },
      "required": [
        "psuData"
      ],
      "type": "object"
    },
    "updatePsuAuthenticationResponse": {
      "description": "Body of the JSON response for a successful update PSU Authentication request.",
      "properties": {
        "_links": {
          "$ref": "#/definitions/_linksUpdatePsuAuthentication"
        },
        "challengeData": {
          "$ref": "#/definitions/challengeData"
        },
        "chosenScaMethod": {
          "$ref": "#/definitions/chosenScaMethod"
        },
        "psuMessage": {
          "$ref": "#/definitions/psuMessageText"
        },
        "scaMethods": {
          "$ref": "#/definitions/scaMethods"
        },
        "scaStatus": {
          "$ref": "#/definitions/scaStatus"
        }
      },
      "required": [
        "scaStatus"
      ],
      "type": "object"
    },
    "updatePsuIdenticationResponse": {
      "description": "Body of the JSON response for a successful update PSU Identification request.",
      "properties": {
        "_links": {
          "$ref": "#/definitions/_linksUpdatePsuIdentification"
        },
        "psuMessage": {
          "$ref": "#/definitions/psuMessageText"
        },
        "scaStatus": {
          "$ref": "#/definitions/scaStatus"
        }
      },
      "required": [
        "_links",
        "scaStatus"
      ],
      "type": "object"
    },
    "validUntil": {
      "description": "This parameter is requesting a valid until date for the requested consent. \nThe content is the local ASPSP date in ISO-Date Format, e.g. 2017-10-30. \n\nFuture dates might get adjusted by ASPSP. \n\nIf a maximal available date is requested, a date in far future is to be used: \"9999-12-31\". \n\nIn both cases the consent object to be retrieved by the GET Consent Request will contain the adjusted date.\n",
      "example": "2020-12-31",
      "format": "date",
      "type": "string"
    }
  },
  "externalDocs": {
    "description": "Full Documentation of NextGenPSD2 Access to Account Interoperability Framework\n(General Introduction Paper, Operational Rules, Implementation Guidelines)\n",
    "url": "https://www.berlin-group.org/nextgenpsd2-downloads"
  },
  "host": "api.testbank.com",
  "info": {
    "contact": {
      "email": "info@berlin-group.org",
      "name": "The Berlin Group - A European Standards Initiative",
      "url": "https://www.berlin-group.org/"
    },
    "description": "# Summary\nThe **NextGenPSD2** *Framework Version 1.3* offers a modern, open, harmonised and interoperable set of \nApplication Programming Interfaces (APIs) as the safest and most efficient way to provide data securely. \nThe NextGenPSD2 Framework reduces XS2A complexity and costs, addresses the problem of multiple competing standards \nin Europe and, aligned with the goals of the Euro Retail Payments Board,\nenables European banking customers to benefit from innovative products and services ('Banking as a Service') \nby granting TPPs safe and secure (authenticated and authorised) access to their bank accounts and financial data.\n\nThe possible Approaches are:\n  * Redirect SCA Approach\n  * OAuth SCA Approach\n  * Decoupled SCA Approach\n  * Embedded SCA Approach without SCA method\n  * Embedded SCA Approach with only one SCA method available\n  * Embedded SCA Approach with Selection of a SCA method\n\n  Not every message defined in this API definition is necessary for all approaches. \n  Furthermore this API definition does not differ between methods which are mandatory, conditional, or optional\n  Therefore for a particular implementation of a Berlin Group PSD2 compliant API it is only necessary to support \n  a certain subset of the methods defined in this API definition.\n\n  **Please have a look at the implementation guidelines if you are not sure \n  which message has to be used for the approach you are going to use.**\n\n## Some General Remarks Related to this version of the OpenAPI Specification:\n* **This API definition is based on the Implementation Guidelines of the Berlin Group PSD2 API.** \n  It is not an replacement in any sense.\n  The main specification is (at the moment) always the Implementation Guidelines of the Berlin Group PSD2 API.\n* **This API definition contains the REST-API for requests from the PISP to the ASPSP.**\n* **This API definition contains the messages for all different approaches defined in the Implementation Guidelines.**\n* According to the OpenAPI-Specification [https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.1.md]\n  \n    \"If in is \"header\" and the name field is \"Accept\", \"Content-Type\" or \"Authorization\", the parameter definition SHALL be ignored.\"\n  \n  The element \"Accept\" will not be defined in this file at any place.\n  \n  The elements \"Content-Type\" and \"Authorization\" are implicitly defined by the OpenApi tags \"content\" and \"security\".\n  \n* There are several predefined types which might occur in payment initiation messages, \n  but are not used in the standard JSON messages in the Implementation Guidelines.\n  Therefore they are not used in the corresponding messages in this file either.\n  We added them for the convenience of the user.\n  If there is a payment product, which need these field, one can easily use the predefined types.\n  But the ASPSP need not to accept them in general.\n  \n* **We omit the definition of all standard HTTP header elements (mandatory/optional/conditional) \n  except they are mention in the Implementation Guidelines.**\n  Therefore the implementer might add the in his own realisation of a PSD2 comlient API in addition to the elements define in this file.\n   \n## General Remarks on Data Types\n\nThe Berlin Group definition of UTF-8 strings in context of the PSD2 API have to support at least the following characters\n\na b c d e f g h i j k l m n o p q r s t u v w x y z\n\nA B C D E F G H I J K L M N O P Q R S T U V W X Y Z\n\n0 1 2 3 4 5 6 7 8 9\n\n/ - ? : ( ) . , ' +\n\nSpace\n",
    "license": {
      "name": "Creative Commons Attribution 4.0 International Public License",
      "url": "https://creativecommons.org/licenses/by/4.0/"
    },
    "title": "BG PSD2 API",
    "version": "1.3 Dec 20th 2018"
  },
  "paths": {
    "/card-accounts": {
      "get": {
        "description": "Reads a list of card accounts with additional information, e.g. balance information. \nIt is assumed that a consent of the PSU to this access is already given and stored on the ASPSP system. \nThe addressed list of card accounts depends then on the PSU ID and the stored consent addressed by consentId, \nrespectively the OAuth2 access token. \n",
        "operationId": "getCardAccount",
        "parameters": [
          {
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "format": "uuid",
            "in": "header",
            "name": "X-Request-ID",
            "required": true,
            "type": "string",
            "x-example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721"
          },
          {
            "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request.",
            "in": "header",
            "name": "Digest",
            "required": false,
            "type": "string",
            "x-example": "SHA-256=hl1/Eps8BEQW58FJhDApwJXjGY4nr1ArGDHIT25vq6A="
          },
          {
            "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.\n",
            "in": "header",
            "name": "Signature",
            "required": false,
            "type": "string",
            "x-example": "keyId=\"SN=9FA1,CA=CN=D-TRUST%20CA%202-1%202015,O=D-Trust%20GmbH,C=DE\",algorithm=\"rsa-sha256\", headers=\"Digest X-Request-ID PSU-ID TPP-Redirect-URI Date\", signature=\"Base64(RSA-SHA256(signing string))\"\n"
          },
          {
            "description": "The certificate used for signing the request, in base64 encoding. \nMust be contained if a signature is contained.\n",
            "format": "byte",
            "in": "header",
            "name": "TPP-Signature-Certificate",
            "required": false,
            "type": "string"
          },
          {
            "description": "This then contains the consentId of the related AIS consent, which was performed prior to this payment initiation.\n",
            "in": "header",
            "name": "Consent-ID",
            "required": true,
            "type": "string"
          },
          {
            "description": "The forwarded IP Address header field consists of the corresponding HTTP request \nIP Address field between PSU and TPP. \nIt shall be contained if and only if this request was actively initiated by the PSU.\n",
            "format": "ipv4",
            "in": "header",
            "name": "PSU-IP-Address",
            "required": false,
            "type": "string",
            "x-example": "192.168.8.78"
          },
          {
            "description": "The forwarded IP Port header field consists of the corresponding HTTP request IP Port field between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-IP-Port",
            "required": false,
            "type": "string",
            "x-example": "1234"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept-Charset",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept-Encoding",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded Agent header field of the HTTP request between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-User-Agent",
            "required": false,
            "type": "string"
          },
          {
            "description": "HTTP method used at the PSU ? TPP interface, if available.\nValid values are:\n* GET\n* POST\n* PUT\n* PATCH\n* DELETE\n",
            "enum": [
              "GET",
              "POST",
              "PUT",
              "PATCH",
              "DELETE"
            ],
            "in": "header",
            "name": "PSU-Http-Method",
            "required": false,
            "type": "string"
          },
          {
            "description": "UUID (Universally Unique Identifier) for a device, which is used by the PSU, if available.\nUUID identifies either a device or a device dependant application installation.\nIn case of an installation identification this ID need to be unaltered until removal from device.\n",
            "format": "uuid",
            "in": "header",
            "name": "PSU-Device-ID",
            "required": false,
            "type": "string",
            "x-example": "99435c7e-ad88-49ec-a2ad-99ddcb1f5555"
          },
          {
            "description": "The forwarded Geo Location of the corresponding http request between PSU and TPP if available.\n",
            "in": "header",
            "name": "PSU-Geo-Location",
            "pattern": "(GEO:)[0-9]{1,3}\\.[-][0-9]{6}\\,[-][0-9]{1,3}\\.[0-9]{6}",
            "required": false,
            "type": "string",
            "x-example": "GEO:52.506931,13.144558"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/cardAccountList"
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error400_NG_AIS"
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error401_NG_AIS"
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error403_NG_AIS"
            }
          },
          "404": {
            "description": "Not found",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error404_NG_AIS"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error405_NG_AIS"
            }
          },
          "406": {
            "description": "Not Acceptable",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error406_NG_AIS"
            }
          },
          "408": {
            "description": "Request Timeout",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error429_NG_AIS"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          }
        },
        "security": [
          {},
          {
            "BearerAuthOAuth": []
          }
        ],
        "summary": "Reads a list of card accounts",
        "tags": [
          "Account Information Service (AIS)"
        ]
      }
    },
    "/card-accounts/{account-id}": {
      "get": {
        "description": "Reads details about a card account. \nIt is assumed that a consent of the PSU to this access is already given \nand stored on the ASPSP system. The addressed details of this account depends \nthen on the stored consent addressed by consentId, respectively the OAuth2 \naccess token.\n",
        "operationId": "ReadCardAccount",
        "parameters": [
          {
            "description": "This identification is denoting the addressed account. \nThe account-id is retrieved by using a \"Read Account List\" call. \nThe account-id is the \"id\" attribute of the account structure. \nIts value is constant at least throughout the lifecycle of a given consent.\n",
            "in": "path",
            "name": "account-id",
            "required": true,
            "type": "string"
          },
          {
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "format": "uuid",
            "in": "header",
            "name": "X-Request-ID",
            "required": true,
            "type": "string",
            "x-example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721"
          },
          {
            "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request.",
            "in": "header",
            "name": "Digest",
            "required": false,
            "type": "string",
            "x-example": "SHA-256=hl1/Eps8BEQW58FJhDApwJXjGY4nr1ArGDHIT25vq6A="
          },
          {
            "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.\n",
            "in": "header",
            "name": "Signature",
            "required": false,
            "type": "string",
            "x-example": "keyId=\"SN=9FA1,CA=CN=D-TRUST%20CA%202-1%202015,O=D-Trust%20GmbH,C=DE\",algorithm=\"rsa-sha256\", headers=\"Digest X-Request-ID PSU-ID TPP-Redirect-URI Date\", signature=\"Base64(RSA-SHA256(signing string))\"\n"
          },
          {
            "description": "The certificate used for signing the request, in base64 encoding. \nMust be contained if a signature is contained.\n",
            "format": "byte",
            "in": "header",
            "name": "TPP-Signature-Certificate",
            "required": false,
            "type": "string"
          },
          {
            "description": "This then contains the consentId of the related AIS consent, which was performed prior to this payment initiation.\n",
            "in": "header",
            "name": "Consent-ID",
            "required": true,
            "type": "string"
          },
          {
            "description": "The forwarded IP Address header field consists of the corresponding HTTP request \nIP Address field between PSU and TPP. \nIt shall be contained if and only if this request was actively initiated by the PSU.\n",
            "format": "ipv4",
            "in": "header",
            "name": "PSU-IP-Address",
            "required": false,
            "type": "string",
            "x-example": "192.168.8.78"
          },
          {
            "description": "The forwarded IP Port header field consists of the corresponding HTTP request IP Port field between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-IP-Port",
            "required": false,
            "type": "string",
            "x-example": "1234"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept-Charset",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept-Encoding",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded Agent header field of the HTTP request between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-User-Agent",
            "required": false,
            "type": "string"
          },
          {
            "description": "HTTP method used at the PSU ? TPP interface, if available.\nValid values are:\n* GET\n* POST\n* PUT\n* PATCH\n* DELETE\n",
            "enum": [
              "GET",
              "POST",
              "PUT",
              "PATCH",
              "DELETE"
            ],
            "in": "header",
            "name": "PSU-Http-Method",
            "required": false,
            "type": "string"
          },
          {
            "description": "UUID (Universally Unique Identifier) for a device, which is used by the PSU, if available.\nUUID identifies either a device or a device dependant application installation.\nIn case of an installation identification this ID need to be unaltered until removal from device.\n",
            "format": "uuid",
            "in": "header",
            "name": "PSU-Device-ID",
            "required": false,
            "type": "string",
            "x-example": "99435c7e-ad88-49ec-a2ad-99ddcb1f5555"
          },
          {
            "description": "The forwarded Geo Location of the corresponding http request between PSU and TPP if available.\n",
            "in": "header",
            "name": "PSU-Geo-Location",
            "pattern": "(GEO:)[0-9]{1,3}\\.[-][0-9]{6}\\,[-][0-9]{1,3}\\.[0-9]{6}",
            "required": false,
            "type": "string",
            "x-example": "GEO:52.506931,13.144558"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/cardAccountDetails"
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error400_NG_AIS"
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error401_NG_AIS"
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error403_NG_AIS"
            }
          },
          "404": {
            "description": "Not found",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error404_NG_AIS"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error405_NG_AIS"
            }
          },
          "406": {
            "description": "Not Acceptable",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error406_NG_AIS"
            }
          },
          "408": {
            "description": "Request Timeout",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error429_NG_AIS"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          }
        },
        "security": [
          {},
          {
            "BearerAuthOAuth": []
          }
        ],
        "summary": "Reads details about a card account",
        "tags": [
          "Account Information Service (AIS)"
        ]
      }
    },
    "/card-accounts/{account-id}/balances": {
      "get": {
        "description": "Reads balance data from a given card account addressed by \n\"account-id\". \n\nRemark: This account-id can be a tokenised identification due \nto data protection reason since the path information might be \nlogged on intermediary servers within the ASPSP sphere. \nThis account-id then can be retrieved by the \n\"GET Card Account List\" call\n",
        "operationId": "getCardAccountBalances",
        "parameters": [
          {
            "description": "This identification is denoting the addressed account. \nThe account-id is retrieved by using a \"Read Account List\" call. \nThe account-id is the \"id\" attribute of the account structure. \nIts value is constant at least throughout the lifecycle of a given consent.\n",
            "in": "path",
            "name": "account-id",
            "required": true,
            "type": "string"
          },
          {
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "format": "uuid",
            "in": "header",
            "name": "X-Request-ID",
            "required": true,
            "type": "string",
            "x-example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721"
          },
          {
            "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request.",
            "in": "header",
            "name": "Digest",
            "required": false,
            "type": "string",
            "x-example": "SHA-256=hl1/Eps8BEQW58FJhDApwJXjGY4nr1ArGDHIT25vq6A="
          },
          {
            "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.\n",
            "in": "header",
            "name": "Signature",
            "required": false,
            "type": "string",
            "x-example": "keyId=\"SN=9FA1,CA=CN=D-TRUST%20CA%202-1%202015,O=D-Trust%20GmbH,C=DE\",algorithm=\"rsa-sha256\", headers=\"Digest X-Request-ID PSU-ID TPP-Redirect-URI Date\", signature=\"Base64(RSA-SHA256(signing string))\"\n"
          },
          {
            "description": "The certificate used for signing the request, in base64 encoding. \nMust be contained if a signature is contained.\n",
            "format": "byte",
            "in": "header",
            "name": "TPP-Signature-Certificate",
            "required": false,
            "type": "string"
          },
          {
            "description": "This then contains the consentId of the related AIS consent, which was performed prior to this payment initiation.\n",
            "in": "header",
            "name": "Consent-ID",
            "required": true,
            "type": "string"
          },
          {
            "description": "The forwarded IP Address header field consists of the corresponding HTTP request \nIP Address field between PSU and TPP. \nIt shall be contained if and only if this request was actively initiated by the PSU.\n",
            "format": "ipv4",
            "in": "header",
            "name": "PSU-IP-Address",
            "required": false,
            "type": "string",
            "x-example": "192.168.8.78"
          },
          {
            "description": "The forwarded IP Port header field consists of the corresponding HTTP request IP Port field between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-IP-Port",
            "required": false,
            "type": "string",
            "x-example": "1234"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept-Charset",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept-Encoding",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded Agent header field of the HTTP request between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-User-Agent",
            "required": false,
            "type": "string"
          },
          {
            "description": "HTTP method used at the PSU ? TPP interface, if available.\nValid values are:\n* GET\n* POST\n* PUT\n* PATCH\n* DELETE\n",
            "enum": [
              "GET",
              "POST",
              "PUT",
              "PATCH",
              "DELETE"
            ],
            "in": "header",
            "name": "PSU-Http-Method",
            "required": false,
            "type": "string"
          },
          {
            "description": "UUID (Universally Unique Identifier) for a device, which is used by the PSU, if available.\nUUID identifies either a device or a device dependant application installation.\nIn case of an installation identification this ID need to be unaltered until removal from device.\n",
            "format": "uuid",
            "in": "header",
            "name": "PSU-Device-ID",
            "required": false,
            "type": "string",
            "x-example": "99435c7e-ad88-49ec-a2ad-99ddcb1f5555"
          },
          {
            "description": "The forwarded Geo Location of the corresponding http request between PSU and TPP if available.\n",
            "in": "header",
            "name": "PSU-Geo-Location",
            "pattern": "(GEO:)[0-9]{1,3}\\.[-][0-9]{6}\\,[-][0-9]{1,3}\\.[0-9]{6}",
            "required": false,
            "type": "string",
            "x-example": "GEO:52.506931,13.144558"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/readCardAccountBalanceResponse-200"
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error400_NG_AIS"
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error401_NG_AIS"
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error403_NG_AIS"
            }
          },
          "404": {
            "description": "Not found",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error404_NG_AIS"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error405_NG_AIS"
            }
          },
          "406": {
            "description": "Not Acceptable",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error406_NG_AIS"
            }
          },
          "408": {
            "description": "Request Timeout",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error429_NG_AIS"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          }
        },
        "security": [
          {},
          {
            "BearerAuthOAuth": []
          }
        ],
        "summary": "Read card account balances",
        "tags": [
          "Account Information Service (AIS)"
        ]
      }
    },
    "/card-accounts/{account-id}/transactions": {
      "get": {
        "description": "Reads account data from a given card account addressed by \"account-id\".\n",
        "operationId": "getCardAccountTransactionList",
        "parameters": [
          {
            "description": "This identification is denoting the addressed account. \nThe account-id is retrieved by using a \"Read Account List\" call. \nThe account-id is the \"id\" attribute of the account structure. \nIts value is constant at least throughout the lifecycle of a given consent.\n",
            "in": "path",
            "name": "account-id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Conditional: Starting date (inclusive the date dateFrom) of the transaction list, mandated if no delta access is required.\n\nFor booked transactions, the relevant date is the booking date. \n\nFor pending transactions, the relevant date is the entry date, which may not be transparent \nneither in this API nor other channels of the ASPSP.\n",
            "format": "date",
            "in": "query",
            "name": "dateFrom",
            "required": false,
            "type": "string"
          },
          {
            "description": "End date (inclusive the data dateTo) of the transaction list, default is \"now\" if not given. \n\nMight be ignored if a delta function is used.\n\nFor booked transactions, the relevant date is the booking date. \n\nFor pending transactions, the relevant date is the entry date, which may not be transparent \nneither in this API nor other channels of the ASPSP.\n",
            "format": "date",
            "in": "query",
            "name": "dateTo",
            "required": false,
            "type": "string"
          },
          {
            "description": "This data attribute is indicating that the AISP is in favour to get all transactions after \nthe transaction with identification entryReferenceFrom alternatively to the above defined period. \nThis is a implementation of a delta access. \nIf this data element is contained, the entries \"dateFrom\" and \"dateTo\" might be ignored by the ASPSP \nif a delta report is supported.\n\nOptional if supported by API provider.\n",
            "in": "query",
            "name": "entryReferenceFrom",
            "required": false,
            "type": "string"
          },
          {
            "description": "Permitted codes are \n  * \"booked\",\n  * \"pending\" and \n  * \"both\"\n\"booked\" shall be supported by the ASPSP.\nTo support the \"pending\" and \"both\" feature is optional for the ASPSP, \nError code if not supported in the online banking frontend\n",
            "enum": [
              "booked",
              "pending",
              "both"
            ],
            "in": "query",
            "name": "bookingStatus",
            "required": true,
            "type": "string"
          },
          {
            "description": "This data attribute is indicating that the AISP is in favour to get all transactions after the last report access for this PSU on the addressed account. This is another implementation of a delta access-report.\nThis delta indicator might be rejected by the ASPSP if this function is not supported.\nOptional if supported by API provider",
            "in": "query",
            "name": "deltaList",
            "type": "boolean"
          },
          {
            "description": "If contained, this function reads the list of accessible payment accounts including the booking balance, \nif granted by the PSU in the related consent and available by the ASPSP. \nThis parameter might be ignored by the ASPSP. \n",
            "in": "query",
            "name": "withBalance",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "format": "uuid",
            "in": "header",
            "name": "X-Request-ID",
            "required": true,
            "type": "string",
            "x-example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721"
          },
          {
            "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request.",
            "in": "header",
            "name": "Digest",
            "required": false,
            "type": "string",
            "x-example": "SHA-256=hl1/Eps8BEQW58FJhDApwJXjGY4nr1ArGDHIT25vq6A="
          },
          {
            "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.\n",
            "in": "header",
            "name": "Signature",
            "required": false,
            "type": "string",
            "x-example": "keyId=\"SN=9FA1,CA=CN=D-TRUST%20CA%202-1%202015,O=D-Trust%20GmbH,C=DE\",algorithm=\"rsa-sha256\", headers=\"Digest X-Request-ID PSU-ID TPP-Redirect-URI Date\", signature=\"Base64(RSA-SHA256(signing string))\"\n"
          },
          {
            "description": "The certificate used for signing the request, in base64 encoding. \nMust be contained if a signature is contained.\n",
            "format": "byte",
            "in": "header",
            "name": "TPP-Signature-Certificate",
            "required": false,
            "type": "string"
          },
          {
            "description": "This then contains the consentId of the related AIS consent, which was performed prior to this payment initiation.\n",
            "in": "header",
            "name": "Consent-ID",
            "required": true,
            "type": "string"
          },
          {
            "description": "The forwarded IP Address header field consists of the corresponding HTTP request \nIP Address field between PSU and TPP. \nIt shall be contained if and only if this request was actively initiated by the PSU.\n",
            "format": "ipv4",
            "in": "header",
            "name": "PSU-IP-Address",
            "required": false,
            "type": "string",
            "x-example": "192.168.8.78"
          },
          {
            "description": "The forwarded IP Port header field consists of the corresponding HTTP request IP Port field between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-IP-Port",
            "required": false,
            "type": "string",
            "x-example": "1234"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept-Charset",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept-Encoding",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded Agent header field of the HTTP request between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-User-Agent",
            "required": false,
            "type": "string"
          },
          {
            "description": "HTTP method used at the PSU ? TPP interface, if available.\nValid values are:\n* GET\n* POST\n* PUT\n* PATCH\n* DELETE\n",
            "enum": [
              "GET",
              "POST",
              "PUT",
              "PATCH",
              "DELETE"
            ],
            "in": "header",
            "name": "PSU-Http-Method",
            "required": false,
            "type": "string"
          },
          {
            "description": "UUID (Universally Unique Identifier) for a device, which is used by the PSU, if available.\nUUID identifies either a device or a device dependant application installation.\nIn case of an installation identification this ID need to be unaltered until removal from device.\n",
            "format": "uuid",
            "in": "header",
            "name": "PSU-Device-ID",
            "required": false,
            "type": "string",
            "x-example": "99435c7e-ad88-49ec-a2ad-99ddcb1f5555"
          },
          {
            "description": "The forwarded Geo Location of the corresponding http request between PSU and TPP if available.\n",
            "in": "header",
            "name": "PSU-Geo-Location",
            "pattern": "(GEO:)[0-9]{1,3}\\.[-][0-9]{6}\\,[-][0-9]{1,3}\\.[0-9]{6}",
            "required": false,
            "type": "string",
            "x-example": "GEO:52.506931,13.144558"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/cardAccountsTransactionsResponse200"
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error400_NG_AIS"
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error401_NG_AIS"
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error403_NG_AIS"
            }
          },
          "404": {
            "description": "Not found",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error404_NG_AIS"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error405_NG_AIS"
            }
          },
          "406": {
            "description": "Not Acceptable",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error406_NG_AIS"
            }
          },
          "408": {
            "description": "Request Timeout",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error429_NG_AIS"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          }
        },
        "security": [
          {},
          {
            "BearerAuthOAuth": []
          }
        ],
        "summary": "Read transaction list of an account",
        "tags": [
          "Account Information Service (AIS)"
        ]
      }
    },
    "/v1/accounts": {
      "get": {
        "description": "Read the identifiers of the available payment account together with \nbooking balance information, depending on the consent granted.\n\nIt is assumed that a consent of the PSU to this access is already given and stored on the ASPSP system. \nThe addressed list of accounts depends then on the PSU ID and the stored consent addressed by consentId, \nrespectively the OAuth2 access token. \n\nReturns all identifiers of the accounts, to which an account access has been granted to through \nthe /consents endpoint by the PSU. \nIn addition, relevant information about the accounts and hyperlinks to corresponding account \ninformation resources are provided if a related consent has been already granted.\n\nRemark: Note that the /consents endpoint optionally offers to grant an access on all available \npayment accounts of a PSU. \nIn this case, this endpoint will deliver the information about all available payment accounts \nof the PSU at this ASPSP.\n",
        "operationId": "getAccountList",
        "parameters": [
          {
            "description": "If contained, this function reads the list of accessible payment accounts including the booking balance, \nif granted by the PSU in the related consent and available by the ASPSP. \nThis parameter might be ignored by the ASPSP. \n",
            "in": "query",
            "name": "withBalance",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "format": "uuid",
            "in": "header",
            "name": "X-Request-ID",
            "required": true,
            "type": "string",
            "x-example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721"
          },
          {
            "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request.",
            "in": "header",
            "name": "Digest",
            "required": false,
            "type": "string",
            "x-example": "SHA-256=hl1/Eps8BEQW58FJhDApwJXjGY4nr1ArGDHIT25vq6A="
          },
          {
            "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.\n",
            "in": "header",
            "name": "Signature",
            "required": false,
            "type": "string",
            "x-example": "keyId=\"SN=9FA1,CA=CN=D-TRUST%20CA%202-1%202015,O=D-Trust%20GmbH,C=DE\",algorithm=\"rsa-sha256\", headers=\"Digest X-Request-ID PSU-ID TPP-Redirect-URI Date\", signature=\"Base64(RSA-SHA256(signing string))\"\n"
          },
          {
            "description": "The certificate used for signing the request, in base64 encoding. \nMust be contained if a signature is contained.\n",
            "format": "byte",
            "in": "header",
            "name": "TPP-Signature-Certificate",
            "required": false,
            "type": "string"
          },
          {
            "description": "This then contains the consentId of the related AIS consent, which was performed prior to this payment initiation.\n",
            "in": "header",
            "name": "Consent-ID",
            "required": true,
            "type": "string"
          },
          {
            "description": "The forwarded IP Address header field consists of the corresponding HTTP request \nIP Address field between PSU and TPP. \nIt shall be contained if and only if this request was actively initiated by the PSU.\n",
            "format": "ipv4",
            "in": "header",
            "name": "PSU-IP-Address",
            "required": false,
            "type": "string",
            "x-example": "192.168.8.78"
          },
          {
            "description": "The forwarded IP Port header field consists of the corresponding HTTP request IP Port field between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-IP-Port",
            "required": false,
            "type": "string",
            "x-example": "1234"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept-Charset",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept-Encoding",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded Agent header field of the HTTP request between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-User-Agent",
            "required": false,
            "type": "string"
          },
          {
            "description": "HTTP method used at the PSU ? TPP interface, if available.\nValid values are:\n* GET\n* POST\n* PUT\n* PATCH\n* DELETE\n",
            "enum": [
              "GET",
              "POST",
              "PUT",
              "PATCH",
              "DELETE"
            ],
            "in": "header",
            "name": "PSU-Http-Method",
            "required": false,
            "type": "string"
          },
          {
            "description": "UUID (Universally Unique Identifier) for a device, which is used by the PSU, if available.\nUUID identifies either a device or a device dependant application installation.\nIn case of an installation identification this ID need to be unaltered until removal from device.\n",
            "format": "uuid",
            "in": "header",
            "name": "PSU-Device-ID",
            "required": false,
            "type": "string",
            "x-example": "99435c7e-ad88-49ec-a2ad-99ddcb1f5555"
          },
          {
            "description": "The forwarded Geo Location of the corresponding http request between PSU and TPP if available.\n",
            "in": "header",
            "name": "PSU-Geo-Location",
            "pattern": "(GEO:)[0-9]{1,3}\\.[-][0-9]{6}\\,[-][0-9]{1,3}\\.[0-9]{6}",
            "required": false,
            "type": "string",
            "x-example": "GEO:52.506931,13.144558"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/accountList"
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error400_NG_AIS"
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error401_NG_AIS"
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error403_NG_AIS"
            }
          },
          "404": {
            "description": "Not found",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error404_NG_AIS"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error405_NG_AIS"
            }
          },
          "406": {
            "description": "Not Acceptable",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error406_NG_AIS"
            }
          },
          "408": {
            "description": "Request Timeout",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error429_NG_AIS"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          }
        },
        "security": [
          {},
          {
            "BearerAuthOAuth": []
          }
        ],
        "summary": "Read Account List",
        "tags": [
          "Account Information Service (AIS)"
        ]
      }
    },
    "/v1/accounts/{account-id}": {
      "get": {
        "description": "Reads details about an account, with balances where required. \nIt is assumed that a consent of the PSU to \nthis access is already given and stored on the ASPSP system. \nThe addressed details of this account depends then on the stored consent addressed by consentId, \nrespectively the OAuth2 access token.\n\n**NOTE:** The account-id can represent a multicurrency account. \nIn this case the currency code is set to \"XXX\".\n\nGive detailed information about the addressed account.\n\nGive detailed information about the addressed account together with balance information\n",
        "operationId": "readAccountDetails",
        "parameters": [
          {
            "description": "This identification is denoting the addressed account. \nThe account-id is retrieved by using a \"Read Account List\" call. \nThe account-id is the \"id\" attribute of the account structure. \nIts value is constant at least throughout the lifecycle of a given consent.\n",
            "in": "path",
            "name": "account-id",
            "required": true,
            "type": "string"
          },
          {
            "description": "If contained, this function reads the list of accessible payment accounts including the booking balance, \nif granted by the PSU in the related consent and available by the ASPSP. \nThis parameter might be ignored by the ASPSP. \n",
            "in": "query",
            "name": "withBalance",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "format": "uuid",
            "in": "header",
            "name": "X-Request-ID",
            "required": true,
            "type": "string",
            "x-example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721"
          },
          {
            "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request.",
            "in": "header",
            "name": "Digest",
            "required": false,
            "type": "string",
            "x-example": "SHA-256=hl1/Eps8BEQW58FJhDApwJXjGY4nr1ArGDHIT25vq6A="
          },
          {
            "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.\n",
            "in": "header",
            "name": "Signature",
            "required": false,
            "type": "string",
            "x-example": "keyId=\"SN=9FA1,CA=CN=D-TRUST%20CA%202-1%202015,O=D-Trust%20GmbH,C=DE\",algorithm=\"rsa-sha256\", headers=\"Digest X-Request-ID PSU-ID TPP-Redirect-URI Date\", signature=\"Base64(RSA-SHA256(signing string))\"\n"
          },
          {
            "description": "The certificate used for signing the request, in base64 encoding. \nMust be contained if a signature is contained.\n",
            "format": "byte",
            "in": "header",
            "name": "TPP-Signature-Certificate",
            "required": false,
            "type": "string"
          },
          {
            "description": "This then contains the consentId of the related AIS consent, which was performed prior to this payment initiation.\n",
            "in": "header",
            "name": "Consent-ID",
            "required": true,
            "type": "string"
          },
          {
            "description": "The forwarded IP Address header field consists of the corresponding HTTP request \nIP Address field between PSU and TPP. \nIt shall be contained if and only if this request was actively initiated by the PSU.\n",
            "format": "ipv4",
            "in": "header",
            "name": "PSU-IP-Address",
            "required": false,
            "type": "string",
            "x-example": "192.168.8.78"
          },
          {
            "description": "The forwarded IP Port header field consists of the corresponding HTTP request IP Port field between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-IP-Port",
            "required": false,
            "type": "string",
            "x-example": "1234"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept-Charset",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept-Encoding",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded Agent header field of the HTTP request between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-User-Agent",
            "required": false,
            "type": "string"
          },
          {
            "description": "HTTP method used at the PSU ? TPP interface, if available.\nValid values are:\n* GET\n* POST\n* PUT\n* PATCH\n* DELETE\n",
            "enum": [
              "GET",
              "POST",
              "PUT",
              "PATCH",
              "DELETE"
            ],
            "in": "header",
            "name": "PSU-Http-Method",
            "required": false,
            "type": "string"
          },
          {
            "description": "UUID (Universally Unique Identifier) for a device, which is used by the PSU, if available.\nUUID identifies either a device or a device dependant application installation.\nIn case of an installation identification this ID need to be unaltered until removal from device.\n",
            "format": "uuid",
            "in": "header",
            "name": "PSU-Device-ID",
            "required": false,
            "type": "string",
            "x-example": "99435c7e-ad88-49ec-a2ad-99ddcb1f5555"
          },
          {
            "description": "The forwarded Geo Location of the corresponding http request between PSU and TPP if available.\n",
            "in": "header",
            "name": "PSU-Geo-Location",
            "pattern": "(GEO:)[0-9]{1,3}\\.[-][0-9]{6}\\,[-][0-9]{1,3}\\.[0-9]{6}",
            "required": false,
            "type": "string",
            "x-example": "GEO:52.506931,13.144558"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/accountDetails"
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error400_NG_AIS"
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error401_NG_AIS"
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error403_NG_AIS"
            }
          },
          "404": {
            "description": "Not found",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error404_NG_AIS"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error405_NG_AIS"
            }
          },
          "406": {
            "description": "Not Acceptable",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error406_NG_AIS"
            }
          },
          "408": {
            "description": "Request Timeout",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error429_NG_AIS"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          }
        },
        "security": [
          {},
          {
            "BearerAuthOAuth": []
          }
        ],
        "summary": "Read Account Details",
        "tags": [
          "Account Information Service (AIS)"
        ]
      }
    },
    "/v1/accounts/{account-id}/balances": {
      "get": {
        "description": "Reads account data from a given account addressed by \"account-id\". \n\n**Remark:** This account-id can be a tokenised identification due to data protection reason since the path \ninformation might be logged on intermediary servers within the ASPSP sphere. \nThis account-id then can be retrieved by the \"GET Account List\" call.\n\nThe account-id is constant at least throughout the lifecycle of a given consent.\n",
        "operationId": "getBalances",
        "parameters": [
          {
            "description": "This identification is denoting the addressed account. \nThe account-id is retrieved by using a \"Read Account List\" call. \nThe account-id is the \"id\" attribute of the account structure. \nIts value is constant at least throughout the lifecycle of a given consent.\n",
            "in": "path",
            "name": "account-id",
            "required": true,
            "type": "string"
          },
          {
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "format": "uuid",
            "in": "header",
            "name": "X-Request-ID",
            "required": true,
            "type": "string",
            "x-example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721"
          },
          {
            "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request.",
            "in": "header",
            "name": "Digest",
            "required": false,
            "type": "string",
            "x-example": "SHA-256=hl1/Eps8BEQW58FJhDApwJXjGY4nr1ArGDHIT25vq6A="
          },
          {
            "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.\n",
            "in": "header",
            "name": "Signature",
            "required": false,
            "type": "string",
            "x-example": "keyId=\"SN=9FA1,CA=CN=D-TRUST%20CA%202-1%202015,O=D-Trust%20GmbH,C=DE\",algorithm=\"rsa-sha256\", headers=\"Digest X-Request-ID PSU-ID TPP-Redirect-URI Date\", signature=\"Base64(RSA-SHA256(signing string))\"\n"
          },
          {
            "description": "The certificate used for signing the request, in base64 encoding. \nMust be contained if a signature is contained.\n",
            "format": "byte",
            "in": "header",
            "name": "TPP-Signature-Certificate",
            "required": false,
            "type": "string"
          },
          {
            "description": "This then contains the consentId of the related AIS consent, which was performed prior to this payment initiation.\n",
            "in": "header",
            "name": "Consent-ID",
            "required": true,
            "type": "string"
          },
          {
            "description": "The forwarded IP Address header field consists of the corresponding HTTP request \nIP Address field between PSU and TPP. \nIt shall be contained if and only if this request was actively initiated by the PSU.\n",
            "format": "ipv4",
            "in": "header",
            "name": "PSU-IP-Address",
            "required": false,
            "type": "string",
            "x-example": "192.168.8.78"
          },
          {
            "description": "The forwarded IP Port header field consists of the corresponding HTTP request IP Port field between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-IP-Port",
            "required": false,
            "type": "string",
            "x-example": "1234"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept-Charset",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept-Encoding",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded Agent header field of the HTTP request between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-User-Agent",
            "required": false,
            "type": "string"
          },
          {
            "description": "HTTP method used at the PSU ? TPP interface, if available.\nValid values are:\n* GET\n* POST\n* PUT\n* PATCH\n* DELETE\n",
            "enum": [
              "GET",
              "POST",
              "PUT",
              "PATCH",
              "DELETE"
            ],
            "in": "header",
            "name": "PSU-Http-Method",
            "required": false,
            "type": "string"
          },
          {
            "description": "UUID (Universally Unique Identifier) for a device, which is used by the PSU, if available.\nUUID identifies either a device or a device dependant application installation.\nIn case of an installation identification this ID need to be unaltered until removal from device.\n",
            "format": "uuid",
            "in": "header",
            "name": "PSU-Device-ID",
            "required": false,
            "type": "string",
            "x-example": "99435c7e-ad88-49ec-a2ad-99ddcb1f5555"
          },
          {
            "description": "The forwarded Geo Location of the corresponding http request between PSU and TPP if available.\n",
            "in": "header",
            "name": "PSU-Geo-Location",
            "pattern": "(GEO:)[0-9]{1,3}\\.[-][0-9]{6}\\,[-][0-9]{1,3}\\.[0-9]{6}",
            "required": false,
            "type": "string",
            "x-example": "GEO:52.506931,13.144558"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/readAccountBalanceResponse-200"
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error400_NG_AIS"
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error401_NG_AIS"
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error403_NG_AIS"
            }
          },
          "404": {
            "description": "Not found",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error404_NG_AIS"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error405_NG_AIS"
            }
          },
          "406": {
            "description": "Not Acceptable",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error406_NG_AIS"
            }
          },
          "408": {
            "description": "Request Timeout",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error429_NG_AIS"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          }
        },
        "security": [
          {},
          {
            "BearerAuthOAuth": []
          }
        ],
        "summary": "Read Balance",
        "tags": [
          "Account Information Service (AIS)"
        ]
      }
    },
    "/v1/accounts/{account-id}/transactions/": {
      "get": {
        "description": "Read transaction reports or transaction lists of a given account ddressed by \"account-id\", depending on the steering parameter \n\"bookingStatus\" together with balances.\n\nFor a given account, additional parameters are e.g. the attributes \"dateFrom\" and \"dateTo\". \nThe ASPSP might add balance information, if transaction lists without balances are not supported.\n",
        "operationId": "getTransactionList",
        "parameters": [
          {
            "description": "This identification is denoting the addressed account. \nThe account-id is retrieved by using a \"Read Account List\" call. \nThe account-id is the \"id\" attribute of the account structure. \nIts value is constant at least throughout the lifecycle of a given consent.\n",
            "in": "path",
            "name": "account-id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Conditional: Starting date (inclusive the date dateFrom) of the transaction list, mandated if no delta access is required.\n\nFor booked transactions, the relevant date is the booking date. \n\nFor pending transactions, the relevant date is the entry date, which may not be transparent \nneither in this API nor other channels of the ASPSP.\n",
            "format": "date",
            "in": "query",
            "name": "dateFrom",
            "required": false,
            "type": "string"
          },
          {
            "description": "End date (inclusive the data dateTo) of the transaction list, default is \"now\" if not given. \n\nMight be ignored if a delta function is used.\n\nFor booked transactions, the relevant date is the booking date. \n\nFor pending transactions, the relevant date is the entry date, which may not be transparent \nneither in this API nor other channels of the ASPSP.\n",
            "format": "date",
            "in": "query",
            "name": "dateTo",
            "required": false,
            "type": "string"
          },
          {
            "description": "This data attribute is indicating that the AISP is in favour to get all transactions after \nthe transaction with identification entryReferenceFrom alternatively to the above defined period. \nThis is a implementation of a delta access. \nIf this data element is contained, the entries \"dateFrom\" and \"dateTo\" might be ignored by the ASPSP \nif a delta report is supported.\n\nOptional if supported by API provider.\n",
            "in": "query",
            "name": "entryReferenceFrom",
            "required": false,
            "type": "string"
          },
          {
            "description": "Permitted codes are \n  * \"booked\",\n  * \"pending\" and \n  * \"both\"\n\"booked\" shall be supported by the ASPSP.\nTo support the \"pending\" and \"both\" feature is optional for the ASPSP, \nError code if not supported in the online banking frontend\n",
            "enum": [
              "booked",
              "pending",
              "both"
            ],
            "in": "query",
            "name": "bookingStatus",
            "required": true,
            "type": "string"
          },
          {
            "description": "This data attribute is indicating that the AISP is in favour to get all transactions after the last report access for this PSU on the addressed account. This is another implementation of a delta access-report.\nThis delta indicator might be rejected by the ASPSP if this function is not supported.\nOptional if supported by API provider",
            "in": "query",
            "name": "deltaList",
            "type": "boolean"
          },
          {
            "description": "If contained, this function reads the list of accessible payment accounts including the booking balance, \nif granted by the PSU in the related consent and available by the ASPSP. \nThis parameter might be ignored by the ASPSP. \n",
            "in": "query",
            "name": "withBalance",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "format": "uuid",
            "in": "header",
            "name": "X-Request-ID",
            "required": true,
            "type": "string",
            "x-example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721"
          },
          {
            "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request.",
            "in": "header",
            "name": "Digest",
            "required": false,
            "type": "string",
            "x-example": "SHA-256=hl1/Eps8BEQW58FJhDApwJXjGY4nr1ArGDHIT25vq6A="
          },
          {
            "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.\n",
            "in": "header",
            "name": "Signature",
            "required": false,
            "type": "string",
            "x-example": "keyId=\"SN=9FA1,CA=CN=D-TRUST%20CA%202-1%202015,O=D-Trust%20GmbH,C=DE\",algorithm=\"rsa-sha256\", headers=\"Digest X-Request-ID PSU-ID TPP-Redirect-URI Date\", signature=\"Base64(RSA-SHA256(signing string))\"\n"
          },
          {
            "description": "The certificate used for signing the request, in base64 encoding. \nMust be contained if a signature is contained.\n",
            "format": "byte",
            "in": "header",
            "name": "TPP-Signature-Certificate",
            "required": false,
            "type": "string"
          },
          {
            "description": "This then contains the consentId of the related AIS consent, which was performed prior to this payment initiation.\n",
            "in": "header",
            "name": "Consent-ID",
            "required": true,
            "type": "string"
          },
          {
            "description": "The forwarded IP Address header field consists of the corresponding HTTP request \nIP Address field between PSU and TPP. \nIt shall be contained if and only if this request was actively initiated by the PSU.\n",
            "format": "ipv4",
            "in": "header",
            "name": "PSU-IP-Address",
            "required": false,
            "type": "string",
            "x-example": "192.168.8.78"
          },
          {
            "description": "The forwarded IP Port header field consists of the corresponding HTTP request IP Port field between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-IP-Port",
            "required": false,
            "type": "string",
            "x-example": "1234"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept-Charset",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept-Encoding",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded Agent header field of the HTTP request between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-User-Agent",
            "required": false,
            "type": "string"
          },
          {
            "description": "HTTP method used at the PSU ? TPP interface, if available.\nValid values are:\n* GET\n* POST\n* PUT\n* PATCH\n* DELETE\n",
            "enum": [
              "GET",
              "POST",
              "PUT",
              "PATCH",
              "DELETE"
            ],
            "in": "header",
            "name": "PSU-Http-Method",
            "required": false,
            "type": "string"
          },
          {
            "description": "UUID (Universally Unique Identifier) for a device, which is used by the PSU, if available.\nUUID identifies either a device or a device dependant application installation.\nIn case of an installation identification this ID need to be unaltered until removal from device.\n",
            "format": "uuid",
            "in": "header",
            "name": "PSU-Device-ID",
            "required": false,
            "type": "string",
            "x-example": "99435c7e-ad88-49ec-a2ad-99ddcb1f5555"
          },
          {
            "description": "The forwarded Geo Location of the corresponding http request between PSU and TPP if available.\n",
            "in": "header",
            "name": "PSU-Geo-Location",
            "pattern": "(GEO:)[0-9]{1,3}\\.[-][0-9]{6}\\,[-][0-9]{1,3}\\.[0-9]{6}",
            "required": false,
            "type": "string",
            "x-example": "GEO:52.506931,13.144558"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/transactionsResponse-200_json"
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error400_NG_AIS"
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error401_NG_AIS"
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error403_NG_AIS"
            }
          },
          "404": {
            "description": "Not found",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error404_NG_AIS"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error405_NG_AIS"
            }
          },
          "406": {
            "description": "Not Acceptable",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error406_NG_AIS"
            }
          },
          "408": {
            "description": "Request Timeout",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error429_NG_AIS"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          }
        },
        "security": [
          {},
          {
            "BearerAuthOAuth": []
          }
        ],
        "summary": "Read transaction list of an account",
        "tags": [
          "Account Information Service (AIS)"
        ]
      }
    },
    "/v1/accounts/{account-id}/transactions/{resourceId}": {
      "get": {
        "description": "Reads transaction details from a given transaction addressed by \"resourceId\" on a given account addressed by \"account-id\". \nThis call is only available on transactions as reported in a JSON format.\n\n**Remark:** Please note that the PATH might be already given in detail by the corresponding entry of the response of the \n\"Read Transaction List\" call within the _links subfield.\n",
        "operationId": "getTransactionDetails",
        "parameters": [
          {
            "description": "This identification is denoting the addressed account. \nThe account-id is retrieved by using a \"Read Account List\" call. \nThe account-id is the \"id\" attribute of the account structure. \nIts value is constant at least throughout the lifecycle of a given consent.\n",
            "in": "path",
            "name": "account-id",
            "required": true,
            "type": "string"
          },
          {
            "description": "This identification is given by the attribute resourceId of the corresponding entry of a transaction list.\n",
            "in": "path",
            "name": "resourceId",
            "required": true,
            "type": "string"
          },
          {
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "format": "uuid",
            "in": "header",
            "name": "X-Request-ID",
            "required": true,
            "type": "string",
            "x-example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721"
          },
          {
            "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request.",
            "in": "header",
            "name": "Digest",
            "required": false,
            "type": "string",
            "x-example": "SHA-256=hl1/Eps8BEQW58FJhDApwJXjGY4nr1ArGDHIT25vq6A="
          },
          {
            "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.\n",
            "in": "header",
            "name": "Signature",
            "required": false,
            "type": "string",
            "x-example": "keyId=\"SN=9FA1,CA=CN=D-TRUST%20CA%202-1%202015,O=D-Trust%20GmbH,C=DE\",algorithm=\"rsa-sha256\", headers=\"Digest X-Request-ID PSU-ID TPP-Redirect-URI Date\", signature=\"Base64(RSA-SHA256(signing string))\"\n"
          },
          {
            "description": "The certificate used for signing the request, in base64 encoding. \nMust be contained if a signature is contained.\n",
            "format": "byte",
            "in": "header",
            "name": "TPP-Signature-Certificate",
            "required": false,
            "type": "string"
          },
          {
            "description": "This then contains the consentId of the related AIS consent, which was performed prior to this payment initiation.\n",
            "in": "header",
            "name": "Consent-ID",
            "required": true,
            "type": "string"
          },
          {
            "description": "The forwarded IP Address header field consists of the corresponding HTTP request \nIP Address field between PSU and TPP. \nIt shall be contained if and only if this request was actively initiated by the PSU.\n",
            "format": "ipv4",
            "in": "header",
            "name": "PSU-IP-Address",
            "required": false,
            "type": "string",
            "x-example": "192.168.8.78"
          },
          {
            "description": "The forwarded IP Port header field consists of the corresponding HTTP request IP Port field between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-IP-Port",
            "required": false,
            "type": "string",
            "x-example": "1234"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept-Charset",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept-Encoding",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded Agent header field of the HTTP request between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-User-Agent",
            "required": false,
            "type": "string"
          },
          {
            "description": "HTTP method used at the PSU ? TPP interface, if available.\nValid values are:\n* GET\n* POST\n* PUT\n* PATCH\n* DELETE\n",
            "enum": [
              "GET",
              "POST",
              "PUT",
              "PATCH",
              "DELETE"
            ],
            "in": "header",
            "name": "PSU-Http-Method",
            "required": false,
            "type": "string"
          },
          {
            "description": "UUID (Universally Unique Identifier) for a device, which is used by the PSU, if available.\nUUID identifies either a device or a device dependant application installation.\nIn case of an installation identification this ID need to be unaltered until removal from device.\n",
            "format": "uuid",
            "in": "header",
            "name": "PSU-Device-ID",
            "required": false,
            "type": "string",
            "x-example": "99435c7e-ad88-49ec-a2ad-99ddcb1f5555"
          },
          {
            "description": "The forwarded Geo Location of the corresponding http request between PSU and TPP if available.\n",
            "in": "header",
            "name": "PSU-Geo-Location",
            "pattern": "(GEO:)[0-9]{1,3}\\.[-][0-9]{6}\\,[-][0-9]{1,3}\\.[0-9]{6}",
            "required": false,
            "type": "string",
            "x-example": "GEO:52.506931,13.144558"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/transactionDetails"
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error400_NG_AIS"
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error401_NG_AIS"
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error403_NG_AIS"
            }
          },
          "404": {
            "description": "Not found",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error404_NG_AIS"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error405_NG_AIS"
            }
          },
          "406": {
            "description": "Not Acceptable",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error406_NG_AIS"
            }
          },
          "408": {
            "description": "Request Timeout",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error429_NG_AIS"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          }
        },
        "security": [
          {},
          {
            "BearerAuthOAuth": []
          }
        ],
        "summary": "Read Transaction Details",
        "tags": [
          "Account Information Service (AIS)"
        ]
      }
    },
    "/v1/consents": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "This method create a consent resource, defining access rights to dedicated accounts of \na given PSU-ID. These accounts are addressed explicitly in the method as \nparameters as a core function.\n\n**Side Effects**\nWhen this Consent Request is a request where the \"recurringIndicator\" equals \"true\", \nand if it exists already a former consent for recurring access on account information \nfor the addressed PSU, then the former consent automatically expires as soon as the new \nconsent request is authorised by the PSU.\n\nOptional Extension:\nAs an option, an ASPSP might optionally accept a specific access right on the access on all psd2 related services for all available accounts. \n\nAs another option an ASPSP might optionally also accept a command, where only access rights are inserted without mentioning the addressed account. \nThe relation to accounts is then handled afterwards between PSU and ASPSP. \nThis option is not supported for the Embedded SCA Approach. \nAs a last option, an ASPSP might in addition accept a command with access rights\n  * to see the list of available payment accounts or\n  * to see the list of available payment accounts with balances.\n",
        "operationId": "createConsent",
        "parameters": [
          {
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "format": "uuid",
            "in": "header",
            "name": "X-Request-ID",
            "required": true,
            "type": "string",
            "x-example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721"
          },
          {
            "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request.",
            "in": "header",
            "name": "Digest",
            "required": false,
            "type": "string",
            "x-example": "SHA-256=hl1/Eps8BEQW58FJhDApwJXjGY4nr1ArGDHIT25vq6A="
          },
          {
            "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.\n",
            "in": "header",
            "name": "Signature",
            "required": false,
            "type": "string",
            "x-example": "keyId=\"SN=9FA1,CA=CN=D-TRUST%20CA%202-1%202015,O=D-Trust%20GmbH,C=DE\",algorithm=\"rsa-sha256\", headers=\"Digest X-Request-ID PSU-ID TPP-Redirect-URI Date\", signature=\"Base64(RSA-SHA256(signing string))\"\n"
          },
          {
            "description": "The certificate used for signing the request, in base64 encoding. \nMust be contained if a signature is contained.\n",
            "format": "byte",
            "in": "header",
            "name": "TPP-Signature-Certificate",
            "required": false,
            "type": "string"
          },
          {
            "description": "Client ID of the PSU in the ASPSP client interface. Might be mandated in the ASPSP's documentation.\nIs not contained if an OAuth2 based authentication was performed in a pre-step or an OAuth2 based SCA was performed in an preceeding\nAIS service in the same session.\n",
            "in": "header",
            "name": "PSU-ID",
            "required": false,
            "type": "string",
            "x-example": "PSU-1234"
          },
          {
            "description": "Type of the PSU-ID, needed in scenarios where PSUs have several PSU-IDs as access possibility.\n",
            "in": "header",
            "name": "PSU-ID-Type",
            "required": false,
            "type": "string"
          },
          {
            "description": "Might be mandated in the ASPSP's documentation. Only used in a corporate context.\n",
            "in": "header",
            "name": "PSU-Corporate-ID",
            "required": false,
            "type": "string"
          },
          {
            "description": "Might be mandated in the ASPSP's documentation. Only used in a corporate context.\n",
            "in": "header",
            "name": "PSU-Corporate-ID-Type",
            "required": false,
            "type": "string"
          },
          {
            "description": "If it equals \"true\", the TPP prefers a redirect over an embedded SCA approach.\nIf it equals \"false\", the TPP prefers not to be redirected for SCA. The ASPSP will then choose between the Embedded or the Decoupled\nSCA approach, depending on the choice of the SCA procedure by the TPP/PSU.\nIf the parameter is not used, the ASPSP will choose the SCA approach to be applied depending on the SCA method chosen by the\nTPP/PSU.\n",
            "enum": [
              "true",
              "false"
            ],
            "in": "header",
            "name": "TPP-Redirect-Preferred",
            "required": false,
            "type": "string"
          },
          {
            "description": "URI of the TPP, where the transaction flow shall be redirected to after a Redirect.\n\nMandated for the Redirect SCA Approach (including OAuth2 SCA approach), specifically \nwhen TPP-Redirect-Preferred equals \"true\".\nIt is recommended to always use this header field.\n\n**Remark for Future:** \nThis field might be changed to mandatory in the next version of the specification.\n",
            "format": "uri",
            "in": "header",
            "name": "TPP-Redirect-URI",
            "required": false,
            "type": "string"
          },
          {
            "description": "If this URI is contained, the TPP is asking to redirect the transaction flow to this address instead of the TPP-Redirect-URI in case\nof a negative result of the redirect SCA method. This might be ignored by the ASPSP.\n",
            "format": "uri",
            "in": "header",
            "name": "TPP-Nok-Redirect-URI",
            "required": false,
            "type": "string"
          },
          {
            "description": "If it equals \"true\", the TPP prefers to start the authorisation process separately, \ne.g. because of the usage of a signing basket. \nThis preference might be ignored by the ASPSP, if a signing basket is not supported as functionality.\n\nIf it equals \"false\" or if the parameter is not used, there is no preference of the TPP. \nThis especially indicates that the TPP assumes a direct authorisation of the transaction in the next step, \nwithout using a signing basket.\n",
            "enum": [
              "true",
              "false"
            ],
            "in": "header",
            "name": "TPP-Explicit-Authorisation-Preferred",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Address header field consists of the corresponding HTTP request \nIP Address field between PSU and TPP. \nIt shall be contained if and only if this request was actively initiated by the PSU.\n",
            "format": "ipv4",
            "in": "header",
            "name": "PSU-IP-Address",
            "required": false,
            "type": "string",
            "x-example": "192.168.8.78"
          },
          {
            "description": "The forwarded IP Port header field consists of the corresponding HTTP request IP Port field between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-IP-Port",
            "required": false,
            "type": "string",
            "x-example": "1234"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept-Charset",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept-Encoding",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded Agent header field of the HTTP request between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-User-Agent",
            "required": false,
            "type": "string"
          },
          {
            "description": "HTTP method used at the PSU ? TPP interface, if available.\nValid values are:\n* GET\n* POST\n* PUT\n* PATCH\n* DELETE\n",
            "enum": [
              "GET",
              "POST",
              "PUT",
              "PATCH",
              "DELETE"
            ],
            "in": "header",
            "name": "PSU-Http-Method",
            "required": false,
            "type": "string"
          },
          {
            "description": "UUID (Universally Unique Identifier) for a device, which is used by the PSU, if available.\nUUID identifies either a device or a device dependant application installation.\nIn case of an installation identification this ID need to be unaltered until removal from device.\n",
            "format": "uuid",
            "in": "header",
            "name": "PSU-Device-ID",
            "required": false,
            "type": "string",
            "x-example": "99435c7e-ad88-49ec-a2ad-99ddcb1f5555"
          },
          {
            "description": "The forwarded Geo Location of the corresponding http request between PSU and TPP if available.\n",
            "in": "header",
            "name": "PSU-Geo-Location",
            "pattern": "(GEO:)[0-9]{1,3}\\.[-][0-9]{6}\\,[-][0-9]{1,3}\\.[0-9]{6}",
            "required": false,
            "type": "string",
            "x-example": "GEO:52.506931,13.144558"
          },
          {
            "description": "Requestbody for a consents request\n",
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/consents"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "ASPSP-SCA-Approach": {
                "description": "This data element must be contained, if the SCA Approach is already fixed.\nPossible values are\n  * EMBEDDED\n  * DECOUPLED\n  * REDIRECT\nThe OAuth SCA approach will be subsumed by REDIRECT.\n",
                "required": false,
                "type": "string"
              },
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/consentsResponse-201"
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error400_NG_AIS"
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error401_NG_AIS"
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error403_NG_AIS"
            }
          },
          "404": {
            "description": "Not found",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error404_NG_AIS"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error405_NG_AIS"
            }
          },
          "406": {
            "description": "Not Acceptable",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error406_NG_AIS"
            }
          },
          "408": {
            "description": "Request Timeout",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error429_NG_AIS"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          }
        },
        "security": [
          {},
          {
            "BearerAuthOAuth": []
          }
        ],
        "summary": "Create consent",
        "tags": [
          "Account Information Service (AIS)"
        ]
      }
    },
    "/v1/consents/{consentId}": {
      "delete": {
        "description": "The TPP can delete an account information consent object if needed.",
        "operationId": "deleteConsent",
        "parameters": [
          {
            "description": "ID of the corresponding consent object as returned by an Account Information Consent Request.\n",
            "in": "path",
            "name": "consentId",
            "required": true,
            "type": "string"
          },
          {
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "format": "uuid",
            "in": "header",
            "name": "X-Request-ID",
            "required": true,
            "type": "string",
            "x-example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721"
          },
          {
            "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request.",
            "in": "header",
            "name": "Digest",
            "required": false,
            "type": "string",
            "x-example": "SHA-256=hl1/Eps8BEQW58FJhDApwJXjGY4nr1ArGDHIT25vq6A="
          },
          {
            "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.\n",
            "in": "header",
            "name": "Signature",
            "required": false,
            "type": "string",
            "x-example": "keyId=\"SN=9FA1,CA=CN=D-TRUST%20CA%202-1%202015,O=D-Trust%20GmbH,C=DE\",algorithm=\"rsa-sha256\", headers=\"Digest X-Request-ID PSU-ID TPP-Redirect-URI Date\", signature=\"Base64(RSA-SHA256(signing string))\"\n"
          },
          {
            "description": "The certificate used for signing the request, in base64 encoding. \nMust be contained if a signature is contained.\n",
            "format": "byte",
            "in": "header",
            "name": "TPP-Signature-Certificate",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Address header field consists of the corresponding HTTP request \nIP Address field between PSU and TPP. \nIt shall be contained if and only if this request was actively initiated by the PSU.\n",
            "format": "ipv4",
            "in": "header",
            "name": "PSU-IP-Address",
            "required": false,
            "type": "string",
            "x-example": "192.168.8.78"
          },
          {
            "description": "The forwarded IP Port header field consists of the corresponding HTTP request IP Port field between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-IP-Port",
            "required": false,
            "type": "string",
            "x-example": "1234"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept-Charset",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept-Encoding",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded Agent header field of the HTTP request between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-User-Agent",
            "required": false,
            "type": "string"
          },
          {
            "description": "HTTP method used at the PSU ? TPP interface, if available.\nValid values are:\n* GET\n* POST\n* PUT\n* PATCH\n* DELETE\n",
            "enum": [
              "GET",
              "POST",
              "PUT",
              "PATCH",
              "DELETE"
            ],
            "in": "header",
            "name": "PSU-Http-Method",
            "required": false,
            "type": "string"
          },
          {
            "description": "UUID (Universally Unique Identifier) for a device, which is used by the PSU, if available.\nUUID identifies either a device or a device dependant application installation.\nIn case of an installation identification this ID need to be unaltered until removal from device.\n",
            "format": "uuid",
            "in": "header",
            "name": "PSU-Device-ID",
            "required": false,
            "type": "string",
            "x-example": "99435c7e-ad88-49ec-a2ad-99ddcb1f5555"
          },
          {
            "description": "The forwarded Geo Location of the corresponding http request between PSU and TPP if available.\n",
            "in": "header",
            "name": "PSU-Geo-Location",
            "pattern": "(GEO:)[0-9]{1,3}\\.[-][0-9]{6}\\,[-][0-9]{1,3}\\.[0-9]{6}",
            "required": false,
            "type": "string",
            "x-example": "GEO:52.506931,13.144558"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "headers": {
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error400_NG_AIS"
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error401_NG_AIS"
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error403_NG_AIS"
            }
          },
          "404": {
            "description": "Not found",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error404_NG_AIS"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error405_NG_AIS"
            }
          },
          "406": {
            "description": "Not Acceptable",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error406_NG_AIS"
            }
          },
          "408": {
            "description": "Request Timeout",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error429_NG_AIS"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          }
        },
        "security": [
          {},
          {
            "BearerAuthOAuth": []
          }
        ],
        "summary": "Delete Consent",
        "tags": [
          "Account Information Service (AIS)"
        ]
      },
      "get": {
        "description": "Returns the content of an account information consent object. \nThis is returning the data for the TPP especially in cases, \nwhere the consent was directly managed between ASPSP and PSU e.g. in a re-direct SCA Approach.\n",
        "operationId": "getConsentInformation",
        "parameters": [
          {
            "description": "ID of the corresponding consent object as returned by an Account Information Consent Request.\n",
            "in": "path",
            "name": "consentId",
            "required": true,
            "type": "string"
          },
          {
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "format": "uuid",
            "in": "header",
            "name": "X-Request-ID",
            "required": true,
            "type": "string",
            "x-example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721"
          },
          {
            "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request.",
            "in": "header",
            "name": "Digest",
            "required": false,
            "type": "string",
            "x-example": "SHA-256=hl1/Eps8BEQW58FJhDApwJXjGY4nr1ArGDHIT25vq6A="
          },
          {
            "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.\n",
            "in": "header",
            "name": "Signature",
            "required": false,
            "type": "string",
            "x-example": "keyId=\"SN=9FA1,CA=CN=D-TRUST%20CA%202-1%202015,O=D-Trust%20GmbH,C=DE\",algorithm=\"rsa-sha256\", headers=\"Digest X-Request-ID PSU-ID TPP-Redirect-URI Date\", signature=\"Base64(RSA-SHA256(signing string))\"\n"
          },
          {
            "description": "The certificate used for signing the request, in base64 encoding. \nMust be contained if a signature is contained.\n",
            "format": "byte",
            "in": "header",
            "name": "TPP-Signature-Certificate",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Address header field consists of the corresponding HTTP request \nIP Address field between PSU and TPP. \nIt shall be contained if and only if this request was actively initiated by the PSU.\n",
            "format": "ipv4",
            "in": "header",
            "name": "PSU-IP-Address",
            "required": false,
            "type": "string",
            "x-example": "192.168.8.78"
          },
          {
            "description": "The forwarded IP Port header field consists of the corresponding HTTP request IP Port field between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-IP-Port",
            "required": false,
            "type": "string",
            "x-example": "1234"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept-Charset",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept-Encoding",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded Agent header field of the HTTP request between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-User-Agent",
            "required": false,
            "type": "string"
          },
          {
            "description": "HTTP method used at the PSU ? TPP interface, if available.\nValid values are:\n* GET\n* POST\n* PUT\n* PATCH\n* DELETE\n",
            "enum": [
              "GET",
              "POST",
              "PUT",
              "PATCH",
              "DELETE"
            ],
            "in": "header",
            "name": "PSU-Http-Method",
            "required": false,
            "type": "string"
          },
          {
            "description": "UUID (Universally Unique Identifier) for a device, which is used by the PSU, if available.\nUUID identifies either a device or a device dependant application installation.\nIn case of an installation identification this ID need to be unaltered until removal from device.\n",
            "format": "uuid",
            "in": "header",
            "name": "PSU-Device-ID",
            "required": false,
            "type": "string",
            "x-example": "99435c7e-ad88-49ec-a2ad-99ddcb1f5555"
          },
          {
            "description": "The forwarded Geo Location of the corresponding http request between PSU and TPP if available.\n",
            "in": "header",
            "name": "PSU-Geo-Location",
            "pattern": "(GEO:)[0-9]{1,3}\\.[-][0-9]{6}\\,[-][0-9]{1,3}\\.[0-9]{6}",
            "required": false,
            "type": "string",
            "x-example": "GEO:52.506931,13.144558"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/consentInformationResponse-200_json"
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error400_NG_AIS"
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error401_NG_AIS"
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error403_NG_AIS"
            }
          },
          "404": {
            "description": "Not found",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error404_NG_AIS"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error405_NG_AIS"
            }
          },
          "406": {
            "description": "Not Acceptable",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error406_NG_AIS"
            }
          },
          "408": {
            "description": "Request Timeout",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error429_NG_AIS"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          }
        },
        "security": [
          {},
          {
            "BearerAuthOAuth": []
          }
        ],
        "summary": "Get Consent Request",
        "tags": [
          "Account Information Service (AIS)"
        ]
      }
    },
    "/v1/consents/{consentId}/authorisations": {
      "get": {
        "description": "Return a list of all authorisation subresources IDs which have been created.\n\nThis function returns an array of hyperlinks to all generated authorisation sub-resources.\n",
        "operationId": "getConsentAuthorisation",
        "parameters": [
          {
            "description": "ID of the corresponding consent object as returned by an Account Information Consent Request.\n",
            "in": "path",
            "name": "consentId",
            "required": true,
            "type": "string"
          },
          {
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "format": "uuid",
            "in": "header",
            "name": "X-Request-ID",
            "required": true,
            "type": "string",
            "x-example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721"
          },
          {
            "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request.",
            "in": "header",
            "name": "Digest",
            "required": false,
            "type": "string",
            "x-example": "SHA-256=hl1/Eps8BEQW58FJhDApwJXjGY4nr1ArGDHIT25vq6A="
          },
          {
            "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.\n",
            "in": "header",
            "name": "Signature",
            "required": false,
            "type": "string",
            "x-example": "keyId=\"SN=9FA1,CA=CN=D-TRUST%20CA%202-1%202015,O=D-Trust%20GmbH,C=DE\",algorithm=\"rsa-sha256\", headers=\"Digest X-Request-ID PSU-ID TPP-Redirect-URI Date\", signature=\"Base64(RSA-SHA256(signing string))\"\n"
          },
          {
            "description": "The certificate used for signing the request, in base64 encoding. \nMust be contained if a signature is contained.\n",
            "format": "byte",
            "in": "header",
            "name": "TPP-Signature-Certificate",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Address header field consists of the corresponding HTTP request \nIP Address field between PSU and TPP. \nIt shall be contained if and only if this request was actively initiated by the PSU.\n",
            "format": "ipv4",
            "in": "header",
            "name": "PSU-IP-Address",
            "required": false,
            "type": "string",
            "x-example": "192.168.8.78"
          },
          {
            "description": "The forwarded IP Port header field consists of the corresponding HTTP request IP Port field between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-IP-Port",
            "required": false,
            "type": "string",
            "x-example": "1234"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept-Charset",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept-Encoding",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded Agent header field of the HTTP request between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-User-Agent",
            "required": false,
            "type": "string"
          },
          {
            "description": "HTTP method used at the PSU ? TPP interface, if available.\nValid values are:\n* GET\n* POST\n* PUT\n* PATCH\n* DELETE\n",
            "enum": [
              "GET",
              "POST",
              "PUT",
              "PATCH",
              "DELETE"
            ],
            "in": "header",
            "name": "PSU-Http-Method",
            "required": false,
            "type": "string"
          },
          {
            "description": "UUID (Universally Unique Identifier) for a device, which is used by the PSU, if available.\nUUID identifies either a device or a device dependant application installation.\nIn case of an installation identification this ID need to be unaltered until removal from device.\n",
            "format": "uuid",
            "in": "header",
            "name": "PSU-Device-ID",
            "required": false,
            "type": "string",
            "x-example": "99435c7e-ad88-49ec-a2ad-99ddcb1f5555"
          },
          {
            "description": "The forwarded Geo Location of the corresponding http request between PSU and TPP if available.\n",
            "in": "header",
            "name": "PSU-Geo-Location",
            "pattern": "(GEO:)[0-9]{1,3}\\.[-][0-9]{6}\\,[-][0-9]{1,3}\\.[0-9]{6}",
            "required": false,
            "type": "string",
            "x-example": "GEO:52.506931,13.144558"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/authorisations"
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error400_NG_AIS"
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error401_NG_AIS"
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error403_NG_AIS"
            }
          },
          "404": {
            "description": "Not found",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error404_NG_AIS"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error405_NG_AIS"
            }
          },
          "406": {
            "description": "Not Acceptable",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error406_NG_AIS"
            }
          },
          "408": {
            "description": "Request Timeout",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error429_NG_AIS"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          }
        },
        "security": [
          {},
          {
            "BearerAuthOAuth": []
          }
        ],
        "summary": "Get Consent Authorisation Sub-Resources Request",
        "tags": [
          "Account Information Service (AIS)"
        ]
      },
      "post": {
        "description": "Create an authorisation sub-resource and start the authorisation process of a consent. \nThe message might in addition transmit authentication and authorisation related data.\n\nhis method is iterated n times for a n times SCA authorisation in a \ncorporate context, each creating an own authorisation sub-endpoint for \nthe corresponding PSU authorising the consent.\n\nThe ASPSP might make the usage of this access method unnecessary, \nsince the related authorisation resource will be automatically created by \nthe ASPSP after the submission of the consent data with the first POST consents call.\n\nThe start authorisation process is a process which is needed for creating a new authorisation \nor cancellation sub-resource. \n\nThis applies in the following scenarios:\n\n  * The ASPSP has indicated with an 'startAuthorisation' hyperlink in the preceeding Payment \n    Initiation Response that an explicit start of the authorisation process is needed by the TPP. \n    The 'startAuthorisation' hyperlink can transport more information about data which needs to be \n    uploaded by using the extended forms.\n    * 'startAuthorisationWithPsuIdentfication', \n    * 'startAuthorisationWithPsuAuthentication' #TODO\n    * 'startAuthorisationWithAuthentciationMethodSelection' \n  * The related payment initiation cannot yet be executed since a multilevel SCA is mandated.\n  * The ASPSP has indicated with an 'startAuthorisation' hyperlink in the preceeding \n    Payment Cancellation Response that an explicit start of the authorisation process is needed by the TPP. \n    The 'startAuthorisation' hyperlink can transport more information about data which needs to be uploaded \n    by using the extended forms as indicated above.\n  * The related payment cancellation request cannot be applied yet since a multilevel SCA is mandate for \n    executing the cancellation.\n  * The signing basket needs to be authorised yet.\n",
        "operationId": "startConsentAuthorisation",
        "parameters": [
          {
            "description": "ID of the corresponding consent object as returned by an Account Information Consent Request.\n",
            "in": "path",
            "name": "consentId",
            "required": true,
            "type": "string"
          },
          {
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "format": "uuid",
            "in": "header",
            "name": "X-Request-ID",
            "required": true,
            "type": "string",
            "x-example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721"
          },
          {
            "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request.",
            "in": "header",
            "name": "Digest",
            "required": false,
            "type": "string",
            "x-example": "SHA-256=hl1/Eps8BEQW58FJhDApwJXjGY4nr1ArGDHIT25vq6A="
          },
          {
            "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.\n",
            "in": "header",
            "name": "Signature",
            "required": false,
            "type": "string",
            "x-example": "keyId=\"SN=9FA1,CA=CN=D-TRUST%20CA%202-1%202015,O=D-Trust%20GmbH,C=DE\",algorithm=\"rsa-sha256\", headers=\"Digest X-Request-ID PSU-ID TPP-Redirect-URI Date\", signature=\"Base64(RSA-SHA256(signing string))\"\n"
          },
          {
            "description": "The certificate used for signing the request, in base64 encoding. \nMust be contained if a signature is contained.\n",
            "format": "byte",
            "in": "header",
            "name": "TPP-Signature-Certificate",
            "required": false,
            "type": "string"
          },
          {
            "description": "Client ID of the PSU in the ASPSP client interface. Might be mandated in the ASPSP's documentation.\nIs not contained if an OAuth2 based authentication was performed in a pre-step or an OAuth2 based SCA was performed in an preceeding\nAIS service in the same session.\n",
            "in": "header",
            "name": "PSU-ID",
            "required": false,
            "type": "string",
            "x-example": "PSU-1234"
          },
          {
            "description": "Type of the PSU-ID, needed in scenarios where PSUs have several PSU-IDs as access possibility.\n",
            "in": "header",
            "name": "PSU-ID-Type",
            "required": false,
            "type": "string"
          },
          {
            "description": "Might be mandated in the ASPSP's documentation. Only used in a corporate context.\n",
            "in": "header",
            "name": "PSU-Corporate-ID",
            "required": false,
            "type": "string"
          },
          {
            "description": "Might be mandated in the ASPSP's documentation. Only used in a corporate context.\n",
            "in": "header",
            "name": "PSU-Corporate-ID-Type",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Address header field consists of the corresponding HTTP request \nIP Address field between PSU and TPP. \nIt shall be contained if and only if this request was actively initiated by the PSU.\n",
            "format": "ipv4",
            "in": "header",
            "name": "PSU-IP-Address",
            "required": false,
            "type": "string",
            "x-example": "192.168.8.78"
          },
          {
            "description": "The forwarded IP Port header field consists of the corresponding HTTP request IP Port field between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-IP-Port",
            "required": false,
            "type": "string",
            "x-example": "1234"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept-Charset",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept-Encoding",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded Agent header field of the HTTP request between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-User-Agent",
            "required": false,
            "type": "string"
          },
          {
            "description": "HTTP method used at the PSU ? TPP interface, if available.\nValid values are:\n* GET\n* POST\n* PUT\n* PATCH\n* DELETE\n",
            "enum": [
              "GET",
              "POST",
              "PUT",
              "PATCH",
              "DELETE"
            ],
            "in": "header",
            "name": "PSU-Http-Method",
            "required": false,
            "type": "string"
          },
          {
            "description": "UUID (Universally Unique Identifier) for a device, which is used by the PSU, if available.\nUUID identifies either a device or a device dependant application installation.\nIn case of an installation identification this ID need to be unaltered until removal from device.\n",
            "format": "uuid",
            "in": "header",
            "name": "PSU-Device-ID",
            "required": false,
            "type": "string",
            "x-example": "99435c7e-ad88-49ec-a2ad-99ddcb1f5555"
          },
          {
            "description": "The forwarded Geo Location of the corresponding http request between PSU and TPP if available.\n",
            "in": "header",
            "name": "PSU-Geo-Location",
            "pattern": "(GEO:)[0-9]{1,3}\\.[-][0-9]{6}\\,[-][0-9]{1,3}\\.[0-9]{6}",
            "required": false,
            "type": "string",
            "x-example": "GEO:52.506931,13.144558"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "ASPSP-SCA-Approach": {
                "description": "This data element must be contained, if the SCA Approach is already fixed.\nPossible values are\n  * EMBEDDED\n  * DECOUPLED\n  * REDIRECT\nThe OAuth SCA approach will be subsumed by REDIRECT.\n",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/startScaprocessResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error400_NG_AIS"
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error401_NG_AIS"
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error403_NG_AIS"
            }
          },
          "404": {
            "description": "Not found",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error404_NG_AIS"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error405_NG_AIS"
            }
          },
          "406": {
            "description": "Not Acceptable",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error406_NG_AIS"
            }
          },
          "408": {
            "description": "Request Timeout",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error429_NG_AIS"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          }
        },
        "security": [
          {},
          {
            "BearerAuthOAuth": []
          }
        ],
        "summary": "Start the authorisation process for a consent",
        "tags": [
          "Account Information Service (AIS)",
          "Common Services"
        ]
      }
    },
    "/v1/consents/{consentId}/authorisations/{authorisationId}": {
      "get": {
        "description": "This method returns the SCA status of a consent initiation's authorisation sub-resource.\n",
        "operationId": "getConsentScaStatus",
        "parameters": [
          {
            "description": "ID of the corresponding consent object as returned by an Account Information Consent Request.\n",
            "in": "path",
            "name": "consentId",
            "required": true,
            "type": "string"
          },
          {
            "description": "Resource identification of the related SCA.",
            "in": "path",
            "name": "authorisationId",
            "required": true,
            "type": "string"
          },
          {
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "format": "uuid",
            "in": "header",
            "name": "X-Request-ID",
            "required": true,
            "type": "string",
            "x-example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721"
          },
          {
            "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request.",
            "in": "header",
            "name": "Digest",
            "required": false,
            "type": "string",
            "x-example": "SHA-256=hl1/Eps8BEQW58FJhDApwJXjGY4nr1ArGDHIT25vq6A="
          },
          {
            "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.\n",
            "in": "header",
            "name": "Signature",
            "required": false,
            "type": "string",
            "x-example": "keyId=\"SN=9FA1,CA=CN=D-TRUST%20CA%202-1%202015,O=D-Trust%20GmbH,C=DE\",algorithm=\"rsa-sha256\", headers=\"Digest X-Request-ID PSU-ID TPP-Redirect-URI Date\", signature=\"Base64(RSA-SHA256(signing string))\"\n"
          },
          {
            "description": "The certificate used for signing the request, in base64 encoding. \nMust be contained if a signature is contained.\n",
            "format": "byte",
            "in": "header",
            "name": "TPP-Signature-Certificate",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Address header field consists of the corresponding HTTP request \nIP Address field between PSU and TPP. \nIt shall be contained if and only if this request was actively initiated by the PSU.\n",
            "format": "ipv4",
            "in": "header",
            "name": "PSU-IP-Address",
            "required": false,
            "type": "string",
            "x-example": "192.168.8.78"
          },
          {
            "description": "The forwarded IP Port header field consists of the corresponding HTTP request IP Port field between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-IP-Port",
            "required": false,
            "type": "string",
            "x-example": "1234"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept-Charset",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept-Encoding",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded Agent header field of the HTTP request between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-User-Agent",
            "required": false,
            "type": "string"
          },
          {
            "description": "HTTP method used at the PSU ? TPP interface, if available.\nValid values are:\n* GET\n* POST\n* PUT\n* PATCH\n* DELETE\n",
            "enum": [
              "GET",
              "POST",
              "PUT",
              "PATCH",
              "DELETE"
            ],
            "in": "header",
            "name": "PSU-Http-Method",
            "required": false,
            "type": "string"
          },
          {
            "description": "UUID (Universally Unique Identifier) for a device, which is used by the PSU, if available.\nUUID identifies either a device or a device dependant application installation.\nIn case of an installation identification this ID need to be unaltered until removal from device.\n",
            "format": "uuid",
            "in": "header",
            "name": "PSU-Device-ID",
            "required": false,
            "type": "string",
            "x-example": "99435c7e-ad88-49ec-a2ad-99ddcb1f5555"
          },
          {
            "description": "The forwarded Geo Location of the corresponding http request between PSU and TPP if available.\n",
            "in": "header",
            "name": "PSU-Geo-Location",
            "pattern": "(GEO:)[0-9]{1,3}\\.[-][0-9]{6}\\,[-][0-9]{1,3}\\.[0-9]{6}",
            "required": false,
            "type": "string",
            "x-example": "GEO:52.506931,13.144558"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/scaStatusResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error400_NG_AIS"
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error401_NG_AIS"
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error403_NG_AIS"
            }
          },
          "404": {
            "description": "Not found",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error404_NG_AIS"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error405_NG_AIS"
            }
          },
          "406": {
            "description": "Not Acceptable",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error406_NG_AIS"
            }
          },
          "408": {
            "description": "Request Timeout",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error429_NG_AIS"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          }
        },
        "security": [
          {},
          {
            "BearerAuthOAuth": []
          }
        ],
        "summary": "Read the SCA status of the consent authorisation.",
        "tags": [
          "Account Information Service (AIS)",
          "Common Services"
        ]
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "This method update PSU data on the consents  resource if needed. \nIt may authorise a consent within the Embedded SCA Approach where needed.\n\nIndependently from the SCA Approach it supports e.g. the selection of \nthe authentication method and a non-SCA PSU authentication.\n\nThis methods updates PSU data on the cancellation authorisation resource if needed. \n\nThere are several possible Update PSU Data requests in the context of a consent request if needed, \nwhich depends on the SCA approach:\n\n* Redirect SCA Approach:\n  A specific Update PSU Data Request is applicable for \n    * the selection of authentication methods, before choosing the actual SCA approach.\n* Decoupled SCA Approach:\n  A specific Update PSU Data Request is only applicable for\n  * adding the PSU Identification, if not provided yet in the Payment Initiation Request or the Account Information Consent Request, or if no OAuth2 access token is used, or\n  * the selection of authentication methods.\n* Embedded SCA Approach: \n  The Update PSU Data Request might be used \n  * to add credentials as a first factor authentication data of the PSU and\n  * to select the authentication method and\n  * transaction authorisation.\n\nThe SCA Approach might depend on the chosen SCA method. \nFor that reason, the following possible Update PSU Data request can apply to all SCA approaches:\n\n* Select an SCA method in case of several SCA methods are available for the customer.\n\nThere are the following request types on this access path:\n  * Update PSU Identification\n  * Update PSU Authentication\n  * Select PSU Autorization Method \n    WARNING: This method need a reduced header, \n    therefore many optional elements are not present. \n    Maybe in a later version the access path will change.\n  * Transaction Authorisation\n    WARNING: This method need a reduced header, \n    therefore many optional elements are not present. \n    Maybe in a later version the access path will change.\n",
        "operationId": "updateConsentsPsuData",
        "parameters": [
          {
            "description": "ID of the corresponding consent object as returned by an Account Information Consent Request.\n",
            "in": "path",
            "name": "consentId",
            "required": true,
            "type": "string"
          },
          {
            "description": "Resource identification of the related SCA.",
            "in": "path",
            "name": "authorisationId",
            "required": true,
            "type": "string"
          },
          {
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "format": "uuid",
            "in": "header",
            "name": "X-Request-ID",
            "required": true,
            "type": "string",
            "x-example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721"
          },
          {
            "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request.",
            "in": "header",
            "name": "Digest",
            "required": false,
            "type": "string",
            "x-example": "SHA-256=hl1/Eps8BEQW58FJhDApwJXjGY4nr1ArGDHIT25vq6A="
          },
          {
            "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.\n",
            "in": "header",
            "name": "Signature",
            "required": false,
            "type": "string",
            "x-example": "keyId=\"SN=9FA1,CA=CN=D-TRUST%20CA%202-1%202015,O=D-Trust%20GmbH,C=DE\",algorithm=\"rsa-sha256\", headers=\"Digest X-Request-ID PSU-ID TPP-Redirect-URI Date\", signature=\"Base64(RSA-SHA256(signing string))\"\n"
          },
          {
            "description": "The certificate used for signing the request, in base64 encoding. \nMust be contained if a signature is contained.\n",
            "format": "byte",
            "in": "header",
            "name": "TPP-Signature-Certificate",
            "required": false,
            "type": "string"
          },
          {
            "description": "Client ID of the PSU in the ASPSP client interface. Might be mandated in the ASPSP's documentation.\nIs not contained if an OAuth2 based authentication was performed in a pre-step or an OAuth2 based SCA was performed in an preceeding\nAIS service in the same session.\n",
            "in": "header",
            "name": "PSU-ID",
            "required": false,
            "type": "string",
            "x-example": "PSU-1234"
          },
          {
            "description": "Type of the PSU-ID, needed in scenarios where PSUs have several PSU-IDs as access possibility.\n",
            "in": "header",
            "name": "PSU-ID-Type",
            "required": false,
            "type": "string"
          },
          {
            "description": "Might be mandated in the ASPSP's documentation. Only used in a corporate context.\n",
            "in": "header",
            "name": "PSU-Corporate-ID",
            "required": false,
            "type": "string"
          },
          {
            "description": "Might be mandated in the ASPSP's documentation. Only used in a corporate context.\n",
            "in": "header",
            "name": "PSU-Corporate-ID-Type",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Address header field consists of the corresponding HTTP request \nIP Address field between PSU and TPP. \nIt shall be contained if and only if this request was actively initiated by the PSU.\n",
            "format": "ipv4",
            "in": "header",
            "name": "PSU-IP-Address",
            "required": false,
            "type": "string",
            "x-example": "192.168.8.78"
          },
          {
            "description": "The forwarded IP Port header field consists of the corresponding HTTP request IP Port field between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-IP-Port",
            "required": false,
            "type": "string",
            "x-example": "1234"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept-Charset",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept-Encoding",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded Agent header field of the HTTP request between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-User-Agent",
            "required": false,
            "type": "string"
          },
          {
            "description": "HTTP method used at the PSU ? TPP interface, if available.\nValid values are:\n* GET\n* POST\n* PUT\n* PATCH\n* DELETE\n",
            "enum": [
              "GET",
              "POST",
              "PUT",
              "PATCH",
              "DELETE"
            ],
            "in": "header",
            "name": "PSU-Http-Method",
            "required": false,
            "type": "string"
          },
          {
            "description": "UUID (Universally Unique Identifier) for a device, which is used by the PSU, if available.\nUUID identifies either a device or a device dependant application installation.\nIn case of an installation identification this ID need to be unaltered until removal from device.\n",
            "format": "uuid",
            "in": "header",
            "name": "PSU-Device-ID",
            "required": false,
            "type": "string",
            "x-example": "99435c7e-ad88-49ec-a2ad-99ddcb1f5555"
          },
          {
            "description": "The forwarded Geo Location of the corresponding http request between PSU and TPP if available.\n",
            "in": "header",
            "name": "PSU-Geo-Location",
            "pattern": "(GEO:)[0-9]{1,3}\\.[-][0-9]{6}\\,[-][0-9]{1,3}\\.[0-9]{6}",
            "required": false,
            "type": "string",
            "x-example": "GEO:52.506931,13.144558"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "oneOf": [
                {},
                {
                  "$ref": "#/definitions/updatePsuAuthentication"
                },
                {
                  "$ref": "#/definitions/selectPsuAuthenticationMethod"
                },
                {
                  "$ref": "#/definitions/transactionAuthorisation"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "ASPSP-SCA-Approach": {
                "description": "This data element must be contained, if the SCA Approach is already fixed.\nPossible values are\n  * EMBEDDED\n  * DECOUPLED\n  * REDIRECT\nThe OAuth SCA approach will be subsumed by REDIRECT.\n",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "oneOf": [
                {
                  "$ref": "#/definitions/updatePsuIdenticationResponse"
                },
                {
                  "$ref": "#/definitions/updatePsuAuthenticationResponse"
                },
                {
                  "$ref": "#/definitions/selectPsuAuthenticationMethodResponse"
                },
                {
                  "$ref": "#/definitions/scaStatusResponse"
                }
              ]
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error400_NG_AIS"
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error401_NG_AIS"
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error403_NG_AIS"
            }
          },
          "404": {
            "description": "Not found",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error404_NG_AIS"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error405_NG_AIS"
            }
          },
          "406": {
            "description": "Not Acceptable",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error406_NG_AIS"
            }
          },
          "408": {
            "description": "Request Timeout",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error429_NG_AIS"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          }
        },
        "security": [
          {},
          {
            "BearerAuthOAuth": []
          }
        ],
        "summary": "Update PSU Data for consents",
        "tags": [
          "Account Information Service (AIS)",
          "Common Services"
        ]
      }
    },
    "/v1/consents/{consentId}/status": {
      "get": {
        "description": "Read the status of an account information consent resource.",
        "operationId": "getConsentStatus",
        "parameters": [
          {
            "description": "ID of the corresponding consent object as returned by an Account Information Consent Request.\n",
            "in": "path",
            "name": "consentId",
            "required": true,
            "type": "string"
          },
          {
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "format": "uuid",
            "in": "header",
            "name": "X-Request-ID",
            "required": true,
            "type": "string",
            "x-example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721"
          },
          {
            "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request.",
            "in": "header",
            "name": "Digest",
            "required": false,
            "type": "string",
            "x-example": "SHA-256=hl1/Eps8BEQW58FJhDApwJXjGY4nr1ArGDHIT25vq6A="
          },
          {
            "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.\n",
            "in": "header",
            "name": "Signature",
            "required": false,
            "type": "string",
            "x-example": "keyId=\"SN=9FA1,CA=CN=D-TRUST%20CA%202-1%202015,O=D-Trust%20GmbH,C=DE\",algorithm=\"rsa-sha256\", headers=\"Digest X-Request-ID PSU-ID TPP-Redirect-URI Date\", signature=\"Base64(RSA-SHA256(signing string))\"\n"
          },
          {
            "description": "The certificate used for signing the request, in base64 encoding. \nMust be contained if a signature is contained.\n",
            "format": "byte",
            "in": "header",
            "name": "TPP-Signature-Certificate",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Address header field consists of the corresponding HTTP request \nIP Address field between PSU and TPP. \nIt shall be contained if and only if this request was actively initiated by the PSU.\n",
            "format": "ipv4",
            "in": "header",
            "name": "PSU-IP-Address",
            "required": false,
            "type": "string",
            "x-example": "192.168.8.78"
          },
          {
            "description": "The forwarded IP Port header field consists of the corresponding HTTP request IP Port field between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-IP-Port",
            "required": false,
            "type": "string",
            "x-example": "1234"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept-Charset",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept-Encoding",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded Agent header field of the HTTP request between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-User-Agent",
            "required": false,
            "type": "string"
          },
          {
            "description": "HTTP method used at the PSU ? TPP interface, if available.\nValid values are:\n* GET\n* POST\n* PUT\n* PATCH\n* DELETE\n",
            "enum": [
              "GET",
              "POST",
              "PUT",
              "PATCH",
              "DELETE"
            ],
            "in": "header",
            "name": "PSU-Http-Method",
            "required": false,
            "type": "string"
          },
          {
            "description": "UUID (Universally Unique Identifier) for a device, which is used by the PSU, if available.\nUUID identifies either a device or a device dependant application installation.\nIn case of an installation identification this ID need to be unaltered until removal from device.\n",
            "format": "uuid",
            "in": "header",
            "name": "PSU-Device-ID",
            "required": false,
            "type": "string",
            "x-example": "99435c7e-ad88-49ec-a2ad-99ddcb1f5555"
          },
          {
            "description": "The forwarded Geo Location of the corresponding http request between PSU and TPP if available.\n",
            "in": "header",
            "name": "PSU-Geo-Location",
            "pattern": "(GEO:)[0-9]{1,3}\\.[-][0-9]{6}\\,[-][0-9]{1,3}\\.[0-9]{6}",
            "required": false,
            "type": "string",
            "x-example": "GEO:52.506931,13.144558"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/consentStatusResponse-200"
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error400_NG_AIS"
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error401_NG_AIS"
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error403_NG_AIS"
            }
          },
          "404": {
            "description": "Not found",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error404_NG_AIS"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error405_NG_AIS"
            }
          },
          "406": {
            "description": "Not Acceptable",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error406_NG_AIS"
            }
          },
          "408": {
            "description": "Request Timeout",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error429_NG_AIS"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          }
        },
        "security": [
          {},
          {
            "BearerAuthOAuth": []
          }
        ],
        "summary": "Consent status request",
        "tags": [
          "Account Information Service (AIS)"
        ]
      }
    },
    "/v1/funds-confirmations": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Creates a confirmation of funds request at the ASPSP. Checks whether a specific amount is available at point of time of the request on an account linked to a given tuple card issuer(TPP)/card number, or addressed by IBAN and TPP respectively",
        "operationId": "checkAvailabilityOfFunds",
        "parameters": [
          {
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "format": "uuid",
            "in": "header",
            "name": "X-Request-ID",
            "required": true,
            "type": "string",
            "x-example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721"
          },
          {
            "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request.",
            "in": "header",
            "name": "Digest",
            "required": false,
            "type": "string",
            "x-example": "SHA-256=hl1/Eps8BEQW58FJhDApwJXjGY4nr1ArGDHIT25vq6A="
          },
          {
            "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.\n",
            "in": "header",
            "name": "Signature",
            "required": false,
            "type": "string",
            "x-example": "keyId=\"SN=9FA1,CA=CN=D-TRUST%20CA%202-1%202015,O=D-Trust%20GmbH,C=DE\",algorithm=\"rsa-sha256\", headers=\"Digest X-Request-ID PSU-ID TPP-Redirect-URI Date\", signature=\"Base64(RSA-SHA256(signing string))\"\n"
          },
          {
            "description": "The certificate used for signing the request, in base64 encoding. \nMust be contained if a signature is contained.\n",
            "format": "byte",
            "in": "header",
            "name": "TPP-Signature-Certificate",
            "required": false,
            "type": "string"
          },
          {
            "description": "Request body for a confirmation of funds request.\n",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/confirmationOfFunds"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "description": "Equals \"true\" if sufficient funds are available at the time of the request, \n\"false\" otherwise.\n",
              "properties": {
                "fundsAvailable": {
                  "type": "boolean"
                }
              },
              "required": [
                "fundsAvailable"
              ],
              "type": "object"
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error400_NG_AIS"
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error401_NG_PIIS"
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error403_NG_PIIS"
            }
          },
          "404": {
            "description": "Not found",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error404_NG_PIIS"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error405_NG_PIIS"
            }
          },
          "406": {
            "description": "Not Acceptable",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          }
        },
        "summary": "Confirmation of Funds Request",
        "tags": [
          "Confirmation of Funds Service (PIIS)"
        ]
      }
    },
    "/v1/signing-baskets": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create a signing basket resource for authorising several transactions with one SCA method. \nThe resource identifications of these transactions are contained in the  payload of this access method\n",
        "operationId": "createSigningBasket",
        "parameters": [
          {
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "format": "uuid",
            "in": "header",
            "name": "X-Request-ID",
            "required": true,
            "type": "string",
            "x-example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721"
          },
          {
            "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request.",
            "in": "header",
            "name": "Digest",
            "required": false,
            "type": "string",
            "x-example": "SHA-256=hl1/Eps8BEQW58FJhDApwJXjGY4nr1ArGDHIT25vq6A="
          },
          {
            "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.\n",
            "in": "header",
            "name": "Signature",
            "required": false,
            "type": "string",
            "x-example": "keyId=\"SN=9FA1,CA=CN=D-TRUST%20CA%202-1%202015,O=D-Trust%20GmbH,C=DE\",algorithm=\"rsa-sha256\", headers=\"Digest X-Request-ID PSU-ID TPP-Redirect-URI Date\", signature=\"Base64(RSA-SHA256(signing string))\"\n"
          },
          {
            "description": "The certificate used for signing the request, in base64 encoding. \nMust be contained if a signature is contained.\n",
            "format": "byte",
            "in": "header",
            "name": "TPP-Signature-Certificate",
            "required": false,
            "type": "string"
          },
          {
            "description": "Client ID of the PSU in the ASPSP client interface. Might be mandated in the ASPSP's documentation.\nIs not contained if an OAuth2 based authentication was performed in a pre-step or an OAuth2 based SCA was performed in an preceeding\nAIS service in the same session.\n",
            "in": "header",
            "name": "PSU-ID",
            "required": false,
            "type": "string",
            "x-example": "PSU-1234"
          },
          {
            "description": "Type of the PSU-ID, needed in scenarios where PSUs have several PSU-IDs as access possibility.\n",
            "in": "header",
            "name": "PSU-ID-Type",
            "required": false,
            "type": "string"
          },
          {
            "description": "Might be mandated in the ASPSP's documentation. Only used in a corporate context.\n",
            "in": "header",
            "name": "PSU-Corporate-ID",
            "required": false,
            "type": "string"
          },
          {
            "description": "Might be mandated in the ASPSP's documentation. Only used in a corporate context.\n",
            "in": "header",
            "name": "PSU-Corporate-ID-Type",
            "required": false,
            "type": "string"
          },
          {
            "description": "This data element may be contained, if the payment initiation transaction is part of a session, i.e. combined AIS/PIS service.\nThis then contains the consentId of the related AIS consent, which was performed prior to this payment initiation.\n",
            "in": "header",
            "name": "Consent-ID",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Address header field consists of the corresponding http request IP Address field between PSU and TPP.\n",
            "format": "ipv4",
            "in": "header",
            "name": "PSU-IP-Address",
            "required": true,
            "type": "string",
            "x-example": "192.168.8.78"
          },
          {
            "description": "If it equals \"true\", the TPP prefers a redirect over an embedded SCA approach.\nIf it equals \"false\", the TPP prefers not to be redirected for SCA. The ASPSP will then choose between the Embedded or the Decoupled\nSCA approach, depending on the choice of the SCA procedure by the TPP/PSU.\nIf the parameter is not used, the ASPSP will choose the SCA approach to be applied depending on the SCA method chosen by the\nTPP/PSU.\n",
            "enum": [
              "true",
              "false"
            ],
            "in": "header",
            "name": "TPP-Redirect-Preferred",
            "required": false,
            "type": "string"
          },
          {
            "description": "URI of the TPP, where the transaction flow shall be redirected to after a Redirect.\n\nMandated for the Redirect SCA Approach (including OAuth2 SCA approach), specifically \nwhen TPP-Redirect-Preferred equals \"true\".\nIt is recommended to always use this header field.\n\n**Remark for Future:** \nThis field might be changed to mandatory in the next version of the specification.\n",
            "format": "uri",
            "in": "header",
            "name": "TPP-Redirect-URI",
            "required": false,
            "type": "string"
          },
          {
            "description": "If this URI is contained, the TPP is asking to redirect the transaction flow to this address instead of the TPP-Redirect-URI in case\nof a negative result of the redirect SCA method. This might be ignored by the ASPSP.\n",
            "format": "uri",
            "in": "header",
            "name": "TPP-Nok-Redirect-URI",
            "required": false,
            "type": "string"
          },
          {
            "description": "If it equals \"true\", the TPP prefers to start the authorisation process separately, \ne.g. because of the usage of a signing basket. \nThis preference might be ignored by the ASPSP, if a signing basket is not supported as functionality.\n\nIf it equals \"false\" or if the parameter is not used, there is no preference of the TPP. \nThis especially indicates that the TPP assumes a direct authorisation of the transaction in the next step, \nwithout using a signing basket.\n",
            "enum": [
              "true",
              "false"
            ],
            "in": "header",
            "name": "TPP-Explicit-Authorisation-Preferred",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Port header field consists of the corresponding HTTP request IP Port field between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-IP-Port",
            "required": false,
            "type": "string",
            "x-example": "1234"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept-Charset",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept-Encoding",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded Agent header field of the HTTP request between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-User-Agent",
            "required": false,
            "type": "string"
          },
          {
            "description": "HTTP method used at the PSU ? TPP interface, if available.\nValid values are:\n* GET\n* POST\n* PUT\n* PATCH\n* DELETE\n",
            "enum": [
              "GET",
              "POST",
              "PUT",
              "PATCH",
              "DELETE"
            ],
            "in": "header",
            "name": "PSU-Http-Method",
            "required": false,
            "type": "string"
          },
          {
            "description": "UUID (Universally Unique Identifier) for a device, which is used by the PSU, if available.\nUUID identifies either a device or a device dependant application installation.\nIn case of an installation identification this ID need to be unaltered until removal from device.\n",
            "format": "uuid",
            "in": "header",
            "name": "PSU-Device-ID",
            "required": false,
            "type": "string",
            "x-example": "99435c7e-ad88-49ec-a2ad-99ddcb1f5555"
          },
          {
            "description": "The forwarded Geo Location of the corresponding http request between PSU and TPP if available.\n",
            "in": "header",
            "name": "PSU-Geo-Location",
            "pattern": "(GEO:)[0-9]{1,3}\\.[-][0-9]{6}\\,[-][0-9]{1,3}\\.[0-9]{6}",
            "required": false,
            "type": "string",
            "x-example": "GEO:52.506931,13.144558"
          },
          {
            "description": "Request body for a confirmation of an establishing signing basket request\n",
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/signingBasket"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "ASPSP-SCA-Approach": {
                "description": "This data element must be contained, if the SCA Approach is already fixed.\nPossible values are\n  * EMBEDDED\n  * DECOUPLED\n  * REDIRECT\nThe OAuth SCA approach will be subsumed by REDIRECT.\n",
                "required": false,
                "type": "string"
              },
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/signingBasketResponse-201"
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error400_NG_SB"
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error401_NG_SB"
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error403_NG_SB"
            }
          },
          "404": {
            "description": "Not found",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error404_NG_SB"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error405_NG_SB"
            }
          },
          "406": {
            "description": "Not Acceptable",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          }
        },
        "security": [
          {},
          {
            "BearerAuthOAuth": []
          }
        ],
        "summary": "Create a signing basket resource",
        "tags": [
          "Signing Baskets"
        ]
      }
    },
    "/v1/signing-baskets/{basketId}": {
      "delete": {
        "description": "Delete the signing basket structure as long as no (partial) authorisation has yet been applied. \nThe undlerying transactions are not affected by this deletion.\n\nRemark: The signing basket as such is not deletable after a first (partial) authorisation has been applied. \nNevertheless, single transactions might be cancelled on an individual basis on the XS2A interface.\n",
        "operationId": "deleteSigningBasket",
        "parameters": [
          {
            "description": "This identification of the corresponding signing basket object.\n",
            "in": "path",
            "name": "basketId",
            "required": true,
            "type": "string"
          },
          {
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "format": "uuid",
            "in": "header",
            "name": "X-Request-ID",
            "required": true,
            "type": "string",
            "x-example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721"
          },
          {
            "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request.",
            "in": "header",
            "name": "Digest",
            "required": false,
            "type": "string",
            "x-example": "SHA-256=hl1/Eps8BEQW58FJhDApwJXjGY4nr1ArGDHIT25vq6A="
          },
          {
            "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.\n",
            "in": "header",
            "name": "Signature",
            "required": false,
            "type": "string",
            "x-example": "keyId=\"SN=9FA1,CA=CN=D-TRUST%20CA%202-1%202015,O=D-Trust%20GmbH,C=DE\",algorithm=\"rsa-sha256\", headers=\"Digest X-Request-ID PSU-ID TPP-Redirect-URI Date\", signature=\"Base64(RSA-SHA256(signing string))\"\n"
          },
          {
            "description": "The certificate used for signing the request, in base64 encoding. \nMust be contained if a signature is contained.\n",
            "format": "byte",
            "in": "header",
            "name": "TPP-Signature-Certificate",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Address header field consists of the corresponding http request IP Address field between PSU and TPP.\n",
            "format": "ipv4",
            "in": "header",
            "name": "PSU-IP-Address",
            "required": false,
            "type": "string",
            "x-example": "192.168.8.78"
          },
          {
            "description": "The forwarded IP Port header field consists of the corresponding HTTP request IP Port field between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-IP-Port",
            "required": false,
            "type": "string",
            "x-example": "1234"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept-Charset",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept-Encoding",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded Agent header field of the HTTP request between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-User-Agent",
            "required": false,
            "type": "string"
          },
          {
            "description": "HTTP method used at the PSU ? TPP interface, if available.\nValid values are:\n* GET\n* POST\n* PUT\n* PATCH\n* DELETE\n",
            "enum": [
              "GET",
              "POST",
              "PUT",
              "PATCH",
              "DELETE"
            ],
            "in": "header",
            "name": "PSU-Http-Method",
            "required": false,
            "type": "string"
          },
          {
            "description": "UUID (Universally Unique Identifier) for a device, which is used by the PSU, if available.\nUUID identifies either a device or a device dependant application installation.\nIn case of an installation identification this ID need to be unaltered until removal from device.\n",
            "format": "uuid",
            "in": "header",
            "name": "PSU-Device-ID",
            "required": false,
            "type": "string",
            "x-example": "99435c7e-ad88-49ec-a2ad-99ddcb1f5555"
          },
          {
            "description": "The forwarded Geo Location of the corresponding http request between PSU and TPP if available.\n",
            "in": "header",
            "name": "PSU-Geo-Location",
            "pattern": "(GEO:)[0-9]{1,3}\\.[-][0-9]{6}\\,[-][0-9]{1,3}\\.[0-9]{6}",
            "required": false,
            "type": "string",
            "x-example": "GEO:52.506931,13.144558"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "headers": {
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error400_NG_SB"
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error401_NG_SB"
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error403_NG_SB"
            }
          },
          "404": {
            "description": "Not found",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error404_NG_SB"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error405_NG_SB"
            }
          },
          "406": {
            "description": "Not Acceptable",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          }
        },
        "security": [
          {},
          {
            "BearerAuthOAuth": []
          }
        ],
        "summary": "Delete the signing basket",
        "tags": [
          "Signing Baskets",
          "Common Services"
        ]
      },
      "get": {
        "description": "Returns the content of an signing basket object.",
        "operationId": "getSigningBasket",
        "parameters": [
          {
            "description": "This identification of the corresponding signing basket object.\n",
            "in": "path",
            "name": "basketId",
            "required": true,
            "type": "string"
          },
          {
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "format": "uuid",
            "in": "header",
            "name": "X-Request-ID",
            "required": true,
            "type": "string",
            "x-example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721"
          },
          {
            "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request.",
            "in": "header",
            "name": "Digest",
            "required": false,
            "type": "string",
            "x-example": "SHA-256=hl1/Eps8BEQW58FJhDApwJXjGY4nr1ArGDHIT25vq6A="
          },
          {
            "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.\n",
            "in": "header",
            "name": "Signature",
            "required": false,
            "type": "string",
            "x-example": "keyId=\"SN=9FA1,CA=CN=D-TRUST%20CA%202-1%202015,O=D-Trust%20GmbH,C=DE\",algorithm=\"rsa-sha256\", headers=\"Digest X-Request-ID PSU-ID TPP-Redirect-URI Date\", signature=\"Base64(RSA-SHA256(signing string))\"\n"
          },
          {
            "description": "The certificate used for signing the request, in base64 encoding. \nMust be contained if a signature is contained.\n",
            "format": "byte",
            "in": "header",
            "name": "TPP-Signature-Certificate",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Address header field consists of the corresponding http request IP Address field between PSU and TPP.\n",
            "format": "ipv4",
            "in": "header",
            "name": "PSU-IP-Address",
            "required": false,
            "type": "string",
            "x-example": "192.168.8.78"
          },
          {
            "description": "The forwarded IP Port header field consists of the corresponding HTTP request IP Port field between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-IP-Port",
            "required": false,
            "type": "string",
            "x-example": "1234"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept-Charset",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept-Encoding",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded Agent header field of the HTTP request between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-User-Agent",
            "required": false,
            "type": "string"
          },
          {
            "description": "HTTP method used at the PSU ? TPP interface, if available.\nValid values are:\n* GET\n* POST\n* PUT\n* PATCH\n* DELETE\n",
            "enum": [
              "GET",
              "POST",
              "PUT",
              "PATCH",
              "DELETE"
            ],
            "in": "header",
            "name": "PSU-Http-Method",
            "required": false,
            "type": "string"
          },
          {
            "description": "UUID (Universally Unique Identifier) for a device, which is used by the PSU, if available.\nUUID identifies either a device or a device dependant application installation.\nIn case of an installation identification this ID need to be unaltered until removal from device.\n",
            "format": "uuid",
            "in": "header",
            "name": "PSU-Device-ID",
            "required": false,
            "type": "string",
            "x-example": "99435c7e-ad88-49ec-a2ad-99ddcb1f5555"
          },
          {
            "description": "The forwarded Geo Location of the corresponding http request between PSU and TPP if available.\n",
            "in": "header",
            "name": "PSU-Geo-Location",
            "pattern": "(GEO:)[0-9]{1,3}\\.[-][0-9]{6}\\,[-][0-9]{1,3}\\.[0-9]{6}",
            "required": false,
            "type": "string",
            "x-example": "GEO:52.506931,13.144558"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/signingBasketResponse-200"
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error400_NG_SB"
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error401_NG_SB"
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error403_NG_SB"
            }
          },
          "404": {
            "description": "Not found",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error404_NG_SB"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error405_NG_SB"
            }
          },
          "406": {
            "description": "Not Acceptable",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          }
        },
        "security": [
          {},
          {
            "BearerAuthOAuth": []
          }
        ],
        "summary": "Returns the content of an signing basket object.",
        "tags": [
          "Signing Baskets"
        ]
      }
    },
    "/v1/signing-baskets/{basketId}/authorisations": {
      "get": {
        "description": "Read a list of all authorisation subresources IDs which have been created.\n\nThis function returns an array of hyperlinks to all generated authorisation sub-resources.\n",
        "operationId": "getSigningBasketAuthorisation",
        "parameters": [
          {
            "description": "This identification of the corresponding signing basket object.\n",
            "in": "path",
            "name": "basketId",
            "required": true,
            "type": "string"
          },
          {
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "format": "uuid",
            "in": "header",
            "name": "X-Request-ID",
            "required": true,
            "type": "string",
            "x-example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721"
          },
          {
            "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request.",
            "in": "header",
            "name": "Digest",
            "required": false,
            "type": "string",
            "x-example": "SHA-256=hl1/Eps8BEQW58FJhDApwJXjGY4nr1ArGDHIT25vq6A="
          },
          {
            "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.\n",
            "in": "header",
            "name": "Signature",
            "required": false,
            "type": "string",
            "x-example": "keyId=\"SN=9FA1,CA=CN=D-TRUST%20CA%202-1%202015,O=D-Trust%20GmbH,C=DE\",algorithm=\"rsa-sha256\", headers=\"Digest X-Request-ID PSU-ID TPP-Redirect-URI Date\", signature=\"Base64(RSA-SHA256(signing string))\"\n"
          },
          {
            "description": "The certificate used for signing the request, in base64 encoding. \nMust be contained if a signature is contained.\n",
            "format": "byte",
            "in": "header",
            "name": "TPP-Signature-Certificate",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Address header field consists of the corresponding http request IP Address field between PSU and TPP.\n",
            "format": "ipv4",
            "in": "header",
            "name": "PSU-IP-Address",
            "required": false,
            "type": "string",
            "x-example": "192.168.8.78"
          },
          {
            "description": "The forwarded IP Port header field consists of the corresponding HTTP request IP Port field between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-IP-Port",
            "required": false,
            "type": "string",
            "x-example": "1234"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept-Charset",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept-Encoding",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded Agent header field of the HTTP request between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-User-Agent",
            "required": false,
            "type": "string"
          },
          {
            "description": "HTTP method used at the PSU ? TPP interface, if available.\nValid values are:\n* GET\n* POST\n* PUT\n* PATCH\n* DELETE\n",
            "enum": [
              "GET",
              "POST",
              "PUT",
              "PATCH",
              "DELETE"
            ],
            "in": "header",
            "name": "PSU-Http-Method",
            "required": false,
            "type": "string"
          },
          {
            "description": "UUID (Universally Unique Identifier) for a device, which is used by the PSU, if available.\nUUID identifies either a device or a device dependant application installation.\nIn case of an installation identification this ID need to be unaltered until removal from device.\n",
            "format": "uuid",
            "in": "header",
            "name": "PSU-Device-ID",
            "required": false,
            "type": "string",
            "x-example": "99435c7e-ad88-49ec-a2ad-99ddcb1f5555"
          },
          {
            "description": "The forwarded Geo Location of the corresponding http request between PSU and TPP if available.\n",
            "in": "header",
            "name": "PSU-Geo-Location",
            "pattern": "(GEO:)[0-9]{1,3}\\.[-][0-9]{6}\\,[-][0-9]{1,3}\\.[0-9]{6}",
            "required": false,
            "type": "string",
            "x-example": "GEO:52.506931,13.144558"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/authorisations"
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error400_NG_SB"
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error401_NG_SB"
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error403_NG_SB"
            }
          },
          "404": {
            "description": "Not found",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error404_NG_SB"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error405_NG_SB"
            }
          },
          "406": {
            "description": "Not Acceptable",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          }
        },
        "security": [
          {},
          {
            "BearerAuthOAuth": []
          }
        ],
        "summary": "Get Signing Basket Authorisation Sub-Resources Request",
        "tags": [
          "Signing Baskets",
          "Common Services"
        ]
      },
      "post": {
        "description": "Create an authorisation sub-resource and start the authorisation process of a signing basket. \nThe message might in addition transmit authentication and authorisation related data.\n\nThis method is iterated n times for a n times SCA authorisation in a \ncorporate context, each creating an own authorisation sub-endpoint for \nthe corresponding PSU authorising the signing-baskets.\n\nThe ASPSP might make the usage of this access method unnecessary in case \nof only one SCA process needed, since the related authorisation resource \nmight be automatically created by the ASPSP after the submission of the \npayment data with the first POST signing basket call.\n\nThe start authorisation process is a process which is needed for creating a new authorisation \nor cancellation sub-resource. \n\nThis applies in the following scenarios:\n\n  * The ASPSP has indicated with an 'startAuthorisation' hyperlink in the preceeding Payment \n    Initiation Response that an explicit start of the authorisation process is needed by the TPP. \n    The 'startAuthorisation' hyperlink can transport more information about data which needs to be \n    uploaded by using the extended forms.\n    * 'startAuthorisationWithPsuIdentfication', \n    * 'startAuthorisationWithPsuAuthentication' #TODO\n    * 'startAuthorisationWithAuthentciationMethodSelection' \n  * The related payment initiation cannot yet be executed since a multilevel SCA is mandated.\n  * The ASPSP has indicated with an 'startAuthorisation' hyperlink in the preceeding \n    Payment Cancellation Response that an explicit start of the authorisation process is needed by the TPP. \n    The 'startAuthorisation' hyperlink can transport more information about data which needs to be uploaded \n    by using the extended forms as indicated above.\n  * The related payment cancellation request cannot be applied yet since a multilevel SCA is mandate for \n    executing the cancellation.\n  * The signing basket needs to be authorised yet.\n",
        "operationId": "startSigningBasketAuthorisation",
        "parameters": [
          {
            "description": "This identification of the corresponding signing basket object.\n",
            "in": "path",
            "name": "basketId",
            "required": true,
            "type": "string"
          },
          {
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "format": "uuid",
            "in": "header",
            "name": "X-Request-ID",
            "required": true,
            "type": "string",
            "x-example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721"
          },
          {
            "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request.",
            "in": "header",
            "name": "Digest",
            "required": false,
            "type": "string",
            "x-example": "SHA-256=hl1/Eps8BEQW58FJhDApwJXjGY4nr1ArGDHIT25vq6A="
          },
          {
            "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.\n",
            "in": "header",
            "name": "Signature",
            "required": false,
            "type": "string",
            "x-example": "keyId=\"SN=9FA1,CA=CN=D-TRUST%20CA%202-1%202015,O=D-Trust%20GmbH,C=DE\",algorithm=\"rsa-sha256\", headers=\"Digest X-Request-ID PSU-ID TPP-Redirect-URI Date\", signature=\"Base64(RSA-SHA256(signing string))\"\n"
          },
          {
            "description": "The certificate used for signing the request, in base64 encoding. \nMust be contained if a signature is contained.\n",
            "format": "byte",
            "in": "header",
            "name": "TPP-Signature-Certificate",
            "required": false,
            "type": "string"
          },
          {
            "description": "Client ID of the PSU in the ASPSP client interface. Might be mandated in the ASPSP's documentation.\nIs not contained if an OAuth2 based authentication was performed in a pre-step or an OAuth2 based SCA was performed in an preceeding\nAIS service in the same session.\n",
            "in": "header",
            "name": "PSU-ID",
            "required": false,
            "type": "string",
            "x-example": "PSU-1234"
          },
          {
            "description": "Type of the PSU-ID, needed in scenarios where PSUs have several PSU-IDs as access possibility.\n",
            "in": "header",
            "name": "PSU-ID-Type",
            "required": false,
            "type": "string"
          },
          {
            "description": "Might be mandated in the ASPSP's documentation. Only used in a corporate context.\n",
            "in": "header",
            "name": "PSU-Corporate-ID",
            "required": false,
            "type": "string"
          },
          {
            "description": "Might be mandated in the ASPSP's documentation. Only used in a corporate context.\n",
            "in": "header",
            "name": "PSU-Corporate-ID-Type",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Address header field consists of the corresponding http request IP Address field between PSU and TPP.\n",
            "format": "ipv4",
            "in": "header",
            "name": "PSU-IP-Address",
            "required": false,
            "type": "string",
            "x-example": "192.168.8.78"
          },
          {
            "description": "The forwarded IP Port header field consists of the corresponding HTTP request IP Port field between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-IP-Port",
            "required": false,
            "type": "string",
            "x-example": "1234"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept-Charset",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept-Encoding",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded Agent header field of the HTTP request between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-User-Agent",
            "required": false,
            "type": "string"
          },
          {
            "description": "HTTP method used at the PSU ? TPP interface, if available.\nValid values are:\n* GET\n* POST\n* PUT\n* PATCH\n* DELETE\n",
            "enum": [
              "GET",
              "POST",
              "PUT",
              "PATCH",
              "DELETE"
            ],
            "in": "header",
            "name": "PSU-Http-Method",
            "required": false,
            "type": "string"
          },
          {
            "description": "UUID (Universally Unique Identifier) for a device, which is used by the PSU, if available.\nUUID identifies either a device or a device dependant application installation.\nIn case of an installation identification this ID need to be unaltered until removal from device.\n",
            "format": "uuid",
            "in": "header",
            "name": "PSU-Device-ID",
            "required": false,
            "type": "string",
            "x-example": "99435c7e-ad88-49ec-a2ad-99ddcb1f5555"
          },
          {
            "description": "The forwarded Geo Location of the corresponding http request between PSU and TPP if available.\n",
            "in": "header",
            "name": "PSU-Geo-Location",
            "pattern": "(GEO:)[0-9]{1,3}\\.[-][0-9]{6}\\,[-][0-9]{1,3}\\.[0-9]{6}",
            "required": false,
            "type": "string",
            "x-example": "GEO:52.506931,13.144558"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "ASPSP-SCA-Approach": {
                "description": "This data element must be contained, if the SCA Approach is already fixed.\nPossible values are\n  * EMBEDDED\n  * DECOUPLED\n  * REDIRECT\nThe OAuth SCA approach will be subsumed by REDIRECT.\n",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/startScaprocessResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error400_NG_SB"
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error401_NG_SB"
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error403_NG_SB"
            }
          },
          "404": {
            "description": "Not found",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error404_NG_SB"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error405_NG_SB"
            }
          },
          "406": {
            "description": "Not Acceptable",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          }
        },
        "security": [
          {},
          {
            "BearerAuthOAuth": []
          }
        ],
        "summary": "Start the authorisation process for a signing basket",
        "tags": [
          "Signing Baskets",
          "Common Services"
        ]
      }
    },
    "/v1/signing-baskets/{basketId}/authorisations/{authorisationId}": {
      "get": {
        "description": "This method returns the SCA status of a signing basket's authorisation sub-resource.\n",
        "operationId": "getSigningBasketScaStatus",
        "parameters": [
          {
            "description": "This identification of the corresponding signing basket object.\n",
            "in": "path",
            "name": "basketId",
            "required": true,
            "type": "string"
          },
          {
            "description": "Resource identification of the related SCA.",
            "in": "path",
            "name": "authorisationId",
            "required": true,
            "type": "string"
          },
          {
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "format": "uuid",
            "in": "header",
            "name": "X-Request-ID",
            "required": true,
            "type": "string",
            "x-example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721"
          },
          {
            "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request.",
            "in": "header",
            "name": "Digest",
            "required": false,
            "type": "string",
            "x-example": "SHA-256=hl1/Eps8BEQW58FJhDApwJXjGY4nr1ArGDHIT25vq6A="
          },
          {
            "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.\n",
            "in": "header",
            "name": "Signature",
            "required": false,
            "type": "string",
            "x-example": "keyId=\"SN=9FA1,CA=CN=D-TRUST%20CA%202-1%202015,O=D-Trust%20GmbH,C=DE\",algorithm=\"rsa-sha256\", headers=\"Digest X-Request-ID PSU-ID TPP-Redirect-URI Date\", signature=\"Base64(RSA-SHA256(signing string))\"\n"
          },
          {
            "description": "The certificate used for signing the request, in base64 encoding. \nMust be contained if a signature is contained.\n",
            "format": "byte",
            "in": "header",
            "name": "TPP-Signature-Certificate",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Address header field consists of the corresponding http request IP Address field between PSU and TPP.\n",
            "format": "ipv4",
            "in": "header",
            "name": "PSU-IP-Address",
            "required": false,
            "type": "string",
            "x-example": "192.168.8.78"
          },
          {
            "description": "The forwarded IP Port header field consists of the corresponding HTTP request IP Port field between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-IP-Port",
            "required": false,
            "type": "string",
            "x-example": "1234"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept-Charset",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept-Encoding",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded Agent header field of the HTTP request between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-User-Agent",
            "required": false,
            "type": "string"
          },
          {
            "description": "HTTP method used at the PSU ? TPP interface, if available.\nValid values are:\n* GET\n* POST\n* PUT\n* PATCH\n* DELETE\n",
            "enum": [
              "GET",
              "POST",
              "PUT",
              "PATCH",
              "DELETE"
            ],
            "in": "header",
            "name": "PSU-Http-Method",
            "required": false,
            "type": "string"
          },
          {
            "description": "UUID (Universally Unique Identifier) for a device, which is used by the PSU, if available.\nUUID identifies either a device or a device dependant application installation.\nIn case of an installation identification this ID need to be unaltered until removal from device.\n",
            "format": "uuid",
            "in": "header",
            "name": "PSU-Device-ID",
            "required": false,
            "type": "string",
            "x-example": "99435c7e-ad88-49ec-a2ad-99ddcb1f5555"
          },
          {
            "description": "The forwarded Geo Location of the corresponding http request between PSU and TPP if available.\n",
            "in": "header",
            "name": "PSU-Geo-Location",
            "pattern": "(GEO:)[0-9]{1,3}\\.[-][0-9]{6}\\,[-][0-9]{1,3}\\.[0-9]{6}",
            "required": false,
            "type": "string",
            "x-example": "GEO:52.506931,13.144558"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/scaStatusResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error400_NG_SB"
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error401_NG_SB"
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error403_NG_SB"
            }
          },
          "404": {
            "description": "Not found",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error404_NG_SB"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error405_NG_SB"
            }
          },
          "406": {
            "description": "Not Acceptable",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          }
        },
        "security": [
          {},
          {
            "BearerAuthOAuth": []
          }
        ],
        "summary": "Read the SCA status of the signing basket authorisation",
        "tags": [
          "Signing Baskets",
          "Common Services"
        ]
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "This method update PSU data on the signing basket resource if needed. \nIt may authorise a igning basket within the Embedded SCA Approach where needed.\n\nIndependently from the SCA Approach it supports e.g. the selection of \nthe authentication method and a non-SCA PSU authentication.\n\nThis methods updates PSU data on the cancellation authorisation resource if needed. \n\nThere are several possible Update PSU Data requests in the context of a consent request if needed, \nwhich depends on the SCA approach:\n\n* Redirect SCA Approach:\n  A specific Update PSU Data Request is applicable for \n    * the selection of authentication methods, before choosing the actual SCA approach.\n* Decoupled SCA Approach:\n  A specific Update PSU Data Request is only applicable for\n  * adding the PSU Identification, if not provided yet in the Payment Initiation Request or the Account Information Consent Request, or if no OAuth2 access token is used, or\n  * the selection of authentication methods.\n* Embedded SCA Approach: \n  The Update PSU Data Request might be used \n  * to add credentials as a first factor authentication data of the PSU and\n  * to select the authentication method and\n  * transaction authorisation.\n\nThe SCA Approach might depend on the chosen SCA method. \nFor that reason, the following possible Update PSU Data request can apply to all SCA approaches:\n\n* Select an SCA method in case of several SCA methods are available for the customer.\n\nThere are the following request types on this access path:\n  * Update PSU Identification\n  * Update PSU Authentication\n  * Select PSU Autorization Method \n    WARNING: This method need a reduced header, \n    therefore many optional elements are not present. \n    Maybe in a later version the access path will change.\n  * Transaction Authorisation\n    WARNING: This method need a reduced header, \n    therefore many optional elements are not present. \n    Maybe in a later version the access path will change.\n",
        "operationId": "updateSigningBasketPsuData",
        "parameters": [
          {
            "description": "This identification of the corresponding signing basket object.\n",
            "in": "path",
            "name": "basketId",
            "required": true,
            "type": "string"
          },
          {
            "description": "Resource identification of the related SCA.",
            "in": "path",
            "name": "authorisationId",
            "required": true,
            "type": "string"
          },
          {
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "format": "uuid",
            "in": "header",
            "name": "X-Request-ID",
            "required": true,
            "type": "string",
            "x-example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721"
          },
          {
            "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request.",
            "in": "header",
            "name": "Digest",
            "required": false,
            "type": "string",
            "x-example": "SHA-256=hl1/Eps8BEQW58FJhDApwJXjGY4nr1ArGDHIT25vq6A="
          },
          {
            "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.\n",
            "in": "header",
            "name": "Signature",
            "required": false,
            "type": "string",
            "x-example": "keyId=\"SN=9FA1,CA=CN=D-TRUST%20CA%202-1%202015,O=D-Trust%20GmbH,C=DE\",algorithm=\"rsa-sha256\", headers=\"Digest X-Request-ID PSU-ID TPP-Redirect-URI Date\", signature=\"Base64(RSA-SHA256(signing string))\"\n"
          },
          {
            "description": "The certificate used for signing the request, in base64 encoding. \nMust be contained if a signature is contained.\n",
            "format": "byte",
            "in": "header",
            "name": "TPP-Signature-Certificate",
            "required": false,
            "type": "string"
          },
          {
            "description": "Client ID of the PSU in the ASPSP client interface. Might be mandated in the ASPSP's documentation.\nIs not contained if an OAuth2 based authentication was performed in a pre-step or an OAuth2 based SCA was performed in an preceeding\nAIS service in the same session.\n",
            "in": "header",
            "name": "PSU-ID",
            "required": false,
            "type": "string",
            "x-example": "PSU-1234"
          },
          {
            "description": "Type of the PSU-ID, needed in scenarios where PSUs have several PSU-IDs as access possibility.\n",
            "in": "header",
            "name": "PSU-ID-Type",
            "required": false,
            "type": "string"
          },
          {
            "description": "Might be mandated in the ASPSP's documentation. Only used in a corporate context.\n",
            "in": "header",
            "name": "PSU-Corporate-ID",
            "required": false,
            "type": "string"
          },
          {
            "description": "Might be mandated in the ASPSP's documentation. Only used in a corporate context.\n",
            "in": "header",
            "name": "PSU-Corporate-ID-Type",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Address header field consists of the corresponding http request IP Address field between PSU and TPP.\n",
            "format": "ipv4",
            "in": "header",
            "name": "PSU-IP-Address",
            "required": false,
            "type": "string",
            "x-example": "192.168.8.78"
          },
          {
            "description": "The forwarded IP Port header field consists of the corresponding HTTP request IP Port field between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-IP-Port",
            "required": false,
            "type": "string",
            "x-example": "1234"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept-Charset",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept-Encoding",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded Agent header field of the HTTP request between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-User-Agent",
            "required": false,
            "type": "string"
          },
          {
            "description": "HTTP method used at the PSU ? TPP interface, if available.\nValid values are:\n* GET\n* POST\n* PUT\n* PATCH\n* DELETE\n",
            "enum": [
              "GET",
              "POST",
              "PUT",
              "PATCH",
              "DELETE"
            ],
            "in": "header",
            "name": "PSU-Http-Method",
            "required": false,
            "type": "string"
          },
          {
            "description": "UUID (Universally Unique Identifier) for a device, which is used by the PSU, if available.\nUUID identifies either a device or a device dependant application installation.\nIn case of an installation identification this ID need to be unaltered until removal from device.\n",
            "format": "uuid",
            "in": "header",
            "name": "PSU-Device-ID",
            "required": false,
            "type": "string",
            "x-example": "99435c7e-ad88-49ec-a2ad-99ddcb1f5555"
          },
          {
            "description": "The forwarded Geo Location of the corresponding http request between PSU and TPP if available.\n",
            "in": "header",
            "name": "PSU-Geo-Location",
            "pattern": "(GEO:)[0-9]{1,3}\\.[-][0-9]{6}\\,[-][0-9]{1,3}\\.[0-9]{6}",
            "required": false,
            "type": "string",
            "x-example": "GEO:52.506931,13.144558"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "oneOf": [
                {},
                {
                  "$ref": "#/definitions/updatePsuAuthentication"
                },
                {
                  "$ref": "#/definitions/selectPsuAuthenticationMethod"
                },
                {
                  "$ref": "#/definitions/transactionAuthorisation"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "ASPSP-SCA-Approach": {
                "description": "This data element must be contained, if the SCA Approach is already fixed.\nPossible values are\n  * EMBEDDED\n  * DECOUPLED\n  * REDIRECT\nThe OAuth SCA approach will be subsumed by REDIRECT.\n",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "oneOf": [
                {
                  "$ref": "#/definitions/updatePsuIdenticationResponse"
                },
                {
                  "$ref": "#/definitions/updatePsuAuthenticationResponse"
                },
                {
                  "$ref": "#/definitions/selectPsuAuthenticationMethodResponse"
                },
                {
                  "$ref": "#/definitions/scaStatusResponse"
                }
              ]
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error400_NG_SB"
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error401_NG_SB"
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error403_NG_SB"
            }
          },
          "404": {
            "description": "Not found",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error404_NG_SB"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error405_NG_SB"
            }
          },
          "406": {
            "description": "Not Acceptable",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          }
        },
        "security": [
          {},
          {
            "BearerAuthOAuth": []
          }
        ],
        "summary": "Update PSU Data for signing basket",
        "tags": [
          "Signing Baskets",
          "Common Services"
        ]
      }
    },
    "/v1/signing-baskets/{basketId}/status": {
      "get": {
        "description": "Returns the status of a signing basket object. \n",
        "operationId": "getSigningBasketStatus",
        "parameters": [
          {
            "description": "This identification of the corresponding signing basket object.\n",
            "in": "path",
            "name": "basketId",
            "required": true,
            "type": "string"
          },
          {
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "format": "uuid",
            "in": "header",
            "name": "X-Request-ID",
            "required": true,
            "type": "string",
            "x-example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721"
          },
          {
            "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request.",
            "in": "header",
            "name": "Digest",
            "required": false,
            "type": "string",
            "x-example": "SHA-256=hl1/Eps8BEQW58FJhDApwJXjGY4nr1ArGDHIT25vq6A="
          },
          {
            "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.\n",
            "in": "header",
            "name": "Signature",
            "required": false,
            "type": "string",
            "x-example": "keyId=\"SN=9FA1,CA=CN=D-TRUST%20CA%202-1%202015,O=D-Trust%20GmbH,C=DE\",algorithm=\"rsa-sha256\", headers=\"Digest X-Request-ID PSU-ID TPP-Redirect-URI Date\", signature=\"Base64(RSA-SHA256(signing string))\"\n"
          },
          {
            "description": "The certificate used for signing the request, in base64 encoding. \nMust be contained if a signature is contained.\n",
            "format": "byte",
            "in": "header",
            "name": "TPP-Signature-Certificate",
            "required": false,
            "type": "string"
          },
          {
            "description": "Client ID of the PSU in the ASPSP client interface. Might be mandated in the ASPSP's documentation.\nIs not contained if an OAuth2 based authentication was performed in a pre-step or an OAuth2 based SCA was performed in an preceeding\nAIS service in the same session.\n",
            "in": "header",
            "name": "PSU-ID",
            "required": false,
            "type": "string",
            "x-example": "PSU-1234"
          },
          {
            "description": "Type of the PSU-ID, needed in scenarios where PSUs have several PSU-IDs as access possibility.\n",
            "in": "header",
            "name": "PSU-ID-Type",
            "required": false,
            "type": "string"
          },
          {
            "description": "Might be mandated in the ASPSP's documentation. Only used in a corporate context.\n",
            "in": "header",
            "name": "PSU-Corporate-ID",
            "required": false,
            "type": "string"
          },
          {
            "description": "Might be mandated in the ASPSP's documentation. Only used in a corporate context.\n",
            "in": "header",
            "name": "PSU-Corporate-ID-Type",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Address header field consists of the corresponding http request IP Address field between PSU and TPP.\n",
            "format": "ipv4",
            "in": "header",
            "name": "PSU-IP-Address",
            "required": false,
            "type": "string",
            "x-example": "192.168.8.78"
          },
          {
            "description": "The forwarded IP Port header field consists of the corresponding HTTP request IP Port field between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-IP-Port",
            "required": false,
            "type": "string",
            "x-example": "1234"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept-Charset",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept-Encoding",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded Agent header field of the HTTP request between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-User-Agent",
            "required": false,
            "type": "string"
          },
          {
            "description": "HTTP method used at the PSU ? TPP interface, if available.\nValid values are:\n* GET\n* POST\n* PUT\n* PATCH\n* DELETE\n",
            "enum": [
              "GET",
              "POST",
              "PUT",
              "PATCH",
              "DELETE"
            ],
            "in": "header",
            "name": "PSU-Http-Method",
            "required": false,
            "type": "string"
          },
          {
            "description": "UUID (Universally Unique Identifier) for a device, which is used by the PSU, if available.\nUUID identifies either a device or a device dependant application installation.\nIn case of an installation identification this ID need to be unaltered until removal from device.\n",
            "format": "uuid",
            "in": "header",
            "name": "PSU-Device-ID",
            "required": false,
            "type": "string",
            "x-example": "99435c7e-ad88-49ec-a2ad-99ddcb1f5555"
          },
          {
            "description": "The forwarded Geo Location of the corresponding http request between PSU and TPP if available.\n",
            "in": "header",
            "name": "PSU-Geo-Location",
            "pattern": "(GEO:)[0-9]{1,3}\\.[-][0-9]{6}\\,[-][0-9]{1,3}\\.[0-9]{6}",
            "required": false,
            "type": "string",
            "x-example": "GEO:52.506931,13.144558"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/signingBasketStatusResponse-200"
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error400_NG_SB"
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error401_NG_SB"
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error403_NG_SB"
            }
          },
          "404": {
            "description": "Not found",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error404_NG_SB"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error405_NG_SB"
            }
          },
          "406": {
            "description": "Not Acceptable",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          }
        },
        "security": [
          {},
          {
            "BearerAuthOAuth": []
          }
        ],
        "summary": "Read the status of the signing basket",
        "tags": [
          "Signing Baskets",
          "Common Services"
        ]
      }
    },
    "/v1/{payment-service}/{payment-product}": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "This method is used to initiate a payment at the ASPSP.\n\n## Variants of Payment Initiation Requests\n\nThis method to initiate a payment initiation at the ASPSP can be sent with either a JSON body or an pain.001 body depending on the payment product in the path.\n\nThere are the following **payment products**:\n\n  - Payment products with payment information in *JSON* format:\n    - ***sepa-credit-transfers***\n    - ***instant-sepa-credit-transfers***\n    - ***target-2-payments***\n    - ***cross-border-credit-transfers***\n  - Payment products with payment information in *pain.001* XML format:\n    - ***pain.001-sepa-credit-transfers***\n    - ***pain.001-instant-sepa-credit-transfers***\n    - ***pain.001-target-2-payments***\n    - ***pain.001-cross-border-credit-transfers***\n\nFurthermore the request body depends on the **payment-service**\n  * ***payments***: A single payment initiation request.\n  * ***bulk-payments***: A collection of several payment iniatiation requests.\n  \n    In case of a *pain.001* message there are more than one payments contained in the *pain.001 message.\n    \n    In case of a *JSON* there are several JSON payment blocks contained in a joining list.\n  * ***periodic-payments***: \n    Create a standing order initiation resource for recurrent i.e. periodic payments addressable under {paymentId} \n     with all data relevant for the corresponding payment product and the execution of the standing order contained in a JSON body. \n\nThis is the first step in the API to initiate the related recurring/periodic payment.\n  \n## Single and mulitilevel SCA Processes\n\nThe Payment Initiation Requests are independent from the need of one ore multilevel \nSCA processing, i.e. independent from the number of authorisations needed for the execution of payments. \n\nBut the response messages are specific to either one SCA processing or multilevel SCA processing. \n\nFor payment initiation with multilevel SCA, this specification requires an explicit start of the authorisation, \ni.e. links directly associated with SCA processing like 'scaRedirect' or 'scaOAuth' cannot be contained in the \nresponse message of a Payment Initation Request for a payment, where multiple authorisations are needed. \nAlso if any data is needed for the next action, like selecting an SCA method is not supported in the response, \nsince all starts of the multiple authorisations are fully equal. \nIn these cases, first an authorisation sub-resource has to be generated following the 'startAuthorisation' link.\n",
        "operationId": "initiatePayment",
        "parameters": [
          {
            "description": "Payment service:\n\nPossible values are:\n* payments\n* bulk-payments\n* periodic-payments\n",
            "enum": [
              "payments",
              "bulk-payments",
              "periodic-payments"
            ],
            "in": "path",
            "name": "payment-service",
            "required": true,
            "type": "string"
          },
          {
            "description": "The addressed payment product endpoint, e.g. for SEPA Credit Transfers (SCT).\nThe ASPSP will publish which of the payment products/endpoints will be supported.\n\nThe following payment products are supported:\n  - sepa-credit-transfers\n  - instant-sepa-credit-transfers\n  - target-2-payments\n  - cross-border-credit-transfers\n  - pain.001-sepa-credit-transfers\n  - pain.001-instant-sepa-credit-transfers\n  - pain.001-target-2-payments\n  - pain.001-cross-border-credit-transfers\n\n**Remark:** For all SEPA Credit Transfer based endpoints which accept XML encoding, \nthe XML pain.001 schemes provided by EPC are supported by the ASPSP as a minimum for the body content. \nFurther XML schemes might be supported by some communities.\n\n**Remark:** For cross-border and TARGET-2 payments only community wide pain.001 schemes do exist. \nThere are plenty of country specificic scheme variants.\n",
            "enum": [
              "sepa-credit-transfers",
              "instant-sepa-credit-transfers",
              "target-2-payments",
              "cross-border-credit-transfers",
              "pain.001-sepa-credit-transfers",
              "pain.001-instant-sepa-credit-transfers",
              "pain.001-target-2-payments",
              "pain.001-cross-border-credit-transfers"
            ],
            "in": "path",
            "name": "payment-product",
            "required": true,
            "type": "string"
          },
          {
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "format": "uuid",
            "in": "header",
            "name": "X-Request-ID",
            "required": true,
            "type": "string",
            "x-example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721"
          },
          {
            "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request.",
            "in": "header",
            "name": "Digest",
            "required": false,
            "type": "string",
            "x-example": "SHA-256=hl1/Eps8BEQW58FJhDApwJXjGY4nr1ArGDHIT25vq6A="
          },
          {
            "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.\n",
            "in": "header",
            "name": "Signature",
            "required": false,
            "type": "string",
            "x-example": "keyId=\"SN=9FA1,CA=CN=D-TRUST%20CA%202-1%202015,O=D-Trust%20GmbH,C=DE\",algorithm=\"rsa-sha256\", headers=\"Digest X-Request-ID PSU-ID TPP-Redirect-URI Date\", signature=\"Base64(RSA-SHA256(signing string))\"\n"
          },
          {
            "description": "The certificate used for signing the request, in base64 encoding. \nMust be contained if a signature is contained.\n",
            "format": "byte",
            "in": "header",
            "name": "TPP-Signature-Certificate",
            "required": false,
            "type": "string"
          },
          {
            "description": "Client ID of the PSU in the ASPSP client interface. Might be mandated in the ASPSP's documentation.\nIs not contained if an OAuth2 based authentication was performed in a pre-step or an OAuth2 based SCA was performed in an preceeding\nAIS service in the same session.\n",
            "in": "header",
            "name": "PSU-ID",
            "required": false,
            "type": "string",
            "x-example": "PSU-1234"
          },
          {
            "description": "Type of the PSU-ID, needed in scenarios where PSUs have several PSU-IDs as access possibility.\n",
            "in": "header",
            "name": "PSU-ID-Type",
            "required": false,
            "type": "string"
          },
          {
            "description": "Might be mandated in the ASPSP's documentation. Only used in a corporate context.\n",
            "in": "header",
            "name": "PSU-Corporate-ID",
            "required": false,
            "type": "string"
          },
          {
            "description": "Might be mandated in the ASPSP's documentation. Only used in a corporate context.\n",
            "in": "header",
            "name": "PSU-Corporate-ID-Type",
            "required": false,
            "type": "string"
          },
          {
            "description": "This data element may be contained, if the payment initiation transaction is part of a session, i.e. combined AIS/PIS service.\nThis then contains the consentId of the related AIS consent, which was performed prior to this payment initiation.\n",
            "in": "header",
            "name": "Consent-ID",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Address header field consists of the corresponding http request IP Address field between PSU and TPP.\n",
            "format": "ipv4",
            "in": "header",
            "name": "PSU-IP-Address",
            "required": true,
            "type": "string",
            "x-example": "192.168.8.78"
          },
          {
            "description": "If it equals \"true\", the TPP prefers a redirect over an embedded SCA approach.\nIf it equals \"false\", the TPP prefers not to be redirected for SCA. The ASPSP will then choose between the Embedded or the Decoupled\nSCA approach, depending on the choice of the SCA procedure by the TPP/PSU.\nIf the parameter is not used, the ASPSP will choose the SCA approach to be applied depending on the SCA method chosen by the\nTPP/PSU.\n",
            "enum": [
              "true",
              "false"
            ],
            "in": "header",
            "name": "TPP-Redirect-Preferred",
            "required": false,
            "type": "string"
          },
          {
            "description": "URI of the TPP, where the transaction flow shall be redirected to after a Redirect.\n\nMandated for the Redirect SCA Approach (including OAuth2 SCA approach), specifically \nwhen TPP-Redirect-Preferred equals \"true\".\nIt is recommended to always use this header field.\n\n**Remark for Future:** \nThis field might be changed to mandatory in the next version of the specification.\n",
            "format": "uri",
            "in": "header",
            "name": "TPP-Redirect-URI",
            "required": false,
            "type": "string"
          },
          {
            "description": "If this URI is contained, the TPP is asking to redirect the transaction flow to this address instead of the TPP-Redirect-URI in case\nof a negative result of the redirect SCA method. This might be ignored by the ASPSP.\n",
            "format": "uri",
            "in": "header",
            "name": "TPP-Nok-Redirect-URI",
            "required": false,
            "type": "string"
          },
          {
            "description": "If it equals \"true\", the TPP prefers to start the authorisation process separately, \ne.g. because of the usage of a signing basket. \nThis preference might be ignored by the ASPSP, if a signing basket is not supported as functionality.\n\nIf it equals \"false\" or if the parameter is not used, there is no preference of the TPP. \nThis especially indicates that the TPP assumes a direct authorisation of the transaction in the next step, \nwithout using a signing basket.\n",
            "enum": [
              "true",
              "false"
            ],
            "in": "header",
            "name": "TPP-Explicit-Authorisation-Preferred",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Port header field consists of the corresponding HTTP request IP Port field between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-IP-Port",
            "required": false,
            "type": "string",
            "x-example": "1234"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept-Charset",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept-Encoding",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded Agent header field of the HTTP request between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-User-Agent",
            "required": false,
            "type": "string"
          },
          {
            "description": "HTTP method used at the PSU ? TPP interface, if available.\nValid values are:\n* GET\n* POST\n* PUT\n* PATCH\n* DELETE\n",
            "enum": [
              "GET",
              "POST",
              "PUT",
              "PATCH",
              "DELETE"
            ],
            "in": "header",
            "name": "PSU-Http-Method",
            "required": false,
            "type": "string"
          },
          {
            "description": "UUID (Universally Unique Identifier) for a device, which is used by the PSU, if available.\nUUID identifies either a device or a device dependant application installation.\nIn case of an installation identification this ID need to be unaltered until removal from device.\n",
            "format": "uuid",
            "in": "header",
            "name": "PSU-Device-ID",
            "required": false,
            "type": "string",
            "x-example": "99435c7e-ad88-49ec-a2ad-99ddcb1f5555"
          },
          {
            "description": "The forwarded Geo Location of the corresponding http request between PSU and TPP if available.\n",
            "in": "header",
            "name": "PSU-Geo-Location",
            "pattern": "(GEO:)[0-9]{1,3}\\.[-][0-9]{6}\\,[-][0-9]{1,3}\\.[0-9]{6}",
            "required": false,
            "type": "string",
            "x-example": "GEO:52.506931,13.144558"
          },
          {
            "description": "JSON request body for a payment inition request message \n\nThere are the following payment-products supported:\n  * \"sepa-credit-transfers\" with JSON-Body\n  * \"instant-sepa-credit-transfers\" with JSON-Body\n  * \"target-2-payments\" with JSON-Body\n  * \"cross-border-credit-transfers\" with JSON-Body\n  * \"pain.001-sepa-credit-transfers\" with XML pain.001.001.03 body for SCT scheme\n  * \"pain.001-instant-sepa-credit-transfers\" with XML pain.001.001.03 body for SCT INST scheme\n  * \"pain.001-target-2-payments\" with pain.001 body. \n    Only country specific schemes are currently available\n  * \"pain.001-cross-border-credit-transfers\" with pain.001 body. \n    Only country specific schemes are currently available\n  \nThere are the following payment-services supported:\n  * \"payments\"\n  * \"periodic-payments\"\n  * \"bulk-paments\"\n\nAll optional, conditional and predefined but not yet used fields are defined.\n",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "oneOf": [
                {
                  "$ref": "#/definitions/paymentInitiationSct_json"
                },
                {
                  "$ref": "#/definitions/paymentInitiationSctInst_json"
                },
                {
                  "$ref": "#/definitions/paymentInitiationTarget2_json"
                },
                {
                  "$ref": "#/definitions/paymentInitiationCrossBorder_json"
                },
                {
                  "$ref": "#/definitions/periodicPaymentInitiationSct_json"
                },
                {
                  "$ref": "#/definitions/periodicPaymentInitiationSctInst_json"
                },
                {
                  "$ref": "#/definitions/periodicPaymentInitiationTarget2_json"
                },
                {
                  "$ref": "#/definitions/periodicPaymentInitiationCrossBorder_json"
                },
                {
                  "$ref": "#/definitions/bulkPaymentInitiationSct_json"
                },
                {
                  "$ref": "#/definitions/bulkPaymentInitiationSctInst_json"
                },
                {
                  "$ref": "#/definitions/bulkPaymentInitiationTarget2_json"
                },
                {
                  "$ref": "#/definitions/bulkPaymentInitiationCrossBorder_json"
                }
              ]
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "CREATED",
            "headers": {
              "ASPSP-SCA-Approach": {
                "description": "This data element must be contained, if the SCA Approach is already fixed.\nPossible values are\n  * EMBEDDED\n  * DECOUPLED\n  * REDIRECT\nThe OAuth SCA approach will be subsumed by REDIRECT.\n",
                "required": false,
                "type": "string"
              },
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "oneOf": [
                {
                  "$ref": "#/definitions/paymentInitationRequestResponse-201"
                },
                {
                  "$ref": "#/definitions/paymentInitationRequestMultiLevelScaResponse-201"
                }
              ]
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error400_NG_PIS"
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error401_NG_PIS"
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error403_NG_PIS"
            }
          },
          "404": {
            "description": "Not found",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error404_NG_PIS"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error405_NG_PIS"
            }
          },
          "406": {
            "description": "Not Acceptable",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          }
        },
        "security": [
          {},
          {
            "BearerAuthOAuth": []
          }
        ],
        "summary": "Payment initiation request",
        "tags": [
          "Payment Initiation Service (PIS)"
        ]
      }
    },
    "/v1/{payment-service}/{payment-product}/{paymentId}": {
      "delete": {
        "description": "This method initiates the cancellation of a payment. \nDepending on the payment-service, the payment-product and the ASPSP's implementation, \nthis TPP call might be sufficient to cancel a payment. \nIf an authorisation of the payment cancellation is mandated by the ASPSP, \na corresponding hyperlink will be contained in the response message.\n\nCancels the addressed payment with resource identification paymentId if applicable to the payment-service, payment-product and received in product related timelines (e.g. before end of business day for scheduled payments of the last business day before the scheduled execution day). \n\nThe response to this DELETE command will tell the TPP whether the \n  * access method was rejected\n  * access method was successful, or\n  * access method is generally applicable, but further authorisation processes are needed.\n",
        "operationId": "cancelPayment",
        "parameters": [
          {
            "description": "Payment service:\n\nPossible values are:\n* payments\n* bulk-payments\n* periodic-payments\n",
            "enum": [
              "payments",
              "bulk-payments",
              "periodic-payments"
            ],
            "in": "path",
            "name": "payment-service",
            "required": true,
            "type": "string"
          },
          {
            "description": "The addressed payment product endpoint, e.g. for SEPA Credit Transfers (SCT).\nThe ASPSP will publish which of the payment products/endpoints will be supported.\n\nThe following payment products are supported:\n  - sepa-credit-transfers\n  - instant-sepa-credit-transfers\n  - target-2-payments\n  - cross-border-credit-transfers\n  - pain.001-sepa-credit-transfers\n  - pain.001-instant-sepa-credit-transfers\n  - pain.001-target-2-payments\n  - pain.001-cross-border-credit-transfers\n\n**Remark:** For all SEPA Credit Transfer based endpoints which accept XML encoding, \nthe XML pain.001 schemes provided by EPC are supported by the ASPSP as a minimum for the body content. \nFurther XML schemes might be supported by some communities.\n\n**Remark:** For cross-border and TARGET-2 payments only community wide pain.001 schemes do exist. \nThere are plenty of country specificic scheme variants.\n",
            "enum": [
              "sepa-credit-transfers",
              "instant-sepa-credit-transfers",
              "target-2-payments",
              "cross-border-credit-transfers",
              "pain.001-sepa-credit-transfers",
              "pain.001-instant-sepa-credit-transfers",
              "pain.001-target-2-payments",
              "pain.001-cross-border-credit-transfers"
            ],
            "in": "path",
            "name": "payment-product",
            "required": true,
            "type": "string"
          },
          {
            "description": "Resource identification of the generated payment initiation resource.",
            "in": "path",
            "name": "paymentId",
            "required": true,
            "type": "string"
          },
          {
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "format": "uuid",
            "in": "header",
            "name": "X-Request-ID",
            "required": true,
            "type": "string",
            "x-example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721"
          },
          {
            "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request.",
            "in": "header",
            "name": "Digest",
            "required": false,
            "type": "string",
            "x-example": "SHA-256=hl1/Eps8BEQW58FJhDApwJXjGY4nr1ArGDHIT25vq6A="
          },
          {
            "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.\n",
            "in": "header",
            "name": "Signature",
            "required": false,
            "type": "string",
            "x-example": "keyId=\"SN=9FA1,CA=CN=D-TRUST%20CA%202-1%202015,O=D-Trust%20GmbH,C=DE\",algorithm=\"rsa-sha256\", headers=\"Digest X-Request-ID PSU-ID TPP-Redirect-URI Date\", signature=\"Base64(RSA-SHA256(signing string))\"\n"
          },
          {
            "description": "The certificate used for signing the request, in base64 encoding. \nMust be contained if a signature is contained.\n",
            "format": "byte",
            "in": "header",
            "name": "TPP-Signature-Certificate",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Address header field consists of the corresponding http request IP Address field between PSU and TPP.\n",
            "format": "ipv4",
            "in": "header",
            "name": "PSU-IP-Address",
            "required": false,
            "type": "string",
            "x-example": "192.168.8.78"
          },
          {
            "description": "The forwarded IP Port header field consists of the corresponding HTTP request IP Port field between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-IP-Port",
            "required": false,
            "type": "string",
            "x-example": "1234"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept-Charset",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept-Encoding",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded Agent header field of the HTTP request between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-User-Agent",
            "required": false,
            "type": "string"
          },
          {
            "description": "HTTP method used at the PSU ? TPP interface, if available.\nValid values are:\n* GET\n* POST\n* PUT\n* PATCH\n* DELETE\n",
            "enum": [
              "GET",
              "POST",
              "PUT",
              "PATCH",
              "DELETE"
            ],
            "in": "header",
            "name": "PSU-Http-Method",
            "required": false,
            "type": "string"
          },
          {
            "description": "UUID (Universally Unique Identifier) for a device, which is used by the PSU, if available.\nUUID identifies either a device or a device dependant application installation.\nIn case of an installation identification this ID need to be unaltered until removal from device.\n",
            "format": "uuid",
            "in": "header",
            "name": "PSU-Device-ID",
            "required": false,
            "type": "string",
            "x-example": "99435c7e-ad88-49ec-a2ad-99ddcb1f5555"
          },
          {
            "description": "The forwarded Geo Location of the corresponding http request between PSU and TPP if available.\n",
            "in": "header",
            "name": "PSU-Geo-Location",
            "pattern": "(GEO:)[0-9]{1,3}\\.[-][0-9]{6}\\,[-][0-9]{1,3}\\.[0-9]{6}",
            "required": false,
            "type": "string",
            "x-example": "GEO:52.506931,13.144558"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "202": {
            "description": "Received",
            "headers": {
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/paymentInitiationCancelResponse-204_202"
            }
          },
          "204": {
            "description": "OK",
            "headers": {
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/paymentInitiationCancelResponse-204_202"
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error400_NG_PIS"
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error401_NG_PIS"
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error403_NG_PIS"
            }
          },
          "404": {
            "description": "Not found",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error404_NG_PIS"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error405_NG_PIS_CANC"
            }
          },
          "406": {
            "description": "Not Acceptable",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          }
        },
        "security": [
          {},
          {
            "BearerAuthOAuth": []
          }
        ],
        "summary": "Payment Cancellation Request",
        "tags": [
          "Payment Initiation Service (PIS)"
        ]
      },
      "get": {
        "description": "Returns the content of a payment object",
        "operationId": "getPaymentInformation",
        "parameters": [
          {
            "description": "Payment service:\n\nPossible values are:\n* payments\n* bulk-payments\n* periodic-payments\n",
            "enum": [
              "payments",
              "bulk-payments",
              "periodic-payments"
            ],
            "in": "path",
            "name": "payment-service",
            "required": true,
            "type": "string"
          },
          {
            "description": "The addressed payment product endpoint, e.g. for SEPA Credit Transfers (SCT).\nThe ASPSP will publish which of the payment products/endpoints will be supported.\n\nThe following payment products are supported:\n  - sepa-credit-transfers\n  - instant-sepa-credit-transfers\n  - target-2-payments\n  - cross-border-credit-transfers\n  - pain.001-sepa-credit-transfers\n  - pain.001-instant-sepa-credit-transfers\n  - pain.001-target-2-payments\n  - pain.001-cross-border-credit-transfers\n\n**Remark:** For all SEPA Credit Transfer based endpoints which accept XML encoding, \nthe XML pain.001 schemes provided by EPC are supported by the ASPSP as a minimum for the body content. \nFurther XML schemes might be supported by some communities.\n\n**Remark:** For cross-border and TARGET-2 payments only community wide pain.001 schemes do exist. \nThere are plenty of country specificic scheme variants.\n",
            "enum": [
              "sepa-credit-transfers",
              "instant-sepa-credit-transfers",
              "target-2-payments",
              "cross-border-credit-transfers",
              "pain.001-sepa-credit-transfers",
              "pain.001-instant-sepa-credit-transfers",
              "pain.001-target-2-payments",
              "pain.001-cross-border-credit-transfers"
            ],
            "in": "path",
            "name": "payment-product",
            "required": true,
            "type": "string"
          },
          {
            "description": "Resource identification of the generated payment initiation resource.",
            "in": "path",
            "name": "paymentId",
            "required": true,
            "type": "string"
          },
          {
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "format": "uuid",
            "in": "header",
            "name": "X-Request-ID",
            "required": true,
            "type": "string",
            "x-example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721"
          },
          {
            "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request.",
            "in": "header",
            "name": "Digest",
            "required": false,
            "type": "string",
            "x-example": "SHA-256=hl1/Eps8BEQW58FJhDApwJXjGY4nr1ArGDHIT25vq6A="
          },
          {
            "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.\n",
            "in": "header",
            "name": "Signature",
            "required": false,
            "type": "string",
            "x-example": "keyId=\"SN=9FA1,CA=CN=D-TRUST%20CA%202-1%202015,O=D-Trust%20GmbH,C=DE\",algorithm=\"rsa-sha256\", headers=\"Digest X-Request-ID PSU-ID TPP-Redirect-URI Date\", signature=\"Base64(RSA-SHA256(signing string))\"\n"
          },
          {
            "description": "The certificate used for signing the request, in base64 encoding. \nMust be contained if a signature is contained.\n",
            "format": "byte",
            "in": "header",
            "name": "TPP-Signature-Certificate",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Address header field consists of the corresponding http request IP Address field between PSU and TPP.\n",
            "format": "ipv4",
            "in": "header",
            "name": "PSU-IP-Address",
            "required": false,
            "type": "string",
            "x-example": "192.168.8.78"
          },
          {
            "description": "The forwarded IP Port header field consists of the corresponding HTTP request IP Port field between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-IP-Port",
            "required": false,
            "type": "string",
            "x-example": "1234"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept-Charset",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept-Encoding",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded Agent header field of the HTTP request between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-User-Agent",
            "required": false,
            "type": "string"
          },
          {
            "description": "HTTP method used at the PSU ? TPP interface, if available.\nValid values are:\n* GET\n* POST\n* PUT\n* PATCH\n* DELETE\n",
            "enum": [
              "GET",
              "POST",
              "PUT",
              "PATCH",
              "DELETE"
            ],
            "in": "header",
            "name": "PSU-Http-Method",
            "required": false,
            "type": "string"
          },
          {
            "description": "UUID (Universally Unique Identifier) for a device, which is used by the PSU, if available.\nUUID identifies either a device or a device dependant application installation.\nIn case of an installation identification this ID need to be unaltered until removal from device.\n",
            "format": "uuid",
            "in": "header",
            "name": "PSU-Device-ID",
            "required": false,
            "type": "string",
            "x-example": "99435c7e-ad88-49ec-a2ad-99ddcb1f5555"
          },
          {
            "description": "The forwarded Geo Location of the corresponding http request between PSU and TPP if available.\n",
            "in": "header",
            "name": "PSU-Geo-Location",
            "pattern": "(GEO:)[0-9]{1,3}\\.[-][0-9]{6}\\,[-][0-9]{1,3}\\.[0-9]{6}",
            "required": false,
            "type": "string",
            "x-example": "GEO:52.506931,13.144558"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "oneOf": [
                {
                  "$ref": "#/definitions/paymentInitiationSctWithStatusResponse"
                },
                {
                  "$ref": "#/definitions/paymentInitiationSctInstWithStatusResponse"
                },
                {
                  "$ref": "#/definitions/paymentInitiationTarget2WithStatusResponse"
                },
                {
                  "$ref": "#/definitions/paymentInitiationCrossBorderWithStatusResponse"
                },
                {
                  "$ref": "#/definitions/periodicPaymentInitiationSctWithStatusResponse"
                },
                {
                  "$ref": "#/definitions/periodicPaymentInitiationSctInstWithStatusResponse"
                },
                {
                  "$ref": "#/definitions/periodicPaymentInitiationTarget2WithStatusResponse"
                },
                {
                  "$ref": "#/definitions/periodicPaymentInitiationCrossBorderWithStatusResponse"
                },
                {
                  "$ref": "#/definitions/bulkPaymentInitiationSctWithStatusResponse"
                },
                {
                  "$ref": "#/definitions/bulkPaymentInitiationSctInstWithStatusResponse"
                },
                {
                  "$ref": "#/definitions/bulkPaymentInitiationTarget2WithStatusResponse"
                },
                {
                  "$ref": "#/definitions/bulkPaymentInitiationCrossBorderWithStatusResponse"
                }
              ]
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error400_NG_PIS"
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error401_NG_PIS"
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error403_NG_PIS"
            }
          },
          "404": {
            "description": "Not found",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error404_NG_PIS"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error405_NG_PIS"
            }
          },
          "406": {
            "description": "Not Acceptable",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          }
        },
        "security": [
          {},
          {
            "BearerAuthOAuth": []
          }
        ],
        "summary": "Get Payment Information",
        "tags": [
          "Payment Initiation Service (PIS)"
        ]
      }
    },
    "/v1/{payment-service}/{payment-product}/{paymentId}/authorisations": {
      "get": {
        "description": "Read a list of all authorisation subresources IDs which have been created.\n\nThis function returns an array of hyperlinks to all generated authorisation sub-resources.\n",
        "operationId": "getPaymentInitiationAuthorisation",
        "parameters": [
          {
            "description": "Payment service:\n\nPossible values are:\n* payments\n* bulk-payments\n* periodic-payments\n",
            "enum": [
              "payments",
              "bulk-payments",
              "periodic-payments"
            ],
            "in": "path",
            "name": "payment-service",
            "required": true,
            "type": "string"
          },
          {
            "description": "The addressed payment product endpoint, e.g. for SEPA Credit Transfers (SCT).\nThe ASPSP will publish which of the payment products/endpoints will be supported.\n\nThe following payment products are supported:\n  - sepa-credit-transfers\n  - instant-sepa-credit-transfers\n  - target-2-payments\n  - cross-border-credit-transfers\n  - pain.001-sepa-credit-transfers\n  - pain.001-instant-sepa-credit-transfers\n  - pain.001-target-2-payments\n  - pain.001-cross-border-credit-transfers\n\n**Remark:** For all SEPA Credit Transfer based endpoints which accept XML encoding, \nthe XML pain.001 schemes provided by EPC are supported by the ASPSP as a minimum for the body content. \nFurther XML schemes might be supported by some communities.\n\n**Remark:** For cross-border and TARGET-2 payments only community wide pain.001 schemes do exist. \nThere are plenty of country specificic scheme variants.\n",
            "enum": [
              "sepa-credit-transfers",
              "instant-sepa-credit-transfers",
              "target-2-payments",
              "cross-border-credit-transfers",
              "pain.001-sepa-credit-transfers",
              "pain.001-instant-sepa-credit-transfers",
              "pain.001-target-2-payments",
              "pain.001-cross-border-credit-transfers"
            ],
            "in": "path",
            "name": "payment-product",
            "required": true,
            "type": "string"
          },
          {
            "description": "Resource identification of the generated payment initiation resource.",
            "in": "path",
            "name": "paymentId",
            "required": true,
            "type": "string"
          },
          {
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "format": "uuid",
            "in": "header",
            "name": "X-Request-ID",
            "required": true,
            "type": "string",
            "x-example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721"
          },
          {
            "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request.",
            "in": "header",
            "name": "Digest",
            "required": false,
            "type": "string",
            "x-example": "SHA-256=hl1/Eps8BEQW58FJhDApwJXjGY4nr1ArGDHIT25vq6A="
          },
          {
            "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.\n",
            "in": "header",
            "name": "Signature",
            "required": false,
            "type": "string",
            "x-example": "keyId=\"SN=9FA1,CA=CN=D-TRUST%20CA%202-1%202015,O=D-Trust%20GmbH,C=DE\",algorithm=\"rsa-sha256\", headers=\"Digest X-Request-ID PSU-ID TPP-Redirect-URI Date\", signature=\"Base64(RSA-SHA256(signing string))\"\n"
          },
          {
            "description": "The certificate used for signing the request, in base64 encoding. \nMust be contained if a signature is contained.\n",
            "format": "byte",
            "in": "header",
            "name": "TPP-Signature-Certificate",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Address header field consists of the corresponding http request IP Address field between PSU and TPP.\n",
            "format": "ipv4",
            "in": "header",
            "name": "PSU-IP-Address",
            "required": false,
            "type": "string",
            "x-example": "192.168.8.78"
          },
          {
            "description": "The forwarded IP Port header field consists of the corresponding HTTP request IP Port field between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-IP-Port",
            "required": false,
            "type": "string",
            "x-example": "1234"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept-Charset",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept-Encoding",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded Agent header field of the HTTP request between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-User-Agent",
            "required": false,
            "type": "string"
          },
          {
            "description": "HTTP method used at the PSU ? TPP interface, if available.\nValid values are:\n* GET\n* POST\n* PUT\n* PATCH\n* DELETE\n",
            "enum": [
              "GET",
              "POST",
              "PUT",
              "PATCH",
              "DELETE"
            ],
            "in": "header",
            "name": "PSU-Http-Method",
            "required": false,
            "type": "string"
          },
          {
            "description": "UUID (Universally Unique Identifier) for a device, which is used by the PSU, if available.\nUUID identifies either a device or a device dependant application installation.\nIn case of an installation identification this ID need to be unaltered until removal from device.\n",
            "format": "uuid",
            "in": "header",
            "name": "PSU-Device-ID",
            "required": false,
            "type": "string",
            "x-example": "99435c7e-ad88-49ec-a2ad-99ddcb1f5555"
          },
          {
            "description": "The forwarded Geo Location of the corresponding http request between PSU and TPP if available.\n",
            "in": "header",
            "name": "PSU-Geo-Location",
            "pattern": "(GEO:)[0-9]{1,3}\\.[-][0-9]{6}\\,[-][0-9]{1,3}\\.[0-9]{6}",
            "required": false,
            "type": "string",
            "x-example": "GEO:52.506931,13.144558"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/authorisations"
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error400_NG_PIS"
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error401_NG_PIS"
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error403_NG_PIS"
            }
          },
          "404": {
            "description": "Not found",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error404_NG_PIS"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error405_NG_PIS"
            }
          },
          "406": {
            "description": "Not Acceptable",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          }
        },
        "security": [
          {},
          {
            "BearerAuthOAuth": []
          }
        ],
        "summary": "Get Payment Initiation Authorisation Sub-Resources Request",
        "tags": [
          "Payment Initiation Service (PIS)",
          "Common Services"
        ]
      },
      "post": {
        "description": "Create an authorisation sub-resource and start the authorisation process. \nThe message might in addition transmit authentication and authorisation related data. \n\nThis method is iterated n times for a n times SCA authorisation in a \ncorporate context, each creating an own authorisation sub-endpoint for \nthe corresponding PSU authorising the transaction.\n\nThe ASPSP might make the usage of this access method unnecessary in case \nof only one SCA process needed, since the related authorisation resource \nmight be automatically created by the ASPSP after the submission of the \npayment data with the first POST payments/{payment-product} call.\n\nThe start authorisation process is a process which is needed for creating a new authorisation \nor cancellation sub-resource. \n\nThis applies in the following scenarios:\n\n  * The ASPSP has indicated with an 'startAuthorisation' hyperlink in the preceeding Payment \n    Initiation Response that an explicit start of the authorisation process is needed by the TPP. \n    The 'startAuthorisation' hyperlink can transport more information about data which needs to be \n    uploaded by using the extended forms.\n    * 'startAuthorisationWithPsuIdentfication', \n    * 'startAuthorisationWithPsuAuthentication' #TODO\n    * 'startAuthorisationWithAuthentciationMethodSelection' \n  * The related payment initiation cannot yet be executed since a multilevel SCA is mandated.\n  * The ASPSP has indicated with an 'startAuthorisation' hyperlink in the preceeding \n    Payment Cancellation Response that an explicit start of the authorisation process is needed by the TPP. \n    The 'startAuthorisation' hyperlink can transport more information about data which needs to be uploaded \n    by using the extended forms as indicated above.\n  * The related payment cancellation request cannot be applied yet since a multilevel SCA is mandate for \n    executing the cancellation.\n  * The signing basket needs to be authorised yet.\n",
        "operationId": "startPaymentAuthorisation",
        "parameters": [
          {
            "description": "Payment service:\n\nPossible values are:\n* payments\n* bulk-payments\n* periodic-payments\n",
            "enum": [
              "payments",
              "bulk-payments",
              "periodic-payments"
            ],
            "in": "path",
            "name": "payment-service",
            "required": true,
            "type": "string"
          },
          {
            "description": "The addressed payment product endpoint, e.g. for SEPA Credit Transfers (SCT).\nThe ASPSP will publish which of the payment products/endpoints will be supported.\n\nThe following payment products are supported:\n  - sepa-credit-transfers\n  - instant-sepa-credit-transfers\n  - target-2-payments\n  - cross-border-credit-transfers\n  - pain.001-sepa-credit-transfers\n  - pain.001-instant-sepa-credit-transfers\n  - pain.001-target-2-payments\n  - pain.001-cross-border-credit-transfers\n\n**Remark:** For all SEPA Credit Transfer based endpoints which accept XML encoding, \nthe XML pain.001 schemes provided by EPC are supported by the ASPSP as a minimum for the body content. \nFurther XML schemes might be supported by some communities.\n\n**Remark:** For cross-border and TARGET-2 payments only community wide pain.001 schemes do exist. \nThere are plenty of country specificic scheme variants.\n",
            "enum": [
              "sepa-credit-transfers",
              "instant-sepa-credit-transfers",
              "target-2-payments",
              "cross-border-credit-transfers",
              "pain.001-sepa-credit-transfers",
              "pain.001-instant-sepa-credit-transfers",
              "pain.001-target-2-payments",
              "pain.001-cross-border-credit-transfers"
            ],
            "in": "path",
            "name": "payment-product",
            "required": true,
            "type": "string"
          },
          {
            "description": "Resource identification of the generated payment initiation resource.",
            "in": "path",
            "name": "paymentId",
            "required": true,
            "type": "string"
          },
          {
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "format": "uuid",
            "in": "header",
            "name": "X-Request-ID",
            "required": true,
            "type": "string",
            "x-example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721"
          },
          {
            "description": "Client ID of the PSU in the ASPSP client interface. Might be mandated in the ASPSP's documentation.\nIs not contained if an OAuth2 based authentication was performed in a pre-step or an OAuth2 based SCA was performed in an preceeding\nAIS service in the same session.\n",
            "in": "header",
            "name": "PSU-ID",
            "required": false,
            "type": "string",
            "x-example": "PSU-1234"
          },
          {
            "description": "Type of the PSU-ID, needed in scenarios where PSUs have several PSU-IDs as access possibility.\n",
            "in": "header",
            "name": "PSU-ID-Type",
            "required": false,
            "type": "string"
          },
          {
            "description": "Might be mandated in the ASPSP's documentation. Only used in a corporate context.\n",
            "in": "header",
            "name": "PSU-Corporate-ID",
            "required": false,
            "type": "string"
          },
          {
            "description": "Might be mandated in the ASPSP's documentation. Only used in a corporate context.\n",
            "in": "header",
            "name": "PSU-Corporate-ID-Type",
            "required": false,
            "type": "string"
          },
          {
            "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request.",
            "in": "header",
            "name": "Digest",
            "required": false,
            "type": "string",
            "x-example": "SHA-256=hl1/Eps8BEQW58FJhDApwJXjGY4nr1ArGDHIT25vq6A="
          },
          {
            "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.\n",
            "in": "header",
            "name": "Signature",
            "required": false,
            "type": "string",
            "x-example": "keyId=\"SN=9FA1,CA=CN=D-TRUST%20CA%202-1%202015,O=D-Trust%20GmbH,C=DE\",algorithm=\"rsa-sha256\", headers=\"Digest X-Request-ID PSU-ID TPP-Redirect-URI Date\", signature=\"Base64(RSA-SHA256(signing string))\"\n"
          },
          {
            "description": "The certificate used for signing the request, in base64 encoding. \nMust be contained if a signature is contained.\n",
            "format": "byte",
            "in": "header",
            "name": "TPP-Signature-Certificate",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Address header field consists of the corresponding http request IP Address field between PSU and TPP.\n",
            "format": "ipv4",
            "in": "header",
            "name": "PSU-IP-Address",
            "required": false,
            "type": "string",
            "x-example": "192.168.8.78"
          },
          {
            "description": "The forwarded IP Port header field consists of the corresponding HTTP request IP Port field between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-IP-Port",
            "required": false,
            "type": "string",
            "x-example": "1234"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept-Charset",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept-Encoding",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded Agent header field of the HTTP request between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-User-Agent",
            "required": false,
            "type": "string"
          },
          {
            "description": "HTTP method used at the PSU ? TPP interface, if available.\nValid values are:\n* GET\n* POST\n* PUT\n* PATCH\n* DELETE\n",
            "enum": [
              "GET",
              "POST",
              "PUT",
              "PATCH",
              "DELETE"
            ],
            "in": "header",
            "name": "PSU-Http-Method",
            "required": false,
            "type": "string"
          },
          {
            "description": "UUID (Universally Unique Identifier) for a device, which is used by the PSU, if available.\nUUID identifies either a device or a device dependant application installation.\nIn case of an installation identification this ID need to be unaltered until removal from device.\n",
            "format": "uuid",
            "in": "header",
            "name": "PSU-Device-ID",
            "required": false,
            "type": "string",
            "x-example": "99435c7e-ad88-49ec-a2ad-99ddcb1f5555"
          },
          {
            "description": "The forwarded Geo Location of the corresponding http request between PSU and TPP if available.\n",
            "in": "header",
            "name": "PSU-Geo-Location",
            "pattern": "(GEO:)[0-9]{1,3}\\.[-][0-9]{6}\\,[-][0-9]{1,3}\\.[0-9]{6}",
            "required": false,
            "type": "string",
            "x-example": "GEO:52.506931,13.144558"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "ASPSP-SCA-Approach": {
                "description": "This data element must be contained, if the SCA Approach is already fixed.\nPossible values are\n  * EMBEDDED\n  * DECOUPLED\n  * REDIRECT\nThe OAuth SCA approach will be subsumed by REDIRECT.\n",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/startScaprocessResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error400_NG_PIS"
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error401_NG_PIS"
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error403_NG_PIS"
            }
          },
          "404": {
            "description": "Not found",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error404_NG_PIS"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error405_NG_PIS"
            }
          },
          "406": {
            "description": "Not Acceptable",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          }
        },
        "security": [
          {},
          {
            "BearerAuthOAuth": []
          }
        ],
        "summary": "Start the authorisation process for a payment initiation",
        "tags": [
          "Payment Initiation Service (PIS)",
          "Common Services"
        ]
      }
    },
    "/v1/{payment-service}/{payment-product}/{paymentId}/authorisations/{authorisationId}": {
      "get": {
        "description": "This method returns the SCA status of a payment initiation's authorisation sub-resource.\n",
        "operationId": "getPaymentInitiationScaStatus",
        "parameters": [
          {
            "description": "Payment service:\n\nPossible values are:\n* payments\n* bulk-payments\n* periodic-payments\n",
            "enum": [
              "payments",
              "bulk-payments",
              "periodic-payments"
            ],
            "in": "path",
            "name": "payment-service",
            "required": true,
            "type": "string"
          },
          {
            "description": "The addressed payment product endpoint, e.g. for SEPA Credit Transfers (SCT).\nThe ASPSP will publish which of the payment products/endpoints will be supported.\n\nThe following payment products are supported:\n  - sepa-credit-transfers\n  - instant-sepa-credit-transfers\n  - target-2-payments\n  - cross-border-credit-transfers\n  - pain.001-sepa-credit-transfers\n  - pain.001-instant-sepa-credit-transfers\n  - pain.001-target-2-payments\n  - pain.001-cross-border-credit-transfers\n\n**Remark:** For all SEPA Credit Transfer based endpoints which accept XML encoding, \nthe XML pain.001 schemes provided by EPC are supported by the ASPSP as a minimum for the body content. \nFurther XML schemes might be supported by some communities.\n\n**Remark:** For cross-border and TARGET-2 payments only community wide pain.001 schemes do exist. \nThere are plenty of country specificic scheme variants.\n",
            "enum": [
              "sepa-credit-transfers",
              "instant-sepa-credit-transfers",
              "target-2-payments",
              "cross-border-credit-transfers",
              "pain.001-sepa-credit-transfers",
              "pain.001-instant-sepa-credit-transfers",
              "pain.001-target-2-payments",
              "pain.001-cross-border-credit-transfers"
            ],
            "in": "path",
            "name": "payment-product",
            "required": true,
            "type": "string"
          },
          {
            "description": "Resource identification of the generated payment initiation resource.",
            "in": "path",
            "name": "paymentId",
            "required": true,
            "type": "string"
          },
          {
            "description": "Resource identification of the related SCA.",
            "in": "path",
            "name": "authorisationId",
            "required": true,
            "type": "string"
          },
          {
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "format": "uuid",
            "in": "header",
            "name": "X-Request-ID",
            "required": true,
            "type": "string",
            "x-example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721"
          },
          {
            "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request.",
            "in": "header",
            "name": "Digest",
            "required": false,
            "type": "string",
            "x-example": "SHA-256=hl1/Eps8BEQW58FJhDApwJXjGY4nr1ArGDHIT25vq6A="
          },
          {
            "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.\n",
            "in": "header",
            "name": "Signature",
            "required": false,
            "type": "string",
            "x-example": "keyId=\"SN=9FA1,CA=CN=D-TRUST%20CA%202-1%202015,O=D-Trust%20GmbH,C=DE\",algorithm=\"rsa-sha256\", headers=\"Digest X-Request-ID PSU-ID TPP-Redirect-URI Date\", signature=\"Base64(RSA-SHA256(signing string))\"\n"
          },
          {
            "description": "The certificate used for signing the request, in base64 encoding. \nMust be contained if a signature is contained.\n",
            "format": "byte",
            "in": "header",
            "name": "TPP-Signature-Certificate",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Address header field consists of the corresponding http request IP Address field between PSU and TPP.\n",
            "format": "ipv4",
            "in": "header",
            "name": "PSU-IP-Address",
            "required": false,
            "type": "string",
            "x-example": "192.168.8.78"
          },
          {
            "description": "The forwarded IP Port header field consists of the corresponding HTTP request IP Port field between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-IP-Port",
            "required": false,
            "type": "string",
            "x-example": "1234"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept-Charset",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept-Encoding",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded Agent header field of the HTTP request between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-User-Agent",
            "required": false,
            "type": "string"
          },
          {
            "description": "HTTP method used at the PSU ? TPP interface, if available.\nValid values are:\n* GET\n* POST\n* PUT\n* PATCH\n* DELETE\n",
            "enum": [
              "GET",
              "POST",
              "PUT",
              "PATCH",
              "DELETE"
            ],
            "in": "header",
            "name": "PSU-Http-Method",
            "required": false,
            "type": "string"
          },
          {
            "description": "UUID (Universally Unique Identifier) for a device, which is used by the PSU, if available.\nUUID identifies either a device or a device dependant application installation.\nIn case of an installation identification this ID need to be unaltered until removal from device.\n",
            "format": "uuid",
            "in": "header",
            "name": "PSU-Device-ID",
            "required": false,
            "type": "string",
            "x-example": "99435c7e-ad88-49ec-a2ad-99ddcb1f5555"
          },
          {
            "description": "The forwarded Geo Location of the corresponding http request between PSU and TPP if available.\n",
            "in": "header",
            "name": "PSU-Geo-Location",
            "pattern": "(GEO:)[0-9]{1,3}\\.[-][0-9]{6}\\,[-][0-9]{1,3}\\.[0-9]{6}",
            "required": false,
            "type": "string",
            "x-example": "GEO:52.506931,13.144558"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/scaStatusResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error400_NG_PIS"
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error401_NG_PIS"
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error403_NG_PIS"
            }
          },
          "404": {
            "description": "Not found",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error404_NG_PIS"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error405_NG_PIS"
            }
          },
          "406": {
            "description": "Not Acceptable",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          }
        },
        "security": [
          {},
          {
            "BearerAuthOAuth": []
          }
        ],
        "summary": "Read the SCA Status of the payment authorisation",
        "tags": [
          "Payment Initiation Service (PIS)",
          "Common Services"
        ]
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "This methods updates PSU data on the authorisation resource if needed. \nIt may authorise a payment within the Embedded SCA Approach where needed.\n\nIndependently from the SCA Approach it supports e.g. the selection of \nthe authentication method and a non-SCA PSU authentication.\n\nThere are several possible Update PSU Data requests in the context of payment initiation services needed, \nwhich depends on the SCA approach:\n\n* Redirect SCA Approach:\n  A specific Update PSU Data Request is applicable for \n    * the selection of authentication methods, before choosing the actual SCA approach.\n* Decoupled SCA Approach:\n  A specific Update PSU Data Request is only applicable for\n  * adding the PSU Identification, if not provided yet in the Payment Initiation Request or the Account Information Consent Request, or if no OAuth2 access token is used, or\n  * the selection of authentication methods.\n* Embedded SCA Approach: \n  The Update PSU Data Request might be used \n  * to add credentials as a first factor authentication data of the PSU and\n  * to select the authentication method and\n  * transaction authorisation.\n\nThe SCA Approach might depend on the chosen SCA method. \nFor that reason, the following possible Update PSU Data request can apply to all SCA approaches:\n\n* Select an SCA method in case of several SCA methods are available for the customer.\n\nThere are the following request types on this access path:\n  * Update PSU Identification\n  * Update PSU Authentication\n  * Select PSU Autorization Method \n    WARNING: This method need a reduced header, \n    therefore many optional elements are not present. \n    Maybe in a later version the access path will change.\n  * Transaction Authorisation\n    WARNING: This method need a reduced header, \n    therefore many optional elements are not present. \n    Maybe in a later version the access path will change.\n",
        "operationId": "updatePaymentPsuData",
        "parameters": [
          {
            "description": "Payment service:\n\nPossible values are:\n* payments\n* bulk-payments\n* periodic-payments\n",
            "enum": [
              "payments",
              "bulk-payments",
              "periodic-payments"
            ],
            "in": "path",
            "name": "payment-service",
            "required": true,
            "type": "string"
          },
          {
            "description": "The addressed payment product endpoint, e.g. for SEPA Credit Transfers (SCT).\nThe ASPSP will publish which of the payment products/endpoints will be supported.\n\nThe following payment products are supported:\n  - sepa-credit-transfers\n  - instant-sepa-credit-transfers\n  - target-2-payments\n  - cross-border-credit-transfers\n  - pain.001-sepa-credit-transfers\n  - pain.001-instant-sepa-credit-transfers\n  - pain.001-target-2-payments\n  - pain.001-cross-border-credit-transfers\n\n**Remark:** For all SEPA Credit Transfer based endpoints which accept XML encoding, \nthe XML pain.001 schemes provided by EPC are supported by the ASPSP as a minimum for the body content. \nFurther XML schemes might be supported by some communities.\n\n**Remark:** For cross-border and TARGET-2 payments only community wide pain.001 schemes do exist. \nThere are plenty of country specificic scheme variants.\n",
            "enum": [
              "sepa-credit-transfers",
              "instant-sepa-credit-transfers",
              "target-2-payments",
              "cross-border-credit-transfers",
              "pain.001-sepa-credit-transfers",
              "pain.001-instant-sepa-credit-transfers",
              "pain.001-target-2-payments",
              "pain.001-cross-border-credit-transfers"
            ],
            "in": "path",
            "name": "payment-product",
            "required": true,
            "type": "string"
          },
          {
            "description": "Resource identification of the generated payment initiation resource.",
            "in": "path",
            "name": "paymentId",
            "required": true,
            "type": "string"
          },
          {
            "description": "Resource identification of the related SCA.",
            "in": "path",
            "name": "authorisationId",
            "required": true,
            "type": "string"
          },
          {
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "format": "uuid",
            "in": "header",
            "name": "X-Request-ID",
            "required": true,
            "type": "string",
            "x-example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721"
          },
          {
            "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request.",
            "in": "header",
            "name": "Digest",
            "required": false,
            "type": "string",
            "x-example": "SHA-256=hl1/Eps8BEQW58FJhDApwJXjGY4nr1ArGDHIT25vq6A="
          },
          {
            "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.\n",
            "in": "header",
            "name": "Signature",
            "required": false,
            "type": "string",
            "x-example": "keyId=\"SN=9FA1,CA=CN=D-TRUST%20CA%202-1%202015,O=D-Trust%20GmbH,C=DE\",algorithm=\"rsa-sha256\", headers=\"Digest X-Request-ID PSU-ID TPP-Redirect-URI Date\", signature=\"Base64(RSA-SHA256(signing string))\"\n"
          },
          {
            "description": "The certificate used for signing the request, in base64 encoding. \nMust be contained if a signature is contained.\n",
            "format": "byte",
            "in": "header",
            "name": "TPP-Signature-Certificate",
            "required": false,
            "type": "string"
          },
          {
            "description": "Client ID of the PSU in the ASPSP client interface. Might be mandated in the ASPSP's documentation.\nIs not contained if an OAuth2 based authentication was performed in a pre-step or an OAuth2 based SCA was performed in an preceeding\nAIS service in the same session.\n",
            "in": "header",
            "name": "PSU-ID",
            "required": false,
            "type": "string",
            "x-example": "PSU-1234"
          },
          {
            "description": "Type of the PSU-ID, needed in scenarios where PSUs have several PSU-IDs as access possibility.\n",
            "in": "header",
            "name": "PSU-ID-Type",
            "required": false,
            "type": "string"
          },
          {
            "description": "Might be mandated in the ASPSP's documentation. Only used in a corporate context.\n",
            "in": "header",
            "name": "PSU-Corporate-ID",
            "required": false,
            "type": "string"
          },
          {
            "description": "Might be mandated in the ASPSP's documentation. Only used in a corporate context.\n",
            "in": "header",
            "name": "PSU-Corporate-ID-Type",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Address header field consists of the corresponding http request IP Address field between PSU and TPP.\n",
            "format": "ipv4",
            "in": "header",
            "name": "PSU-IP-Address",
            "required": false,
            "type": "string",
            "x-example": "192.168.8.78"
          },
          {
            "description": "The forwarded IP Port header field consists of the corresponding HTTP request IP Port field between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-IP-Port",
            "required": false,
            "type": "string",
            "x-example": "1234"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept-Charset",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept-Encoding",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded Agent header field of the HTTP request between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-User-Agent",
            "required": false,
            "type": "string"
          },
          {
            "description": "HTTP method used at the PSU ? TPP interface, if available.\nValid values are:\n* GET\n* POST\n* PUT\n* PATCH\n* DELETE\n",
            "enum": [
              "GET",
              "POST",
              "PUT",
              "PATCH",
              "DELETE"
            ],
            "in": "header",
            "name": "PSU-Http-Method",
            "required": false,
            "type": "string"
          },
          {
            "description": "UUID (Universally Unique Identifier) for a device, which is used by the PSU, if available.\nUUID identifies either a device or a device dependant application installation.\nIn case of an installation identification this ID need to be unaltered until removal from device.\n",
            "format": "uuid",
            "in": "header",
            "name": "PSU-Device-ID",
            "required": false,
            "type": "string",
            "x-example": "99435c7e-ad88-49ec-a2ad-99ddcb1f5555"
          },
          {
            "description": "The forwarded Geo Location of the corresponding http request between PSU and TPP if available.\n",
            "in": "header",
            "name": "PSU-Geo-Location",
            "pattern": "(GEO:)[0-9]{1,3}\\.[-][0-9]{6}\\,[-][0-9]{1,3}\\.[0-9]{6}",
            "required": false,
            "type": "string",
            "x-example": "GEO:52.506931,13.144558"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "oneOf": [
                {},
                {
                  "$ref": "#/definitions/updatePsuAuthentication"
                },
                {
                  "$ref": "#/definitions/selectPsuAuthenticationMethod"
                },
                {
                  "$ref": "#/definitions/transactionAuthorisation"
                }
              ]
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "ASPSP-SCA-Approach": {
                "description": "This data element must be contained, if the SCA Approach is already fixed.\nPossible values are\n  * EMBEDDED\n  * DECOUPLED\n  * REDIRECT\nThe OAuth SCA approach will be subsumed by REDIRECT.\n",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "oneOf": [
                {
                  "$ref": "#/definitions/updatePsuIdenticationResponse"
                },
                {
                  "$ref": "#/definitions/updatePsuAuthenticationResponse"
                },
                {
                  "$ref": "#/definitions/selectPsuAuthenticationMethodResponse"
                },
                {
                  "$ref": "#/definitions/scaStatusResponse"
                }
              ]
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error400_NG_PIS"
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error401_NG_PIS"
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error403_NG_PIS"
            }
          },
          "404": {
            "description": "Not found",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error404_NG_PIS"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error405_NG_PIS"
            }
          },
          "406": {
            "description": "Not Acceptable",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          }
        },
        "security": [
          {},
          {
            "BearerAuthOAuth": []
          }
        ],
        "summary": "Update PSU data for payment initiation",
        "tags": [
          "Payment Initiation Service (PIS)",
          "Common Services"
        ]
      }
    },
    "/v1/{payment-service}/{payment-product}/{paymentId}/cancellation-authorisations": {
      "get": {
        "description": "Retrieve a list of all created cancellation authorisation sub-resources.\n",
        "operationId": "getPaymentInitiationCancellationAuthorisationInformation",
        "parameters": [
          {
            "description": "Payment service:\n\nPossible values are:\n* payments\n* bulk-payments\n* periodic-payments\n",
            "enum": [
              "payments",
              "bulk-payments",
              "periodic-payments"
            ],
            "in": "path",
            "name": "payment-service",
            "required": true,
            "type": "string"
          },
          {
            "description": "The addressed payment product endpoint, e.g. for SEPA Credit Transfers (SCT).\nThe ASPSP will publish which of the payment products/endpoints will be supported.\n\nThe following payment products are supported:\n  - sepa-credit-transfers\n  - instant-sepa-credit-transfers\n  - target-2-payments\n  - cross-border-credit-transfers\n  - pain.001-sepa-credit-transfers\n  - pain.001-instant-sepa-credit-transfers\n  - pain.001-target-2-payments\n  - pain.001-cross-border-credit-transfers\n\n**Remark:** For all SEPA Credit Transfer based endpoints which accept XML encoding, \nthe XML pain.001 schemes provided by EPC are supported by the ASPSP as a minimum for the body content. \nFurther XML schemes might be supported by some communities.\n\n**Remark:** For cross-border and TARGET-2 payments only community wide pain.001 schemes do exist. \nThere are plenty of country specificic scheme variants.\n",
            "enum": [
              "sepa-credit-transfers",
              "instant-sepa-credit-transfers",
              "target-2-payments",
              "cross-border-credit-transfers",
              "pain.001-sepa-credit-transfers",
              "pain.001-instant-sepa-credit-transfers",
              "pain.001-target-2-payments",
              "pain.001-cross-border-credit-transfers"
            ],
            "in": "path",
            "name": "payment-product",
            "required": true,
            "type": "string"
          },
          {
            "description": "Resource identification of the generated payment initiation resource.",
            "in": "path",
            "name": "paymentId",
            "required": true,
            "type": "string"
          },
          {
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "format": "uuid",
            "in": "header",
            "name": "X-Request-ID",
            "required": true,
            "type": "string",
            "x-example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721"
          },
          {
            "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request.",
            "in": "header",
            "name": "Digest",
            "required": false,
            "type": "string",
            "x-example": "SHA-256=hl1/Eps8BEQW58FJhDApwJXjGY4nr1ArGDHIT25vq6A="
          },
          {
            "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.\n",
            "in": "header",
            "name": "Signature",
            "required": false,
            "type": "string",
            "x-example": "keyId=\"SN=9FA1,CA=CN=D-TRUST%20CA%202-1%202015,O=D-Trust%20GmbH,C=DE\",algorithm=\"rsa-sha256\", headers=\"Digest X-Request-ID PSU-ID TPP-Redirect-URI Date\", signature=\"Base64(RSA-SHA256(signing string))\"\n"
          },
          {
            "description": "The certificate used for signing the request, in base64 encoding. \nMust be contained if a signature is contained.\n",
            "format": "byte",
            "in": "header",
            "name": "TPP-Signature-Certificate",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Address header field consists of the corresponding http request IP Address field between PSU and TPP.\n",
            "format": "ipv4",
            "in": "header",
            "name": "PSU-IP-Address",
            "required": false,
            "type": "string",
            "x-example": "192.168.8.78"
          },
          {
            "description": "The forwarded IP Port header field consists of the corresponding HTTP request IP Port field between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-IP-Port",
            "required": false,
            "type": "string",
            "x-example": "1234"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept-Charset",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept-Encoding",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded Agent header field of the HTTP request between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-User-Agent",
            "required": false,
            "type": "string"
          },
          {
            "description": "HTTP method used at the PSU ? TPP interface, if available.\nValid values are:\n* GET\n* POST\n* PUT\n* PATCH\n* DELETE\n",
            "enum": [
              "GET",
              "POST",
              "PUT",
              "PATCH",
              "DELETE"
            ],
            "in": "header",
            "name": "PSU-Http-Method",
            "required": false,
            "type": "string"
          },
          {
            "description": "UUID (Universally Unique Identifier) for a device, which is used by the PSU, if available.\nUUID identifies either a device or a device dependant application installation.\nIn case of an installation identification this ID need to be unaltered until removal from device.\n",
            "format": "uuid",
            "in": "header",
            "name": "PSU-Device-ID",
            "required": false,
            "type": "string",
            "x-example": "99435c7e-ad88-49ec-a2ad-99ddcb1f5555"
          },
          {
            "description": "The forwarded Geo Location of the corresponding http request between PSU and TPP if available.\n",
            "in": "header",
            "name": "PSU-Geo-Location",
            "pattern": "(GEO:)[0-9]{1,3}\\.[-][0-9]{6}\\,[-][0-9]{1,3}\\.[0-9]{6}",
            "required": false,
            "type": "string",
            "x-example": "GEO:52.506931,13.144558"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/cancellationList"
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error400_NG_PIS"
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error401_NG_PIS"
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error403_NG_PIS"
            }
          },
          "404": {
            "description": "Not found",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error404_NG_PIS"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error405_NG_PIS"
            }
          },
          "406": {
            "description": "Not Acceptable",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          }
        },
        "security": [
          {},
          {
            "BearerAuthOAuth": []
          }
        ],
        "summary": "Will deliver an array of resource identifications to all generated cancellation authorisation sub-resources.",
        "tags": [
          "Payment Initiation Service (PIS)"
        ]
      },
      "post": {
        "description": "Creates an authorisation sub-resource and start the authorisation process of the cancellation of the addressed payment. \nThe message might in addition transmit authentication and authorisation related data.\n\nThis method is iterated n times for a n times SCA authorisation in a \ncorporate context, each creating an own authorisation sub-endpoint for \nthe corresponding PSU authorising the cancellation-authorisation.\n\nThe ASPSP might make the usage of this access method unnecessary in case \nof only one SCA process needed, since the related authorisation resource \nmight be automatically created by the ASPSP after the submission of the \npayment data with the first POST payments/{payment-product} call.\n\nThe start authorisation process is a process which is needed for creating a new authorisation \nor cancellation sub-resource. \n\nThis applies in the following scenarios:\n\n  * The ASPSP has indicated with an 'startAuthorisation' hyperlink in the preceeding Payment \n    Initiation Response that an explicit start of the authorisation process is needed by the TPP. \n    The 'startAuthorisation' hyperlink can transport more information about data which needs to be \n    uploaded by using the extended forms.\n    * 'startAuthorisationWithPsuIdentfication', \n    * 'startAuthorisationWithPsuAuthentication' #TODO\n    * 'startAuthorisationWithAuthentciationMethodSelection' \n  * The related payment initiation cannot yet be executed since a multilevel SCA is mandated.\n  * The ASPSP has indicated with an 'startAuthorisation' hyperlink in the preceeding \n    Payment Cancellation Response that an explicit start of the authorisation process is needed by the TPP. \n    The 'startAuthorisation' hyperlink can transport more information about data which needs to be uploaded \n    by using the extended forms as indicated above.\n  * The related payment cancellation request cannot be applied yet since a multilevel SCA is mandate for \n    executing the cancellation.\n  * The signing basket needs to be authorised yet.\n",
        "operationId": "startPaymentInitiationCancellationAuthorisation",
        "parameters": [
          {
            "description": "Payment service:\n\nPossible values are:\n* payments\n* bulk-payments\n* periodic-payments\n",
            "enum": [
              "payments",
              "bulk-payments",
              "periodic-payments"
            ],
            "in": "path",
            "name": "payment-service",
            "required": true,
            "type": "string"
          },
          {
            "description": "The addressed payment product endpoint, e.g. for SEPA Credit Transfers (SCT).\nThe ASPSP will publish which of the payment products/endpoints will be supported.\n\nThe following payment products are supported:\n  - sepa-credit-transfers\n  - instant-sepa-credit-transfers\n  - target-2-payments\n  - cross-border-credit-transfers\n  - pain.001-sepa-credit-transfers\n  - pain.001-instant-sepa-credit-transfers\n  - pain.001-target-2-payments\n  - pain.001-cross-border-credit-transfers\n\n**Remark:** For all SEPA Credit Transfer based endpoints which accept XML encoding, \nthe XML pain.001 schemes provided by EPC are supported by the ASPSP as a minimum for the body content. \nFurther XML schemes might be supported by some communities.\n\n**Remark:** For cross-border and TARGET-2 payments only community wide pain.001 schemes do exist. \nThere are plenty of country specificic scheme variants.\n",
            "enum": [
              "sepa-credit-transfers",
              "instant-sepa-credit-transfers",
              "target-2-payments",
              "cross-border-credit-transfers",
              "pain.001-sepa-credit-transfers",
              "pain.001-instant-sepa-credit-transfers",
              "pain.001-target-2-payments",
              "pain.001-cross-border-credit-transfers"
            ],
            "in": "path",
            "name": "payment-product",
            "required": true,
            "type": "string"
          },
          {
            "description": "Resource identification of the generated payment initiation resource.",
            "in": "path",
            "name": "paymentId",
            "required": true,
            "type": "string"
          },
          {
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "format": "uuid",
            "in": "header",
            "name": "X-Request-ID",
            "required": true,
            "type": "string",
            "x-example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721"
          },
          {
            "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request.",
            "in": "header",
            "name": "Digest",
            "required": false,
            "type": "string",
            "x-example": "SHA-256=hl1/Eps8BEQW58FJhDApwJXjGY4nr1ArGDHIT25vq6A="
          },
          {
            "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.\n",
            "in": "header",
            "name": "Signature",
            "required": false,
            "type": "string",
            "x-example": "keyId=\"SN=9FA1,CA=CN=D-TRUST%20CA%202-1%202015,O=D-Trust%20GmbH,C=DE\",algorithm=\"rsa-sha256\", headers=\"Digest X-Request-ID PSU-ID TPP-Redirect-URI Date\", signature=\"Base64(RSA-SHA256(signing string))\"\n"
          },
          {
            "description": "The certificate used for signing the request, in base64 encoding. \nMust be contained if a signature is contained.\n",
            "format": "byte",
            "in": "header",
            "name": "TPP-Signature-Certificate",
            "required": false,
            "type": "string"
          },
          {
            "description": "Client ID of the PSU in the ASPSP client interface. Might be mandated in the ASPSP's documentation.\nIs not contained if an OAuth2 based authentication was performed in a pre-step or an OAuth2 based SCA was performed in an preceeding\nAIS service in the same session.\n",
            "in": "header",
            "name": "PSU-ID",
            "required": false,
            "type": "string",
            "x-example": "PSU-1234"
          },
          {
            "description": "Type of the PSU-ID, needed in scenarios where PSUs have several PSU-IDs as access possibility.\n",
            "in": "header",
            "name": "PSU-ID-Type",
            "required": false,
            "type": "string"
          },
          {
            "description": "Might be mandated in the ASPSP's documentation. Only used in a corporate context.\n",
            "in": "header",
            "name": "PSU-Corporate-ID",
            "required": false,
            "type": "string"
          },
          {
            "description": "Might be mandated in the ASPSP's documentation. Only used in a corporate context.\n",
            "in": "header",
            "name": "PSU-Corporate-ID-Type",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Address header field consists of the corresponding http request IP Address field between PSU and TPP.\n",
            "format": "ipv4",
            "in": "header",
            "name": "PSU-IP-Address",
            "required": false,
            "type": "string",
            "x-example": "192.168.8.78"
          },
          {
            "description": "The forwarded IP Port header field consists of the corresponding HTTP request IP Port field between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-IP-Port",
            "required": false,
            "type": "string",
            "x-example": "1234"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept-Charset",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept-Encoding",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded Agent header field of the HTTP request between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-User-Agent",
            "required": false,
            "type": "string"
          },
          {
            "description": "HTTP method used at the PSU ? TPP interface, if available.\nValid values are:\n* GET\n* POST\n* PUT\n* PATCH\n* DELETE\n",
            "enum": [
              "GET",
              "POST",
              "PUT",
              "PATCH",
              "DELETE"
            ],
            "in": "header",
            "name": "PSU-Http-Method",
            "required": false,
            "type": "string"
          },
          {
            "description": "UUID (Universally Unique Identifier) for a device, which is used by the PSU, if available.\nUUID identifies either a device or a device dependant application installation.\nIn case of an installation identification this ID need to be unaltered until removal from device.\n",
            "format": "uuid",
            "in": "header",
            "name": "PSU-Device-ID",
            "required": false,
            "type": "string",
            "x-example": "99435c7e-ad88-49ec-a2ad-99ddcb1f5555"
          },
          {
            "description": "The forwarded Geo Location of the corresponding http request between PSU and TPP if available.\n",
            "in": "header",
            "name": "PSU-Geo-Location",
            "pattern": "(GEO:)[0-9]{1,3}\\.[-][0-9]{6}\\,[-][0-9]{1,3}\\.[0-9]{6}",
            "required": false,
            "type": "string",
            "x-example": "GEO:52.506931,13.144558"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "ASPSP-SCA-Approach": {
                "description": "This data element must be contained, if the SCA Approach is already fixed.\nPossible values are\n  * EMBEDDED\n  * DECOUPLED\n  * REDIRECT\nThe OAuth SCA approach will be subsumed by REDIRECT.\n",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/startScaprocessResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error400_NG_PIS"
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error401_NG_PIS"
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error403_NG_PIS"
            }
          },
          "404": {
            "description": "Not found",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error404_NG_PIS"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error405_NG_PIS"
            }
          },
          "406": {
            "description": "Not Acceptable",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          }
        },
        "security": [
          {},
          {
            "BearerAuthOAuth": []
          }
        ],
        "summary": "Start the authorisation process for the cancellation of the addressed payment",
        "tags": [
          "Payment Initiation Service (PIS)",
          "Common Services"
        ]
      }
    },
    "/v1/{payment-service}/{payment-product}/{paymentId}/cancellation-authorisations/{cancellationId}": {
      "get": {
        "description": "This method returns the SCA status of a payment initiation's authorisation sub-resource.\n",
        "operationId": "getPaymentCancellationScaStatus",
        "parameters": [
          {
            "description": "Payment service:\n\nPossible values are:\n* payments\n* bulk-payments\n* periodic-payments\n",
            "enum": [
              "payments",
              "bulk-payments",
              "periodic-payments"
            ],
            "in": "path",
            "name": "payment-service",
            "required": true,
            "type": "string"
          },
          {
            "description": "The addressed payment product endpoint, e.g. for SEPA Credit Transfers (SCT).\nThe ASPSP will publish which of the payment products/endpoints will be supported.\n\nThe following payment products are supported:\n  - sepa-credit-transfers\n  - instant-sepa-credit-transfers\n  - target-2-payments\n  - cross-border-credit-transfers\n  - pain.001-sepa-credit-transfers\n  - pain.001-instant-sepa-credit-transfers\n  - pain.001-target-2-payments\n  - pain.001-cross-border-credit-transfers\n\n**Remark:** For all SEPA Credit Transfer based endpoints which accept XML encoding, \nthe XML pain.001 schemes provided by EPC are supported by the ASPSP as a minimum for the body content. \nFurther XML schemes might be supported by some communities.\n\n**Remark:** For cross-border and TARGET-2 payments only community wide pain.001 schemes do exist. \nThere are plenty of country specificic scheme variants.\n",
            "enum": [
              "sepa-credit-transfers",
              "instant-sepa-credit-transfers",
              "target-2-payments",
              "cross-border-credit-transfers",
              "pain.001-sepa-credit-transfers",
              "pain.001-instant-sepa-credit-transfers",
              "pain.001-target-2-payments",
              "pain.001-cross-border-credit-transfers"
            ],
            "in": "path",
            "name": "payment-product",
            "required": true,
            "type": "string"
          },
          {
            "description": "Resource identification of the generated payment initiation resource.",
            "in": "path",
            "name": "paymentId",
            "required": true,
            "type": "string"
          },
          {
            "description": "Identification for cancellation resource.",
            "in": "path",
            "name": "cancellationId",
            "required": true,
            "type": "string"
          },
          {
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "format": "uuid",
            "in": "header",
            "name": "X-Request-ID",
            "required": true,
            "type": "string",
            "x-example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721"
          },
          {
            "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request.",
            "in": "header",
            "name": "Digest",
            "required": false,
            "type": "string",
            "x-example": "SHA-256=hl1/Eps8BEQW58FJhDApwJXjGY4nr1ArGDHIT25vq6A="
          },
          {
            "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.\n",
            "in": "header",
            "name": "Signature",
            "required": false,
            "type": "string",
            "x-example": "keyId=\"SN=9FA1,CA=CN=D-TRUST%20CA%202-1%202015,O=D-Trust%20GmbH,C=DE\",algorithm=\"rsa-sha256\", headers=\"Digest X-Request-ID PSU-ID TPP-Redirect-URI Date\", signature=\"Base64(RSA-SHA256(signing string))\"\n"
          },
          {
            "description": "The certificate used for signing the request, in base64 encoding. \nMust be contained if a signature is contained.\n",
            "format": "byte",
            "in": "header",
            "name": "TPP-Signature-Certificate",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Address header field consists of the corresponding http request IP Address field between PSU and TPP.\n",
            "format": "ipv4",
            "in": "header",
            "name": "PSU-IP-Address",
            "required": false,
            "type": "string",
            "x-example": "192.168.8.78"
          },
          {
            "description": "The forwarded IP Port header field consists of the corresponding HTTP request IP Port field between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-IP-Port",
            "required": false,
            "type": "string",
            "x-example": "1234"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept-Charset",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept-Encoding",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded Agent header field of the HTTP request between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-User-Agent",
            "required": false,
            "type": "string"
          },
          {
            "description": "HTTP method used at the PSU ? TPP interface, if available.\nValid values are:\n* GET\n* POST\n* PUT\n* PATCH\n* DELETE\n",
            "enum": [
              "GET",
              "POST",
              "PUT",
              "PATCH",
              "DELETE"
            ],
            "in": "header",
            "name": "PSU-Http-Method",
            "required": false,
            "type": "string"
          },
          {
            "description": "UUID (Universally Unique Identifier) for a device, which is used by the PSU, if available.\nUUID identifies either a device or a device dependant application installation.\nIn case of an installation identification this ID need to be unaltered until removal from device.\n",
            "format": "uuid",
            "in": "header",
            "name": "PSU-Device-ID",
            "required": false,
            "type": "string",
            "x-example": "99435c7e-ad88-49ec-a2ad-99ddcb1f5555"
          },
          {
            "description": "The forwarded Geo Location of the corresponding http request between PSU and TPP if available.\n",
            "in": "header",
            "name": "PSU-Geo-Location",
            "pattern": "(GEO:)[0-9]{1,3}\\.[-][0-9]{6}\\,[-][0-9]{1,3}\\.[0-9]{6}",
            "required": false,
            "type": "string",
            "x-example": "GEO:52.506931,13.144558"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/scaStatusResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error400_NG_PIS"
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error401_NG_PIS"
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error403_NG_PIS"
            }
          },
          "404": {
            "description": "Not found",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error404_NG_PIS"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error405_NG_PIS"
            }
          },
          "406": {
            "description": "Not Acceptable",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          }
        },
        "security": [
          {},
          {
            "BearerAuthOAuth": []
          }
        ],
        "summary": "Read the SCA status of the payment cancellation's authorisation.",
        "tags": [
          "Payment Initiation Service (PIS)",
          "Common Services"
        ]
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "This method updates PSU data on the cancellation authorisation resource if needed. \nIt may authorise a cancellation of the payment within the Embedded SCA Approach where needed.\n\nIndependently from the SCA Approach it supports e.g. the selection of \nthe authentication method and a non-SCA PSU authentication.\n\nThis methods updates PSU data on the cancellation authorisation resource if needed. \n\nThere are several possible Update PSU Data requests in the context of a cancellation authorisation within the payment initiation services needed, \nwhich depends on the SCA approach:\n\n* Redirect SCA Approach:\n  A specific Update PSU Data Request is applicable for \n    * the selection of authentication methods, before choosing the actual SCA approach.\n* Decoupled SCA Approach:\n  A specific Update PSU Data Request is only applicable for\n  * adding the PSU Identification, if not provided yet in the Payment Initiation Request or the Account Information Consent Request, or if no OAuth2 access token is used, or\n  * the selection of authentication methods.\n* Embedded SCA Approach: \n  The Update PSU Data Request might be used \n  * to add credentials as a first factor authentication data of the PSU and\n  * to select the authentication method and\n  * transaction authorisation.\n\nThe SCA Approach might depend on the chosen SCA method. \nFor that reason, the following possible Update PSU Data request can apply to all SCA approaches:\n\n* Select an SCA method in case of several SCA methods are available for the customer.\n\nThere are the following request types on this access path:\n  * Update PSU Identification\n  * Update PSU Authentication\n  * Select PSU Autorization Method \n    WARNING: This method need a reduced header, \n    therefore many optional elements are not present. \n    Maybe in a later version the access path will change.\n  * Transaction Authorisation\n    WARNING: This method need a reduced header, \n    therefore many optional elements are not present. \n    Maybe in a later version the access path will change.\n",
        "operationId": "updatePaymentCancellationPsuData",
        "parameters": [
          {
            "description": "Payment service:\n\nPossible values are:\n* payments\n* bulk-payments\n* periodic-payments\n",
            "enum": [
              "payments",
              "bulk-payments",
              "periodic-payments"
            ],
            "in": "path",
            "name": "payment-service",
            "required": true,
            "type": "string"
          },
          {
            "description": "The addressed payment product endpoint, e.g. for SEPA Credit Transfers (SCT).\nThe ASPSP will publish which of the payment products/endpoints will be supported.\n\nThe following payment products are supported:\n  - sepa-credit-transfers\n  - instant-sepa-credit-transfers\n  - target-2-payments\n  - cross-border-credit-transfers\n  - pain.001-sepa-credit-transfers\n  - pain.001-instant-sepa-credit-transfers\n  - pain.001-target-2-payments\n  - pain.001-cross-border-credit-transfers\n\n**Remark:** For all SEPA Credit Transfer based endpoints which accept XML encoding, \nthe XML pain.001 schemes provided by EPC are supported by the ASPSP as a minimum for the body content. \nFurther XML schemes might be supported by some communities.\n\n**Remark:** For cross-border and TARGET-2 payments only community wide pain.001 schemes do exist. \nThere are plenty of country specificic scheme variants.\n",
            "enum": [
              "sepa-credit-transfers",
              "instant-sepa-credit-transfers",
              "target-2-payments",
              "cross-border-credit-transfers",
              "pain.001-sepa-credit-transfers",
              "pain.001-instant-sepa-credit-transfers",
              "pain.001-target-2-payments",
              "pain.001-cross-border-credit-transfers"
            ],
            "in": "path",
            "name": "payment-product",
            "required": true,
            "type": "string"
          },
          {
            "description": "Resource identification of the generated payment initiation resource.",
            "in": "path",
            "name": "paymentId",
            "required": true,
            "type": "string"
          },
          {
            "description": "Identification for cancellation resource.",
            "in": "path",
            "name": "cancellationId",
            "required": true,
            "type": "string"
          },
          {
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "format": "uuid",
            "in": "header",
            "name": "X-Request-ID",
            "required": true,
            "type": "string",
            "x-example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721"
          },
          {
            "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request.",
            "in": "header",
            "name": "Digest",
            "required": false,
            "type": "string",
            "x-example": "SHA-256=hl1/Eps8BEQW58FJhDApwJXjGY4nr1ArGDHIT25vq6A="
          },
          {
            "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.\n",
            "in": "header",
            "name": "Signature",
            "required": false,
            "type": "string",
            "x-example": "keyId=\"SN=9FA1,CA=CN=D-TRUST%20CA%202-1%202015,O=D-Trust%20GmbH,C=DE\",algorithm=\"rsa-sha256\", headers=\"Digest X-Request-ID PSU-ID TPP-Redirect-URI Date\", signature=\"Base64(RSA-SHA256(signing string))\"\n"
          },
          {
            "description": "The certificate used for signing the request, in base64 encoding. \nMust be contained if a signature is contained.\n",
            "format": "byte",
            "in": "header",
            "name": "TPP-Signature-Certificate",
            "required": false,
            "type": "string"
          },
          {
            "description": "Client ID of the PSU in the ASPSP client interface. Might be mandated in the ASPSP's documentation.\nIs not contained if an OAuth2 based authentication was performed in a pre-step or an OAuth2 based SCA was performed in an preceeding\nAIS service in the same session.\n",
            "in": "header",
            "name": "PSU-ID",
            "required": false,
            "type": "string",
            "x-example": "PSU-1234"
          },
          {
            "description": "Type of the PSU-ID, needed in scenarios where PSUs have several PSU-IDs as access possibility.\n",
            "in": "header",
            "name": "PSU-ID-Type",
            "required": false,
            "type": "string"
          },
          {
            "description": "Might be mandated in the ASPSP's documentation. Only used in a corporate context.\n",
            "in": "header",
            "name": "PSU-Corporate-ID",
            "required": false,
            "type": "string"
          },
          {
            "description": "Might be mandated in the ASPSP's documentation. Only used in a corporate context.\n",
            "in": "header",
            "name": "PSU-Corporate-ID-Type",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Address header field consists of the corresponding http request IP Address field between PSU and TPP.\n",
            "format": "ipv4",
            "in": "header",
            "name": "PSU-IP-Address",
            "required": false,
            "type": "string",
            "x-example": "192.168.8.78"
          },
          {
            "description": "The forwarded IP Port header field consists of the corresponding HTTP request IP Port field between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-IP-Port",
            "required": false,
            "type": "string",
            "x-example": "1234"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept-Charset",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept-Encoding",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded Agent header field of the HTTP request between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-User-Agent",
            "required": false,
            "type": "string"
          },
          {
            "description": "HTTP method used at the PSU ? TPP interface, if available.\nValid values are:\n* GET\n* POST\n* PUT\n* PATCH\n* DELETE\n",
            "enum": [
              "GET",
              "POST",
              "PUT",
              "PATCH",
              "DELETE"
            ],
            "in": "header",
            "name": "PSU-Http-Method",
            "required": false,
            "type": "string"
          },
          {
            "description": "UUID (Universally Unique Identifier) for a device, which is used by the PSU, if available.\nUUID identifies either a device or a device dependant application installation.\nIn case of an installation identification this ID need to be unaltered until removal from device.\n",
            "format": "uuid",
            "in": "header",
            "name": "PSU-Device-ID",
            "required": false,
            "type": "string",
            "x-example": "99435c7e-ad88-49ec-a2ad-99ddcb1f5555"
          },
          {
            "description": "The forwarded Geo Location of the corresponding http request between PSU and TPP if available.\n",
            "in": "header",
            "name": "PSU-Geo-Location",
            "pattern": "(GEO:)[0-9]{1,3}\\.[-][0-9]{6}\\,[-][0-9]{1,3}\\.[0-9]{6}",
            "required": false,
            "type": "string",
            "x-example": "GEO:52.506931,13.144558"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "oneOf": [
                {},
                {
                  "$ref": "#/definitions/updatePsuAuthentication"
                },
                {
                  "$ref": "#/definitions/selectPsuAuthenticationMethod"
                },
                {
                  "$ref": "#/definitions/transactionAuthorisation"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "ASPSP-SCA-Approach": {
                "description": "This data element must be contained, if the SCA Approach is already fixed.\nPossible values are\n  * EMBEDDED\n  * DECOUPLED\n  * REDIRECT\nThe OAuth SCA approach will be subsumed by REDIRECT.\n",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "oneOf": [
                {
                  "$ref": "#/definitions/updatePsuIdenticationResponse"
                },
                {
                  "$ref": "#/definitions/updatePsuAuthenticationResponse"
                },
                {
                  "$ref": "#/definitions/selectPsuAuthenticationMethodResponse"
                },
                {
                  "$ref": "#/definitions/scaStatusResponse"
                }
              ]
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error400_NG_PIS"
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error401_NG_PIS"
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error403_NG_PIS"
            }
          },
          "404": {
            "description": "Not found",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error404_NG_PIS"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error405_NG_PIS"
            }
          },
          "406": {
            "description": "Not Acceptable",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          }
        },
        "security": [
          {},
          {
            "BearerAuthOAuth": []
          }
        ],
        "summary": "Update PSU Data for payment initiation cancellation",
        "tags": [
          "Payment Initiation Service (PIS)",
          "Common Services"
        ]
      }
    },
    "/v1/{payment-service}/{payment-product}/{paymentId}/status": {
      "get": {
        "description": "Check the transaction status of a payment initiation.",
        "operationId": "getPaymentInitiationStatus",
        "parameters": [
          {
            "description": "Payment service:\n\nPossible values are:\n* payments\n* bulk-payments\n* periodic-payments\n",
            "enum": [
              "payments",
              "bulk-payments",
              "periodic-payments"
            ],
            "in": "path",
            "name": "payment-service",
            "required": true,
            "type": "string"
          },
          {
            "description": "The addressed payment product endpoint, e.g. for SEPA Credit Transfers (SCT).\nThe ASPSP will publish which of the payment products/endpoints will be supported.\n\nThe following payment products are supported:\n  - sepa-credit-transfers\n  - instant-sepa-credit-transfers\n  - target-2-payments\n  - cross-border-credit-transfers\n  - pain.001-sepa-credit-transfers\n  - pain.001-instant-sepa-credit-transfers\n  - pain.001-target-2-payments\n  - pain.001-cross-border-credit-transfers\n\n**Remark:** For all SEPA Credit Transfer based endpoints which accept XML encoding, \nthe XML pain.001 schemes provided by EPC are supported by the ASPSP as a minimum for the body content. \nFurther XML schemes might be supported by some communities.\n\n**Remark:** For cross-border and TARGET-2 payments only community wide pain.001 schemes do exist. \nThere are plenty of country specificic scheme variants.\n",
            "enum": [
              "sepa-credit-transfers",
              "instant-sepa-credit-transfers",
              "target-2-payments",
              "cross-border-credit-transfers",
              "pain.001-sepa-credit-transfers",
              "pain.001-instant-sepa-credit-transfers",
              "pain.001-target-2-payments",
              "pain.001-cross-border-credit-transfers"
            ],
            "in": "path",
            "name": "payment-product",
            "required": true,
            "type": "string"
          },
          {
            "description": "Resource identification of the generated payment initiation resource.",
            "in": "path",
            "name": "paymentId",
            "required": true,
            "type": "string"
          },
          {
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "format": "uuid",
            "in": "header",
            "name": "X-Request-ID",
            "required": true,
            "type": "string",
            "x-example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721"
          },
          {
            "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request.",
            "in": "header",
            "name": "Digest",
            "required": false,
            "type": "string",
            "x-example": "SHA-256=hl1/Eps8BEQW58FJhDApwJXjGY4nr1ArGDHIT25vq6A="
          },
          {
            "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.\n",
            "in": "header",
            "name": "Signature",
            "required": false,
            "type": "string",
            "x-example": "keyId=\"SN=9FA1,CA=CN=D-TRUST%20CA%202-1%202015,O=D-Trust%20GmbH,C=DE\",algorithm=\"rsa-sha256\", headers=\"Digest X-Request-ID PSU-ID TPP-Redirect-URI Date\", signature=\"Base64(RSA-SHA256(signing string))\"\n"
          },
          {
            "description": "The certificate used for signing the request, in base64 encoding. \nMust be contained if a signature is contained.\n",
            "format": "byte",
            "in": "header",
            "name": "TPP-Signature-Certificate",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Address header field consists of the corresponding http request IP Address field between PSU and TPP.\n",
            "format": "ipv4",
            "in": "header",
            "name": "PSU-IP-Address",
            "required": false,
            "type": "string",
            "x-example": "192.168.8.78"
          },
          {
            "description": "The forwarded IP Port header field consists of the corresponding HTTP request IP Port field between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-IP-Port",
            "required": false,
            "type": "string",
            "x-example": "1234"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept-Charset",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept-Encoding",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-Accept-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The forwarded Agent header field of the HTTP request between PSU and TPP, if available.\n",
            "in": "header",
            "name": "PSU-User-Agent",
            "required": false,
            "type": "string"
          },
          {
            "description": "HTTP method used at the PSU ? TPP interface, if available.\nValid values are:\n* GET\n* POST\n* PUT\n* PATCH\n* DELETE\n",
            "enum": [
              "GET",
              "POST",
              "PUT",
              "PATCH",
              "DELETE"
            ],
            "in": "header",
            "name": "PSU-Http-Method",
            "required": false,
            "type": "string"
          },
          {
            "description": "UUID (Universally Unique Identifier) for a device, which is used by the PSU, if available.\nUUID identifies either a device or a device dependant application installation.\nIn case of an installation identification this ID need to be unaltered until removal from device.\n",
            "format": "uuid",
            "in": "header",
            "name": "PSU-Device-ID",
            "required": false,
            "type": "string",
            "x-example": "99435c7e-ad88-49ec-a2ad-99ddcb1f5555"
          },
          {
            "description": "The forwarded Geo Location of the corresponding http request between PSU and TPP if available.\n",
            "in": "header",
            "name": "PSU-Geo-Location",
            "pattern": "(GEO:)[0-9]{1,3}\\.[-][0-9]{6}\\,[-][0-9]{1,3}\\.[0-9]{6}",
            "required": false,
            "type": "string",
            "x-example": "GEO:52.506931,13.144558"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/paymentInitiationStatusResponse-200_json"
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error400_NG_PIS"
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error401_NG_PIS"
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error403_NG_PIS"
            }
          },
          "404": {
            "description": "Not found",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error404_NG_PIS"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error405_NG_PIS"
            }
          },
          "406": {
            "description": "Not Acceptable",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Location": {
                "description": "Location of the created resource.\n",
                "format": "url",
                "required": false,
                "type": "string"
              },
              "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "format": "uuid",
                "required": true,
                "type": "string"
              }
            }
          }
        },
        "security": [
          {},
          {
            "BearerAuthOAuth": []
          }
        ],
        "summary": "Payment initiation status request",
        "tags": [
          "Payment Initiation Service (PIS)"
        ]
      }
    }
  },
  "schemes": [
    "https"
  ],
  "security": [
    {}
  ],
  "securityDefinitions": {
    "BearerAuthOAuth": {
      "description": "Bearer Token. \n\nIs contained only, if an OAuth2 based authentication was performed in a pre-step or \nan OAuth2 based SCA was performed in an preceding AIS service in the same session.\n",
      "in": "header",
      "name": "Authorization",
      "type": "apiKey"
    }
  },
  "swagger": "2.0",
  "tags": [
    {
      "description": "The Decription for Payment Initiation Service (PIS) offers the following services:\n  * Initiation and update of a payment request\n  * Status information of a payment\n",
      "name": "Payment Initiation Service (PIS)"
    },
    {
      "description": "Confirmation of Funds Service (PIIS) returns a confirmation of funds request at the ASPSP.\n",
      "name": "Confirmation of Funds Service (PIIS)"
    },
    {
      "description": "The Account Information Service (AIS) offers the following services\n  * Transaction reports for a given account or card account including balances if applicable.\n  * Balances of a given account or card account ,\n  * A list of available accounts or card account ,\n  * Account details of a given account or card account or of the list of all accessible accounts or card account  relative to a granted consent\n",
      "name": "Account Information Service (AIS)"
    },
    {
      "description": "Signing basket mathods are used for authorising several transactions with one SCA method. \n",
      "name": "Signing Baskets"
    },
    {
      "description": "Processes on starting authorisations, update PSU identification or PSU authentication data and explicit \nauthorisation of transactions by using SCA are very similar in PIS and AIS and signing baskets services. \nThe API calls supporting these processes are described in the following independently from the service/endpoint. \nFor reasons of clarity, the endpoints are defined always for the Payment Initiation Service, the Payment Cancellation, \nthe Account Information Service (Consents), and Signing Baskets separately. \nThese processes usually are used following a hyperlink of the ASPSP. \n",
      "name": "Common Services"
    }
  ],
  "x-components": {
    "examples": {
      "accountDetailsMulticurrencyAccount": {
        "description": "Account Details for a multicurrency Account",
        "value": {
          "account": {
            "_links": {
              "balances": {
                "href": "/v1/accounts/3dc3d5b3-7023-4848-9853-f5400a64e80f/balances"
              },
              "transactions": {
                "href": "/v1/accounts/3dc3d5b3-7023-4848-9853-f5400a64e80f/transactions"
              }
            },
            "cashAccountType": "CurrentAccount",
            "currency": "XXX",
            "iban": "FR7612345987650123456789014",
            "name": "Aggregation Account",
            "product": "Multicurrency Account",
            "resourceId": "3dc3d5b3-7023-4848-9853-f5400a64e80f"
          }
        }
      },
      "accountDetailsRegularAccount": {
        "description": "Account Details for a regular Account",
        "value": {
          "account": {
            "_links": {
              "balances": {
                "href": "/v1/accounts/3dc3d5b3-7023-4848-9853-f5400a64e80f/balances"
              },
              "transactions": {
                "href": "/v1/accounts/3dc3d5b3-7023-4848-9853-f5400a64e80f/transactions"
              }
            },
            "cashAccountType": "CurrentAccount",
            "currency": "EUR",
            "iban": "FR7612345987650123456789014",
            "name": "Main Account",
            "product": "Girokonto",
            "resourceId": "3dc3d5b3-7023-4848-9853-f5400a64e80f"
          }
        }
      },
      "accountListExample1": {
        "description": "Response in case of an example, where the consent has been given on two different IBANs",
        "summary": "Account list Example 1",
        "value": {
          "accounts": [
            {
              "_links": {
                "balances": {
                  "href": "/v1/accounts/3dc3d5b3-7023-4848-9853-f5400a64e80f/balances"
                },
                "transactions": {
                  "href": "/v1/accounts/3dc3d5b3-7023-4848-9853-f5400a64e80f/transactions"
                }
              },
              "cashAccountType": "CurrentAccount",
              "currency": "EUR",
              "iban": "DE2310010010123456789",
              "name": "Main Account",
              "product": "Girokonto",
              "resourceId": "3dc3d5b3-7023-4848-9853-f5400a64e80f"
            },
            {
              "_links": {
                "balances": {
                  "href": "/v1/accounts/3dc3d5b3-7023-4848-9853-f5400a64e81g/balances"
                }
              },
              "cashAccountType": "CurrentAccount",
              "currency": "USD",
              "iban": "DE2310010010123456788",
              "name": "US Dollar Account",
              "product": "Fremdw?hrungskonto",
              "resourceId": "3dc3d5b3-7023-4848-9853-f5400a64e81g"
            }
          ]
        }
      },
      "accountListExample2": {
        "description": "Response in case of an example where consent on transactions and balances has been given to a multicurrency account which has two sub-accounts with currencies EUR and USD, and where the ASPSP is giving the data access only on sub-account level\n",
        "summary": "Account list Example 2",
        "value": {
          "accounts": [
            {
              "_links": {
                "balances": {
                  "href": "/v1/accounts/3dc3d5b3-7023-4848-9853-f5400a64e80f/balances"
                },
                "transactions": {
                  "href": "/v1/accounts/3dc3d5b3-7023-4848-9853-f5400a64e80f/transactions"
                }
              },
              "cashAccountType": "CurrentAccount",
              "currency": "EUR",
              "iban": "DE2310010010123456788",
              "name": "Main Account",
              "product": "Girokonto",
              "resourceId": "3dc3d5b3-7023-4848-9853-f5400a64e80f"
            },
            {
              "_links": {
                "balances": {
                  "href": "/v1/accounts/3dc3d5b3-7023-4848-9853-f5400a64e81g/balances"
                },
                "transactions": {
                  "href": "/v1/accounts/3dc3d5b3-7023-4848-9853-f5400a64e81g/transactions"
                }
              },
              "cashAccountType": "CurrentAccount",
              "currency": "USD",
              "iban": "DE2310010010123456788",
              "name": "US Dollar Account",
              "product": "Fremdw?hrungskonto",
              "resourceId": "3dc3d5b3-7023-4848-9853-f5400a64e81g"
            }
          ]
        }
      },
      "accountListExample3": {
        "description": "Account list response in case of an example where consent on balances and transactions has been given to \na multicurrency account which has two sub-accounts with currencies EUR and USD and where the ASPSP is giving \nthe data access on aggregation level and on sub-account level\n",
        "summary": "Account list Example 3",
        "value": {
          "accounts": [
            {
              "_links": {
                "balances": {
                  "href": "/v1/accounts/3dc3d5b3-7023-4848-9853-f5400a64e333/balances"
                },
                "transactions": {
                  "href": "/v1/accounts/3dc3d5b3-7023-4848-9853-f5400a64e333/transactions"
                }
              },
              "cashAccountType": "CurrentAccount",
              "currency": "XXX",
              "iban": "DE2310010010123456788",
              "name": "Aggregation Account",
              "product": "Multi currency account",
              "resourceId": "3dc3d5b3-7023-4848-9853-f5400a64e80f"
            },
            {
              "_links": {
                "balances": {
                  "href": "/v1/accounts/3dc3d5b3-7023-4848-9853-f5400a64e80f/balances"
                },
                "transactions": {
                  "href": "/v1/accounts/3dc3d5b3-7023-4848-9853-f5400a64e80f/transactions"
                }
              },
              "cashAccountType": "CurrentAccount",
              "currency": "EUR",
              "iban": "DE2310010010123456788",
              "name": "Main Account",
              "product": "Girokonto",
              "resourceId": "3dc3d5b3-7023-4848-9853-f5400a64e80f"
            },
            {
              "_links": {
                "balances": {
                  "href": "/v1/accounts/3dc3d5b3-7023-4848-9853-f5400a64e81g/balances"
                },
                "transactions": {
                  "href": "/v1/accounts/3dc3d5b3-7023-4848-9853-f5400a64e81g/transactions"
                }
              },
              "cashAccountType": "CurrentAccount",
              "currency": "USD",
              "iban": "DE2310010010123456788",
              "name": "US Dollar Account",
              "product": "Fremdw?hrungskonto",
              "resourceId": "3dc3d5b3-7023-4848-9853-f5400a64e81g"
            }
          ]
        }
      },
      "authorisationListExample": {
        "value": {
          "authorisationIds": [
            "123auth456"
          ]
        }
      },
      "balancesExample1_RegularAccount": {
        "description": "Response for a read balance request in case of a regular account.",
        "value": {
          "account": {
            "iban": "FR7612345987650123456789014"
          },
          "balances": [
            {
              "balanceAmount": {
                "amount": "500.00",
                "currency": "EUR"
              },
              "balanceType": "closingBooked",
              "referenceDate": "2017-10-25"
            },
            {
              "balanceAmount": {
                "amount": "900.00",
                "currency": "EUR"
              },
              "balanceType": "expected",
              "lastChangeDateTime": "2017-10-25T15:30:35.035Z"
            }
          ]
        }
      },
      "balancesExample2_MulticurrencyAcount": {
        "description": "Response in case of a multicurrency account with one account in EUR, \none in USD, where the ASPSP has delivered a link to the balance endpoint relative to the aggregated \nmulticurrency account (aggregation level).\n",
        "value": {
          "balances": [
            {
              "balanceAmount": {
                "amount": "500.00",
                "currency": "EUR"
              },
              "balanceType": "closingBooked",
              "referenceDate": "2017-10-25"
            },
            {
              "balanceAmount": {
                "amount": "900.00",
                "currency": "EUR"
              },
              "balanceType": "expected",
              "lastChangeDateTime": "2017-10-25T15:30:35.035Z"
            },
            {
              "balanceAmount": {
                "amount": "350.00",
                "currency": "USD"
              },
              "balanceType": "closingBooked",
              "referenceDate": "2017-10-25"
            },
            {
              "balanceAmount": {
                "amount": "350.00",
                "currency": "USD"
              },
              "balanceType": "expected",
              "lastChangeDateTime": "2017-10-24T14:30:21Z"
            }
          ]
        }
      },
      "cancellationListExample": {
        "value": {
          "cancellationIds": [
            "123auth456"
          ]
        }
      },
      "cardAccountDetailsExample": {
        "description": "Card account details example\n",
        "summary": "Card account details example 1",
        "value": {
          "cardAccount": {
            "_links": {
              "transactions": {
                "href": "/v1/card-accounts/3d9a81b3-a47d-4130-8765-a9c0ff861b99/transactions"
              }
            },
            "balances": [
              {
                "balanceAmount": {
                  "amount": 14355.78,
                  "currency": "EUR"
                },
                "balanceType": "interimBooked"
              },
              {
                "balanceAmount": {
                  "amount": 4175.86,
                  "currency": "EUR"
                },
                "balanceType": "nonBilled"
              }
            ],
            "creditLimit": {
              "amount": 15000,
              "currency": "EUR"
            },
            "currency": "EUR",
            "maskedPan": "525412******3241",
            "name": "Main",
            "product": "Basic Credit",
            "resourceId": "3d9a81b3-a47d-4130-8765-a9c0ff861b99",
            "status": "enabled"
          }
        }
      },
      "cardAccountListExample1": {
        "description": "Card account list example\n",
        "summary": "Card account list example 1",
        "value": {
          "cardAccounts": [
            {
              "_links": {
                "transactions": {
                  "href": "/v1/card-accounts/3d9a81b3-a47d-4130-8765-a9c0ff861b99/transactions"
                }
              },
              "balances": [
                {
                  "balanceAmount": {
                    "amount": 14355.78,
                    "currency": "EUR"
                  },
                  "balanceType": "interimBooked"
                },
                {
                  "balanceAmount": {
                    "amount": 4175.86,
                    "currency": "EUR"
                  },
                  "balanceType": "nonBilled"
                }
              ],
              "creditLimit": {
                "amount": 15000,
                "currency": "EUR"
              },
              "currency": "EUR",
              "maskedPan": "525412******3241",
              "name": "Main",
              "product": "Basic Credit",
              "resourceId": "3d9a81b3-a47d-4130-8765-a9c0ff861b99",
              "status": "enabled"
            }
          ]
        }
      },
      "confirmationOfFundsExample": {
        "description": "Request body for a confirmation of funds.",
        "value": {
          "account": {
            "iban": "DE23100120020123456789"
          },
          "cardNumber": "12345678901234",
          "instructedAmount": {
            "amount": "123",
            "currency": "EUR"
          }
        }
      },
      "confirmationOfFundsResponseExample": {
        "description": "Response for a confirmation of funds request.",
        "value": {
          "fundsAvailable": "true"
        }
      },
      "consentResponseExample1a_Redirect": {
        "description": "Consent request Response in case of a redirect",
        "value": {
          "_links": {
            "scaRedirect": {
              "href": "https://www.testbank.com/authentication/1234-wertiq-983"
            },
            "scaStatus": {
              "href": "v1/consents/1234-wertiq-983/authorisations/123auth567"
            },
            "status": {
              "href": "/v1/consents/1234-wertiq-983/status"
            }
          },
          "consentId": "1234-wertiq-983",
          "consentStatus": "received"
        }
      },
      "consentResponseExample1b_Redirect": {
        "description": "Consent request Response in case of a redirect with a dedicated start of the authorisation process",
        "value": {
          "_links": {
            "startAuthorisation": {
              "href": "v1/consents/1234-wertiq-983/authorisations"
            }
          },
          "consentId": "1234-wertiq-983",
          "consentStatus": "received"
        }
      },
      "consentResponseExample2_OAuth2": {
        "description": "Response in case of the OAuth2 approach with an implicit generated authorisation resource",
        "value": {
          "_links": {
            "scaOAuth": {
              "href": "https://www.testbank.com/oauth/.well-known/oauth-authorization-server"
            },
            "scaStatus": {
              "href": "v1/consents/1234-wertiq-983/authorisations/123auth567"
            },
            "self": {
              "href": "/v1/consents/1234-wertiq-983"
            }
          },
          "consentId": "1234-wertiq-983",
          "consentStatus": "received"
        }
      },
      "consentResponseExample3_Decoupled": {
        "description": "Response in case of the decoupled approach",
        "value": {
          "_links": {
            "startAuthorisationWithPsuIdentification": {
              "href": "/v1/consents/1234-wertiq-983/authorisations"
            }
          },
          "consentId": "1234-wertiq-983",
          "consentStatus": "received"
        }
      },
      "consentResponseExample4_Embedded": {
        "description": "Response in case of the embedded approach",
        "value": {
          "_links": {
            "startAuthorisationWithPsuAuthentication": {
              "href": "/v1/consents/1234-wertiq-983/authorisations"
            }
          },
          "consentId": "1234-wertiq-983",
          "consentStatus": "received"
        }
      },
      "consentStatusResponseExample1": {
        "description": "Response for a consent status request.",
        "value": {
          "consentStatus": "valid"
        }
      },
      "consentsExample_AccountList": {
        "description": "Consent on Account List of Available Accounts",
        "value": {
          "access": {
            "availableAccounts": "allAccounts"
          },
          "frequencyPerDay": "1",
          "recurringIndicator": "false",
          "validUntil": "2017-08-06"
        }
      },
      "consentsExample_DedicatedAccounts": {
        "description": "Consent request on dedicated accounts",
        "value": {
          "access": {
            "balances": [
              {
                "iban": "DE40100100103307118608"
              },
              {
                "currency": "USD",
                "iban": "DE02100100109307118603"
              },
              {
                "iban": "DE67100100101306118605"
              }
            ],
            "transactions": [
              {
                "iban": "DE40100100103307118608"
              },
              {
                "maskedPan": "123456xxxxxx1234"
              }
            ]
          },
          "frequencyPerDay": "4",
          "recurringIndicator": "true",
          "validUntil": "2017-11-01"
        }
      },
      "consentsExample_without_Accounts": {
        "description": "Consent request on account list or without indication of accounts",
        "value": {
          "access": {
            "balances": [],
            "transactions": []
          },
          "frequencyPerDay": "4",
          "recurringIndicator": "true",
          "validUntil": "2017-11-01"
        }
      },
      "consentsInformationResponseExample": {
        "description": "Consent request on account list or without indication of accounts",
        "value": {
          "_links": {
            "account": {
              "href": "/v1/accounts"
            }
          },
          "access": {
            "balances": [
              {
                "iban": "DE2310010010123456789"
              }
            ],
            "transactions": [
              {
                "iban": "DE2310010010123456789"
              },
              {
                "pan": "123456xxxxxx3457"
              }
            ]
          },
          "consentStatus": "valid",
          "frequencyPerDay": "4",
          "recurringIndicator": "true",
          "validUntil": "2017-11-01"
        }
      },
      "createSigningBasketResponseExample1": {
        "description": "Response (always with explicit authorisation start)",
        "value": {
          "_links": {
            "self": {
              "href": "/v1/signing-baskets/1234-basket-567"
            },
            "startAuthorisation": {
              "href": "/v1/signing-baskets/1234-basket-567/authorisations"
            },
            "status": {
              "href": "/v1/signing-baskets/1234-basket-567/status"
            }
          },
          "basketId": "1234-basket-567",
          "transactionStatus": "RCVD"
        }
      },
      "getSigningBasketResponseExample1": {
        "value": {
          "payments": [
            "1234pay567",
            "1234pay568",
            "1234pay888"
          ],
          "transactionStatus": "ACTC"
        }
      },
      "ibanExampleDe_01": {
        "value": "DE02100100109307118603"
      },
      "ibanExampleDe_02": {
        "value": "DE23100120020123456789"
      },
      "ibanExampleDe_03": {
        "value": "DE40100100103307118608"
      },
      "ibanExampleDe_04": {
        "value": "DE67100100101306118605"
      },
      "ibanExampleDe_05": {
        "value": "DE87200500001234567890"
      },
      "ibanExampleFr_01": {
        "value": "FR7612345987650123456789014"
      },
      "ibanExampleNl_01": {
        "value": "NL76RABO0359400371"
      },
      "ibanExampleSe_01": {
        "value": "SE9412309876543211234567"
      },
      "maskedPanExample": {
        "value": "123456xxxxxx1234"
      },
      "pain.001.001_SCT_singleTransaction": {
        "description": "A pain.001.001.03 message in case of SCT",
        "value": "<Document xmlns=\"urn:iso:std:iso:20022:tech:xsd:pain.001.001.03\">\n  <CstmrCdtTrfInitn>\n    <GrpHdr>\n      <MsgId>MIPI-123456789RI-123456789</MsgId>\n      <CreDtTm>2017-02-14T20:23:34.000Z</CreDtTm>\n      <NbOfTxs>1</NbOfTxs>\n      <CtrlSum>123</CtrlSum>\n      <InitgPty>\n        <Nm>PaymentInitiator</Nm>\n        <Id><OrgId><Othr><Id>DE10000000012</Id>\n          <SchmeNm><Prptry>PISP</Prptry></SchmeNm></Othr></OrgId></Id>\n      </InitgPty>\n    </GrpHdr> \n    <PmtInf> \n      <PmtInfId>BIPI-123456789RI-123456789</PmtInfId>\n      <PmtMtd>TRF</PmtMtd> \n      <NbOfTxs>1</NbOfTxs>\n      <CtrlSum>123</CtrlSum>\n      <PmtTpInf><SvcLvl><Cd>SEPA</Cd></SvcLvl></PmtTpInf>\n      <ReqdExctnDt>2017-02-15</ReqdExctnDt>\n      <Dbtr><Nm>PSU Name</Nm></Dbtr>\n      <DbtrAcct><Id><IBAN>DE87200500001234567890</IBAN></Id></DbtrAcct>\n      <ChrgBr>SLEV</ChrgBr>\n      <CdtTrfTxInf>\n        <PmtId><EndToEndId>RI-123456789</EndToEndId></PmtId> \n        <Amt><InstdAmt Ccy=\"EUR\">123</InstdAmt></Amt>\n        <Cdtr><Nm>Merchant123</Nm></Cdtr>\n        <CdtrAcct><Id><IBAN> DE23100120020123456789</IBAN></Id></CdtrAcct>\n        <RmtInf><Ustrd>Ref Number Merchant-123456</Ustrd></RmtInf>\n      </CdtTrfTxInf>\n    </PmtInf>\n  </CstmrCdtTrfInitn>\n</Document>\n"
      },
      "pain.002.001_SCT_singleTransaction": {
        "description": "A pain.002.001.03 message in case of SCT",
        "value": "<Document xmlns=\"urn:iso:std:iso:20022:tech:xsd:pain.002.001.03\">\n  <CstmrPmtStsRpt>\n    <GrpHdr>\n      <MsgId>4572457256725689726906</MsgId>\n      <CreDtTm>2017-02-14T20:24:56.021Z</CreDtTm>\n      <DbtrAgt><FinInstnId><BIC>ABCDDEFF</BIC></FinInstnId></DbtrAgt>\n      <CdtrAgt><FinInstnId><BIC>DCBADEFF</BIC></FinInstnId></CdtrAgt>\n    </GrpHdr>\n    <OrgnlGrpInfAndSts>\n      <OrgnlMsgId>MIPI-123456789RI-123456789</OrgnlMsgId>\n      <OrgnlMsgNmId>pain.001.001.03</OrgnlMsgNmId>\n      <OrgnlCreDtTm>2017-02-14T20:23:34.000Z</OrgnlCreDtTm>\n      <OrgnlNbOfTxs>1</OrgnlNbOfTxs>\n      <OrgnlCtrlSum>123</OrgnlCtrlSum>\n      <GrpSts>ACCT</GrpSts>\n    </OrgnlGrpInfAndSts>\n    <OrgnlPmtInfAndSts>\n      <OrgnlPmtInfId>BIPI-123456789RI-123456789</OrgnlPmtInfId>\n      <OrgnlNbOfTxs>1</OrgnlNbOfTxs>\n      <OrgnlCtrlSum>123</OrgnlCtrlSum>\n      <PmtInfSts>ACCT</PmtInfSts>\n    </OrgnlPmtInfAndSts>\n  </CstmrPmtStsRpt>\n</Document>\n"
      },
      "paymentInitiationCancelResponse-202": {
        "value": {
          "_links": {
            "self": {
              "href": "/v1/payments/123456scheduled789"
            },
            "startAuthorisation": {
              "href": "/v1/payments/123456scheduled789/cancellation-authorisations"
            },
            "status": {
              "href": "/v1/payments/123456scheduled789/status"
            }
          },
          "transactionStatus": "ACTC"
        }
      },
      "paymentInitiationCancelResponse-204_202": {
        "value": {
          "transactionStatus": "CANC"
        }
      },
      "paymentInitiationExample_json_Decoupled": {
        "description": "Response in case of the decoupled approach with explicit start of authorisation needed",
        "value": {
          "_links": {
            "self": {
              "href": "/v1/payments/1234-wertiq-983"
            },
            "startAuthorisationWithPsuIdentification": {
              "href": "/v1/payments/1234-wertiq-983/authorisations"
            }
          },
          "paymentId": "1234-wertiq-983",
          "transactionStatus": "RCVD"
        }
      },
      "paymentInitiationExample_json_Embedded": {
        "description": "Response in case of the embedded approach with explicit start of authorisation",
        "value": {
          "_links": {
            "self": {
              "href": "/v1/payments/1234-wertiq-983"
            },
            "startAuthenticationWithPsuAuthentication": {
              "href": "/v1/payments/1234-wertiq-983/authorisations"
            }
          },
          "paymentId": "1234-wertiq-983",
          "transactionStatus": "RCVD"
        }
      },
      "paymentInitiationExample_json_OAuth2": {
        "description": "Response in case of an OAuth2 SCA approach approach with implicitly creating an authorisation sub-resource",
        "value": {
          "_links": {
            "scaOAuth": {
              "href": "https://www.testbank.com/oauth/.well-known/oauth-authorization-server"
            },
            "scaStatus": {
              "href": "/v1/payments/1234-wertiq-983/authorisations/123auth456"
            },
            "self": {
              "href": "/v1/payments/1234-wertiq-983"
            },
            "status": {
              "href": "/v1/payments/1234-wertiq-983/status"
            }
          },
          "paymentId": "1234-wertiq-983",
          "transactionStatus": "RCVD"
        }
      },
      "paymentInitiationExample_json_Redirect": {
        "description": "Response in case of a redirect with an implicitly created authorisation sub-resource",
        "value": {
          "_links": {
            "scaRedirect": {
              "href": "https://www.testbank.com/asdfasdfasdf"
            },
            "scaStatus": {
              "href": "/v1/payments/1234-wertiq-983/authorisations/123auth456"
            },
            "self": {
              "href": "/v1/payments/sepa-credit-transfers/1234-wertiq-983"
            },
            "status": {
              "href": "/v1/payments/1234-wertiq-983/status"
            }
          },
          "paymentId": "1234-wertiq-983",
          "transactionStatus": "RCVD"
        }
      },
      "paymentInitiationExample_json__RedirectExplicitAuthorisation": {
        "description": "Response in case of a redirect with an explicit authorisation start",
        "value": {
          "_links": {
            "self": {
              "href": "/v1/payments/1234-wertiq-983"
            },
            "startAuthorisation": {
              "href": "/v1/payments1234-wertiq-983/authorisations"
            },
            "status": {
              "href": "/v1/payments/1234-wertiq-983/status"
            }
          },
          "paymentId": "1234-wertiq-983",
          "transactionStatus": "RCVD"
        }
      },
      "paymentInitiationSctBody_bulk-payments_json": {
        "value": {
          "batchBookingPreferred": "true",
          "debtorAccount": {
            "iban": "DE40100100103307118608"
          },
          "payments": [
            {
              "creditorAccount": {
                "iban": "DE02100100109307118603"
              },
              "creditorName": "Merchant123",
              "instructedAmount\"": {
                "amount": "123.50",
                "currency": "EUR"
              },
              "remittanceInformationUnstructured": "Ref Number Merchant 1"
            },
            {
              "creditorAccount": {
                "iban": "FR7612345987650123456789014"
              },
              "creditorName": "Merchant456",
              "instructedAmount\"": {
                "amount": "34.10",
                "currency": "EUR"
              },
              "remittanceInformationUnstructured": "Ref Number Merchant 2"
            }
          ],
          "requestedExecutionDate": "2018-08-01"
        }
      },
      "paymentInitiationSctBody_payments_json": {
        "value": {
          "creditorAccount": {
            "iban": "DE02100100109307118603"
          },
          "creditorName": "Merchant123",
          "debtorAccount": {
            "iban": "DE40100100103307118608"
          },
          "instructedAmount": {
            "amount": "123.50",
            "currency": "EUR"
          },
          "remittanceInformationUnstructured": "Ref Number Merchant"
        }
      },
      "paymentInitiationSctBody_periodic-payments_json": {
        "value": {
          "creditorAccount": {
            "iban": "DE23100120020123456789"
          },
          "creditorName": "Merchant123",
          "dayOfExecution": "01",
          "debtorAccount": {
            "iban": "DE40100100103307118608"
          },
          "executionRule": "latest",
          "frequency": "monthly",
          "instructedAmount": {
            "amount": "123",
            "currency": "EUR"
          },
          "remittanceInformationUnstructured": "Ref Number Abonnement",
          "startDate": "2018-03-01"
        }
      },
      "paymentInitiationStatusResponse_json_Extended": {
        "value": "{ \n  \"transactionStatus\": \"ACCP\",\n  \"scaStatus\": \"Some SCA Status\"\n}\n"
      },
      "paymentInitiationStatusResponse_json_Simple": {
        "value": {
          "transactionStatus": "ACCP"
        }
      },
      "selectPsuAuthenticationMethodExample_Embedded": {
        "description": "Select PSU Authentication Method request body for the embedded approach.",
        "value": {
          "authenticationMethodId": "myAuthenticationID"
        }
      },
      "selectPsuAuthenticationMethodResponseExample_Embedded_payments": {
        "description": "Response of a Select PSU Authentication Method payment initiation request for the embedded approach",
        "value": {
          "_links": {
            "authoriseTransaction": {
              "href": "/v1/payments/1234-wertiq-983/authorisations/123auth456"
            }
          },
          "challengeData": {
            "otpFormat": "integer",
            "otpMaxLength": "6"
          },
          "chosenScaMethod": {
            "authenticationMethodId": "myAuthenticationID",
            "authenticationType": "SMS_OTP"
          },
          "scaStatus": "scaMethodSelected"
        }
      },
      "signingBasketExample": {
        "description": "JSON Body of a signing basket request",
        "value": {
          "paymentIds": [
            "123qwert456789",
            "12345qwert7899"
          ]
        }
      },
      "startScaProcessResponseExample1": {
        "value": {
          "_links": {
            "scaStatus": {
              "href": "/v1/payments/qwer3456tzui7890/authorisations/123auth456"
            }
          },
          "psuMessage": "Please use your BankApp for transaction Authorisation.",
          "scaStatus": "received"
        }
      },
      "transactionAuthorisationExample_Embedded": {
        "description": "Transaction Authorisation request body for the embedded approach.",
        "value": {
          "scaAuthenticationData": "123456"
        }
      },
      "transactionAuthorisationResponseExample": {
        "description": "Response of a Transaction Authorisation request for the embedded approach.",
        "value": {
          "scaStatus": "finalised"
        }
      },
      "transactionDetailsExample": {
        "description": "Example for transaction details",
        "value": {
          "transactionsDetails": {
            "bankTransactionCode": "PMNT-RCVD-ESDD",
            "bookingDate": "2017-10-25",
            "creditorAccount": {
              "iban": "DE67100100101306118605"
            },
            "creditorName": "John Miles",
            "mandateId": "Mandate-2018-04-20-1234",
            "remittanceInformationUnstructured": "Example 1",
            "transactionAmount": {
              "amount": "-256.67",
              "currency": "EUR"
            },
            "transactionId": "1234567",
            "valueDate": "2017-10-26"
          }
        }
      },
      "transactionsExample1_RegularAccount_json": {
        "description": "Response in JSON format for an access on a regular account",
        "value": {
          "account": {
            "iban": "DE2310010010123456788"
          },
          "transactions": {
            "_links": {
              "account": {
                "href": "/v1/accounts/3dc3d5b3-7023-4848-9853-f5400a64e80f"
              }
            },
            "booked": [
              {
                "bookingDate": "2017-10-25",
                "creditorAccount": {
                  "iban": "DE67100100101306118605"
                },
                "creditorName": "John Miles",
                "remittanceInformationUnstructured": "Example 1",
                "transactionAmount": {
                  "amount": "256.67",
                  "currency": "EUR"
                },
                "transactionId": "1234567",
                "valueDate": "2017-10-26"
              },
              {
                "bookingDate": "2017-10-25",
                "debtorAccount": {
                  "iban": "NL76RABO0359400371"
                },
                "debtorName": "Paul Simpson",
                "remittanceInformationUnstructured": "Example 2",
                "transactionAmount": {
                  "amount": "343.01",
                  "currency": "EUR"
                },
                "transactionId": "1234568",
                "valueDate": "2017-10-26"
              }
            ],
            "pending": [
              {
                "creditorAccount": {
                  "iban": "FR7612345987650123456789014"
                },
                "creditorName": "Claude Renault",
                "remittanceInformationUnstructured": "Example 3",
                "transactionAmount": {
                  "amount": "-100.03",
                  "currency": "EUR"
                },
                "transactionId": "1234569",
                "valueDate": "2017-10-26"
              }
            ]
          }
        }
      },
      "transactionsExample2_Download_json": {
        "description": "Response in case of huge data amount as a download.",
        "value": {
          "_links": {
            "download": {
              "href": "www.test-api.com/xs2a/v1/accounts/12345678999/transactions/download/"
            }
          }
        }
      },
      "transactionsExample3_MulticurrencyAccount_json": {
        "description": "Response in JSON format for an access on a multicurrency account on aggregation level",
        "value": {
          "account": {
            "iban": "DE40100100103307118608"
          },
          "transactions": {
            "_links": {
              "account": {
                "href": "/v1/accounts/3dc3d5b3-7023-4848-9853-f5400a64e80f"
              }
            },
            "booked": [
              {
                "bookingDate": "2017-10-25",
                "creditorAccount": {
                  "iban": "DE67100100101306118605"
                },
                "creditorName": "John Miles",
                "remittanceInformationUnstructured": "Example 1",
                "transactionAmount": {
                  "amount": "-256.67",
                  "currency": "EUR"
                },
                "transactionId": "1234567",
                "valueDate": "2017-10-26"
              },
              {
                "bookingDate": "2017-10-25",
                "debtorAccount": {
                  "iban": "NL76RABO0359400371"
                },
                "debtorName": "Paul Simpson",
                "remittanceInformationUnstructured": "Example 2",
                "transactionAmount": {
                  "amount": "343.01",
                  "currency": "EUR"
                },
                "transactionId": "1234568",
                "valueDate": "2017-10-26"
              },
              {
                "bookingDate": "2017-10-25",
                "debtorAccount": {
                  "iban": "SE9412309876543211234567"
                },
                "debtorName": "Pepe Martin",
                "remittanceInformationUnstructured": "Example 3",
                "transactionAmount": {
                  "amount": "100",
                  "currency": "USD"
                },
                "transactionId": "1234569",
                "valueDate": "2017-10-26"
              }
            ],
            "pending": [
              {
                "creditorAccount": {
                  "iban": "FR7612345987650123456789014"
                },
                "creditorName": "Claude Renault",
                "remittanceInformationUnstructured": "Example 4",
                "transactionAmount": {
                  "amount": "-100.03",
                  "currency": "EUR"
                },
                "transactionId": "1234570",
                "valueDate": "2017-10-26"
              }
            ]
          }
        }
      },
      "updatePsuAuthenticationExample_Embedded": {
        "description": "Update PSU Authentication request body for the embedded approach.",
        "value": {
          "psuData": {
            "password": "start12"
          }
        }
      },
      "updatePsuAuthenticationResponseExample_Embedded_payments": {
        "description": "Response of an Update PSU Authentication for a consent request for the embedded approach.",
        "value": {
          "_links": {
            "authoriseTransaction": {
              "href": "/v1/payments/1234-wertiq-983/authorisations/123auth456"
            }
          },
          "scaStatus": "psuAuthenticated"
        }
      },
      "updatePsuIdentificationResponseExample_Decoupled_payments": {
        "description": "Response of an Update PSU Identification for a payment initiation request for the decoupled approach.",
        "value": {
          "_links": {
            "scaStatus": {
              "href": "/v1/payments/qwer3456tzui7890/authorisations/123auth456"
            }
          },
          "psuMessage": "Please use your BankApp for transaction Authorisation.",
          "scatransactionStatus": "psuIdentified"
        }
      },
      "uuidExample": {
        "value": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721"
      }
    },
    "headers": {
      "ASPSP-SCA-Approach": {
        "description": "This data element must be contained, if the SCA Approach is already fixed.\nPossible values are\n  * EMBEDDED\n  * DECOUPLED\n  * REDIRECT\nThe OAuth SCA approach will be subsumed by REDIRECT.\n",
        "required": false,
        "type": "string"
      },
      "Location": {
        "description": "Location of the created resource.\n",
        "format": "url",
        "required": false,
        "type": "string"
      },
      "X-Request-ID": {
        "description": "ID of the request, unique to the call, as determined by the initiating party.",
        "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
        "format": "uuid",
        "required": true,
        "type": "string"
      }
    },
    "parameters": {
      "Digest": {
        "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request.",
        "in": "header",
        "name": "Digest",
        "required": false,
        "type": "string",
        "x-example": "SHA-256=hl1/Eps8BEQW58FJhDApwJXjGY4nr1ArGDHIT25vq6A="
      },
      "PSU-Accept": {
        "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
        "in": "header",
        "name": "PSU-Accept",
        "required": false,
        "type": "string"
      },
      "PSU-Accept-Charset": {
        "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
        "in": "header",
        "name": "PSU-Accept-Charset",
        "required": false,
        "type": "string"
      },
      "PSU-Accept-Encoding": {
        "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
        "in": "header",
        "name": "PSU-Accept-Encoding",
        "required": false,
        "type": "string"
      },
      "PSU-Accept-Language": {
        "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
        "in": "header",
        "name": "PSU-Accept-Language",
        "required": false,
        "type": "string"
      },
      "PSU-Corporate-ID": {
        "description": "Might be mandated in the ASPSP's documentation. Only used in a corporate context.\n",
        "in": "header",
        "name": "PSU-Corporate-ID",
        "required": false,
        "type": "string"
      },
      "PSU-Corporate-ID-Type": {
        "description": "Might be mandated in the ASPSP's documentation. Only used in a corporate context.\n",
        "in": "header",
        "name": "PSU-Corporate-ID-Type",
        "required": false,
        "type": "string"
      },
      "PSU-Device-ID": {
        "description": "UUID (Universally Unique Identifier) for a device, which is used by the PSU, if available.\nUUID identifies either a device or a device dependant application installation.\nIn case of an installation identification this ID need to be unaltered until removal from device.\n",
        "format": "uuid",
        "in": "header",
        "name": "PSU-Device-ID",
        "required": false,
        "type": "string",
        "x-example": "99435c7e-ad88-49ec-a2ad-99ddcb1f5555"
      },
      "PSU-Geo-Location": {
        "description": "The forwarded Geo Location of the corresponding http request between PSU and TPP if available.\n",
        "in": "header",
        "name": "PSU-Geo-Location",
        "pattern": "(GEO:)[0-9]{1,3}\\.[-][0-9]{6}\\,[-][0-9]{1,3}\\.[0-9]{6}",
        "required": false,
        "type": "string",
        "x-example": "GEO:52.506931,13.144558"
      },
      "PSU-Http-Method": {
        "description": "HTTP method used at the PSU ? TPP interface, if available.\nValid values are:\n* GET\n* POST\n* PUT\n* PATCH\n* DELETE\n",
        "enum": [
          "GET",
          "POST",
          "PUT",
          "PATCH",
          "DELETE"
        ],
        "in": "header",
        "name": "PSU-Http-Method",
        "required": false,
        "type": "string"
      },
      "PSU-ID": {
        "description": "Client ID of the PSU in the ASPSP client interface. Might be mandated in the ASPSP's documentation.\nIs not contained if an OAuth2 based authentication was performed in a pre-step or an OAuth2 based SCA was performed in an preceeding\nAIS service in the same session.\n",
        "in": "header",
        "name": "PSU-ID",
        "required": false,
        "type": "string",
        "x-example": "PSU-1234"
      },
      "PSU-ID-Type": {
        "description": "Type of the PSU-ID, needed in scenarios where PSUs have several PSU-IDs as access possibility.\n",
        "in": "header",
        "name": "PSU-ID-Type",
        "required": false,
        "type": "string"
      },
      "PSU-IP-Address_conditionalForAis": {
        "description": "The forwarded IP Address header field consists of the corresponding HTTP request \nIP Address field between PSU and TPP. \nIt shall be contained if and only if this request was actively initiated by the PSU.\n",
        "format": "ipv4",
        "in": "header",
        "name": "PSU-IP-Address",
        "required": false,
        "type": "string",
        "x-example": "192.168.8.78"
      },
      "PSU-IP-Address_mandatory": {
        "description": "The forwarded IP Address header field consists of the corresponding http request IP Address field between PSU and TPP.\n",
        "format": "ipv4",
        "in": "header",
        "name": "PSU-IP-Address",
        "required": true,
        "type": "string",
        "x-example": "192.168.8.78"
      },
      "PSU-IP-Address_optional": {
        "description": "The forwarded IP Address header field consists of the corresponding http request IP Address field between PSU and TPP.\n",
        "format": "ipv4",
        "in": "header",
        "name": "PSU-IP-Address",
        "required": false,
        "type": "string",
        "x-example": "192.168.8.78"
      },
      "PSU-IP-Port": {
        "description": "The forwarded IP Port header field consists of the corresponding HTTP request IP Port field between PSU and TPP, if available.\n",
        "in": "header",
        "name": "PSU-IP-Port",
        "required": false,
        "type": "string",
        "x-example": "1234"
      },
      "PSU-User-Agent": {
        "description": "The forwarded Agent header field of the HTTP request between PSU and TPP, if available.\n",
        "in": "header",
        "name": "PSU-User-Agent",
        "required": false,
        "type": "string"
      },
      "Signature": {
        "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.\n",
        "in": "header",
        "name": "Signature",
        "required": false,
        "type": "string",
        "x-example": "keyId=\"SN=9FA1,CA=CN=D-TRUST%20CA%202-1%202015,O=D-Trust%20GmbH,C=DE\",algorithm=\"rsa-sha256\", headers=\"Digest X-Request-ID PSU-ID TPP-Redirect-URI Date\", signature=\"Base64(RSA-SHA256(signing string))\"\n"
      },
      "TPP-Explicit-Authorisation-Preferred": {
        "description": "If it equals \"true\", the TPP prefers to start the authorisation process separately, \ne.g. because of the usage of a signing basket. \nThis preference might be ignored by the ASPSP, if a signing basket is not supported as functionality.\n\nIf it equals \"false\" or if the parameter is not used, there is no preference of the TPP. \nThis especially indicates that the TPP assumes a direct authorisation of the transaction in the next step, \nwithout using a signing basket.\n",
        "enum": [
          "true",
          "false"
        ],
        "in": "header",
        "name": "TPP-Explicit-Authorisation-Preferred",
        "required": false,
        "type": "string"
      },
      "TPP-Nok-Redirect-URI": {
        "description": "If this URI is contained, the TPP is asking to redirect the transaction flow to this address instead of the TPP-Redirect-URI in case\nof a negative result of the redirect SCA method. This might be ignored by the ASPSP.\n",
        "format": "uri",
        "in": "header",
        "name": "TPP-Nok-Redirect-URI",
        "required": false,
        "type": "string"
      },
      "TPP-Redirect-Preferred": {
        "description": "If it equals \"true\", the TPP prefers a redirect over an embedded SCA approach.\nIf it equals \"false\", the TPP prefers not to be redirected for SCA. The ASPSP will then choose between the Embedded or the Decoupled\nSCA approach, depending on the choice of the SCA procedure by the TPP/PSU.\nIf the parameter is not used, the ASPSP will choose the SCA approach to be applied depending on the SCA method chosen by the\nTPP/PSU.\n",
        "enum": [
          "true",
          "false"
        ],
        "in": "header",
        "name": "TPP-Redirect-Preferred",
        "required": false,
        "type": "string"
      },
      "TPP-Redirect-URI": {
        "description": "URI of the TPP, where the transaction flow shall be redirected to after a Redirect.\n\nMandated for the Redirect SCA Approach (including OAuth2 SCA approach), specifically \nwhen TPP-Redirect-Preferred equals \"true\".\nIt is recommended to always use this header field.\n\n**Remark for Future:** \nThis field might be changed to mandatory in the next version of the specification.\n",
        "format": "uri",
        "in": "header",
        "name": "TPP-Redirect-URI",
        "required": false,
        "type": "string"
      },
      "TPP-Signature-Certificate": {
        "description": "The certificate used for signing the request, in base64 encoding. \nMust be contained if a signature is contained.\n",
        "format": "byte",
        "in": "header",
        "name": "TPP-Signature-Certificate",
        "required": false,
        "type": "string"
      },
      "X-Request-ID": {
        "description": "ID of the request, unique to the call, as determined by the initiating party.",
        "format": "uuid",
        "in": "header",
        "name": "X-Request-ID",
        "required": true,
        "type": "string",
        "x-example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721"
      },
      "accountId": {
        "description": "This identification is denoting the addressed account. \nThe account-id is retrieved by using a \"Read Account List\" call. \nThe account-id is the \"id\" attribute of the account structure. \nIts value is constant at least throughout the lifecycle of a given consent.\n",
        "in": "path",
        "name": "account-id",
        "required": true,
        "type": "string"
      },
      "authorisationId": {
        "description": "Resource identification of the related SCA.",
        "in": "path",
        "name": "authorisationId",
        "required": true,
        "type": "string"
      },
      "basketId_PATH": {
        "description": "This identification of the corresponding signing basket object.\n",
        "in": "path",
        "name": "basketId",
        "required": true,
        "type": "string"
      },
      "bookingStatus": {
        "description": "Permitted codes are \n  * \"booked\",\n  * \"pending\" and \n  * \"both\"\n\"booked\" shall be supported by the ASPSP.\nTo support the \"pending\" and \"both\" feature is optional for the ASPSP, \nError code if not supported in the online banking frontend\n",
        "enum": [
          "booked",
          "pending",
          "both"
        ],
        "in": "query",
        "name": "bookingStatus",
        "required": true,
        "type": "string"
      },
      "cancellationId": {
        "description": "Identification for cancellation resource.",
        "in": "path",
        "name": "cancellationId",
        "required": true,
        "type": "string"
      },
      "consentId_HEADER_mandatory": {
        "description": "This then contains the consentId of the related AIS consent, which was performed prior to this payment initiation.\n",
        "in": "header",
        "name": "Consent-ID",
        "required": true,
        "type": "string"
      },
      "consentId_HEADER_optional": {
        "description": "This data element may be contained, if the payment initiation transaction is part of a session, i.e. combined AIS/PIS service.\nThis then contains the consentId of the related AIS consent, which was performed prior to this payment initiation.\n",
        "in": "header",
        "name": "Consent-ID",
        "required": false,
        "type": "string"
      },
      "consentId_PATH": {
        "description": "ID of the corresponding consent object as returned by an Account Information Consent Request.\n",
        "in": "path",
        "name": "consentId",
        "required": true,
        "type": "string"
      },
      "dateFrom": {
        "description": "Conditional: Starting date (inclusive the date dateFrom) of the transaction list, mandated if no delta access is required.\n\nFor booked transactions, the relevant date is the booking date. \n\nFor pending transactions, the relevant date is the entry date, which may not be transparent \nneither in this API nor other channels of the ASPSP.\n",
        "format": "date",
        "in": "query",
        "name": "dateFrom",
        "required": false,
        "type": "string"
      },
      "dateTo": {
        "description": "End date (inclusive the data dateTo) of the transaction list, default is \"now\" if not given. \n\nMight be ignored if a delta function is used.\n\nFor booked transactions, the relevant date is the booking date. \n\nFor pending transactions, the relevant date is the entry date, which may not be transparent \nneither in this API nor other channels of the ASPSP.\n",
        "format": "date",
        "in": "query",
        "name": "dateTo",
        "required": false,
        "type": "string"
      },
      "deltaList": {
        "description": "This data attribute is indicating that the AISP is in favour to get all transactions after the last report access for this PSU on the addressed account. This is another implementation of a delta access-report.\nThis delta indicator might be rejected by the ASPSP if this function is not supported.\nOptional if supported by API provider",
        "in": "query",
        "name": "deltaList",
        "type": "boolean"
      },
      "entryReferenceFrom": {
        "description": "This data attribute is indicating that the AISP is in favour to get all transactions after \nthe transaction with identification entryReferenceFrom alternatively to the above defined period. \nThis is a implementation of a delta access. \nIf this data element is contained, the entries \"dateFrom\" and \"dateTo\" might be ignored by the ASPSP \nif a delta report is supported.\n\nOptional if supported by API provider.\n",
        "in": "query",
        "name": "entryReferenceFrom",
        "required": false,
        "type": "string"
      },
      "paymentId": {
        "description": "Resource identification of the generated payment initiation resource.",
        "in": "path",
        "name": "paymentId",
        "required": true,
        "type": "string"
      },
      "paymentProduct": {
        "description": "The addressed payment product endpoint, e.g. for SEPA Credit Transfers (SCT).\nThe ASPSP will publish which of the payment products/endpoints will be supported.\n\nThe following payment products are supported:\n  - sepa-credit-transfers\n  - instant-sepa-credit-transfers\n  - target-2-payments\n  - cross-border-credit-transfers\n  - pain.001-sepa-credit-transfers\n  - pain.001-instant-sepa-credit-transfers\n  - pain.001-target-2-payments\n  - pain.001-cross-border-credit-transfers\n\n**Remark:** For all SEPA Credit Transfer based endpoints which accept XML encoding, \nthe XML pain.001 schemes provided by EPC are supported by the ASPSP as a minimum for the body content. \nFurther XML schemes might be supported by some communities.\n\n**Remark:** For cross-border and TARGET-2 payments only community wide pain.001 schemes do exist. \nThere are plenty of country specificic scheme variants.\n",
        "enum": [
          "sepa-credit-transfers",
          "instant-sepa-credit-transfers",
          "target-2-payments",
          "cross-border-credit-transfers",
          "pain.001-sepa-credit-transfers",
          "pain.001-instant-sepa-credit-transfers",
          "pain.001-target-2-payments",
          "pain.001-cross-border-credit-transfers"
        ],
        "in": "path",
        "name": "payment-product",
        "required": true,
        "type": "string"
      },
      "paymentService": {
        "description": "Payment service:\n\nPossible values are:\n* payments\n* bulk-payments\n* periodic-payments\n",
        "enum": [
          "payments",
          "bulk-payments",
          "periodic-payments"
        ],
        "in": "path",
        "name": "payment-service",
        "required": true,
        "type": "string"
      },
      "resourceId": {
        "description": "This identification is given by the attribute resourceId of the corresponding entry of a transaction list.\n",
        "in": "path",
        "name": "resourceId",
        "required": true,
        "type": "string"
      },
      "withBalanceQuery": {
        "description": "If contained, this function reads the list of accessible payment accounts including the booking balance, \nif granted by the PSU in the related consent and available by the ASPSP. \nThis parameter might be ignored by the ASPSP. \n",
        "in": "query",
        "name": "withBalance",
        "required": false,
        "type": "boolean"
      }
    },
    "requestBodies": {
      "confirmationOfFunds": {
        "description": "Request body for a confirmation of funds request.\n",
        "in": "body",
        "name": "body",
        "required": true,
        "schema": {
          "$ref": "#/definitions/confirmationOfFunds"
        }
      },
      "consents": {
        "description": "Requestbody for a consents request\n",
        "in": "body",
        "name": "body",
        "schema": {
          "$ref": "#/definitions/consents"
        }
      },
      "paymentInitiation": {
        "description": "JSON request body for a payment inition request message \n\nThere are the following payment-products supported:\n  * \"sepa-credit-transfers\" with JSON-Body\n  * \"instant-sepa-credit-transfers\" with JSON-Body\n  * \"target-2-payments\" with JSON-Body\n  * \"cross-border-credit-transfers\" with JSON-Body\n  * \"pain.001-sepa-credit-transfers\" with XML pain.001.001.03 body for SCT scheme\n  * \"pain.001-instant-sepa-credit-transfers\" with XML pain.001.001.03 body for SCT INST scheme\n  * \"pain.001-target-2-payments\" with pain.001 body. \n    Only country specific schemes are currently available\n  * \"pain.001-cross-border-credit-transfers\" with pain.001 body. \n    Only country specific schemes are currently available\n  \nThere are the following payment-services supported:\n  * \"payments\"\n  * \"periodic-payments\"\n  * \"bulk-paments\"\n\nAll optional, conditional and predefined but not yet used fields are defined.\n",
        "in": "body",
        "name": "body",
        "required": true,
        "schema": {
          "oneOf": [
            {
              "$ref": "#/definitions/paymentInitiationSct_json"
            },
            {
              "$ref": "#/definitions/paymentInitiationSctInst_json"
            },
            {
              "$ref": "#/definitions/paymentInitiationTarget2_json"
            },
            {
              "$ref": "#/definitions/paymentInitiationCrossBorder_json"
            },
            {
              "$ref": "#/definitions/periodicPaymentInitiationSct_json"
            },
            {
              "$ref": "#/definitions/periodicPaymentInitiationSctInst_json"
            },
            {
              "$ref": "#/definitions/periodicPaymentInitiationTarget2_json"
            },
            {
              "$ref": "#/definitions/periodicPaymentInitiationCrossBorder_json"
            },
            {
              "$ref": "#/definitions/bulkPaymentInitiationSct_json"
            },
            {
              "$ref": "#/definitions/bulkPaymentInitiationSctInst_json"
            },
            {
              "$ref": "#/definitions/bulkPaymentInitiationTarget2_json"
            },
            {
              "$ref": "#/definitions/bulkPaymentInitiationCrossBorder_json"
            }
          ]
        }
      },
      "signingBasket": {
        "description": "Request body for a confirmation of an establishing signing basket request\n",
        "in": "body",
        "name": "body",
        "schema": {
          "$ref": "#/definitions/signingBasket"
        }
      }
    },
    "responses": {
      "BAD_REQUEST_400_AIS": {
        "description": "Bad Request",
        "headers": {
          "Location": {
            "description": "Location of the created resource.\n",
            "format": "url",
            "required": false,
            "type": "string"
          },
          "X-Request-ID": {
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
            "format": "uuid",
            "required": true,
            "type": "string"
          }
        },
        "schema": {
          "$ref": "#/definitions/Error400_NG_AIS"
        }
      },
      "BAD_REQUEST_400_PIIS": {
        "description": "Bad Request",
        "headers": {
          "Location": {
            "description": "Location of the created resource.\n",
            "format": "url",
            "required": false,
            "type": "string"
          },
          "X-Request-ID": {
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
            "format": "uuid",
            "required": true,
            "type": "string"
          }
        },
        "schema": {
          "$ref": "#/definitions/Error400_NG_AIS"
        }
      },
      "BAD_REQUEST_400_PIS": {
        "description": "Bad Request",
        "headers": {
          "Location": {
            "description": "Location of the created resource.\n",
            "format": "url",
            "required": false,
            "type": "string"
          },
          "X-Request-ID": {
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
            "format": "uuid",
            "required": true,
            "type": "string"
          }
        },
        "schema": {
          "$ref": "#/definitions/Error400_NG_PIS"
        }
      },
      "BAD_REQUEST_400_SB": {
        "description": "Bad Request",
        "headers": {
          "Location": {
            "description": "Location of the created resource.\n",
            "format": "url",
            "required": false,
            "type": "string"
          },
          "X-Request-ID": {
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
            "format": "uuid",
            "required": true,
            "type": "string"
          }
        },
        "schema": {
          "$ref": "#/definitions/Error400_NG_SB"
        }
      },
      "CONFLICT_409_AIS": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/definitions/Error409_NG_AIS"
            }
          },
          "application/problem+json": {
            "schema": {
              "$ref": "#/definitions/Error409_AIS"
            }
          }
        },
        "description": "Conflict",
        "headers": {
          "Location": {
            "$ref": "#/x-components/headers/Location"
          },
          "X-Request-ID": {
            "$ref": "#/x-components/headers/X-Request-ID"
          }
        }
      },
      "CONFLICT_409_PIIS": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/definitions/Error409_NG_PIIS"
            }
          },
          "application/problem+json": {
            "schema": {
              "$ref": "#/definitions/Error409_PIIS"
            }
          }
        },
        "description": "Conflict",
        "headers": {
          "Location": {
            "$ref": "#/x-components/headers/Location"
          },
          "X-Request-ID": {
            "$ref": "#/x-components/headers/X-Request-ID"
          }
        }
      },
      "CONFLICT_409_PIS": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/definitions/Error409_NG_PIS"
            }
          },
          "application/problem+json": {
            "schema": {
              "$ref": "#/definitions/Error409_PIS"
            }
          }
        },
        "description": "Conflict",
        "headers": {
          "Location": {
            "$ref": "#/x-components/headers/Location"
          },
          "X-Request-ID": {
            "$ref": "#/x-components/headers/X-Request-ID"
          }
        }
      },
      "CONFLICT_409_SB": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/definitions/Error409_NG_SB"
            }
          },
          "application/problem+json": {
            "schema": {
              "$ref": "#/definitions/Error409_SB"
            }
          }
        },
        "description": "Conflict",
        "headers": {
          "Location": {
            "$ref": "#/x-components/headers/Location"
          },
          "X-Request-ID": {
            "$ref": "#/x-components/headers/X-Request-ID"
          }
        }
      },
      "CREATED_201_Consents": {
        "description": "Created",
        "headers": {
          "ASPSP-SCA-Approach": {
            "description": "This data element must be contained, if the SCA Approach is already fixed.\nPossible values are\n  * EMBEDDED\n  * DECOUPLED\n  * REDIRECT\nThe OAuth SCA approach will be subsumed by REDIRECT.\n",
            "required": false,
            "type": "string"
          },
          "Location": {
            "description": "Location of the created resource.\n",
            "format": "url",
            "required": false,
            "type": "string"
          },
          "X-Request-ID": {
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
            "format": "uuid",
            "required": true,
            "type": "string"
          }
        },
        "schema": {
          "$ref": "#/definitions/consentsResponse-201"
        }
      },
      "CREATED_201_PaymentInitiation": {
        "description": "CREATED",
        "headers": {
          "ASPSP-SCA-Approach": {
            "description": "This data element must be contained, if the SCA Approach is already fixed.\nPossible values are\n  * EMBEDDED\n  * DECOUPLED\n  * REDIRECT\nThe OAuth SCA approach will be subsumed by REDIRECT.\n",
            "required": false,
            "type": "string"
          },
          "Location": {
            "description": "Location of the created resource.\n",
            "format": "url",
            "required": false,
            "type": "string"
          },
          "X-Request-ID": {
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
            "format": "uuid",
            "required": true,
            "type": "string"
          }
        },
        "schema": {
          "oneOf": [
            {
              "$ref": "#/definitions/paymentInitationRequestResponse-201"
            },
            {
              "$ref": "#/definitions/paymentInitationRequestMultiLevelScaResponse-201"
            }
          ]
        }
      },
      "CREATED_201_SigningBasket": {
        "description": "Created",
        "headers": {
          "ASPSP-SCA-Approach": {
            "description": "This data element must be contained, if the SCA Approach is already fixed.\nPossible values are\n  * EMBEDDED\n  * DECOUPLED\n  * REDIRECT\nThe OAuth SCA approach will be subsumed by REDIRECT.\n",
            "required": false,
            "type": "string"
          },
          "Location": {
            "description": "Location of the created resource.\n",
            "format": "url",
            "required": false,
            "type": "string"
          },
          "X-Request-ID": {
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
            "format": "uuid",
            "required": true,
            "type": "string"
          }
        },
        "schema": {
          "$ref": "#/definitions/signingBasketResponse-201"
        }
      },
      "CREATED_201_StartScaProcess": {
        "description": "Created",
        "headers": {
          "ASPSP-SCA-Approach": {
            "description": "This data element must be contained, if the SCA Approach is already fixed.\nPossible values are\n  * EMBEDDED\n  * DECOUPLED\n  * REDIRECT\nThe OAuth SCA approach will be subsumed by REDIRECT.\n",
            "required": false,
            "type": "string"
          },
          "X-Request-ID": {
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
            "format": "uuid",
            "required": true,
            "type": "string"
          }
        },
        "schema": {
          "$ref": "#/definitions/startScaprocessResponse"
        }
      },
      "FORBIDDEN_403_AIS": {
        "description": "Forbidden",
        "headers": {
          "Location": {
            "description": "Location of the created resource.\n",
            "format": "url",
            "required": false,
            "type": "string"
          },
          "X-Request-ID": {
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
            "format": "uuid",
            "required": true,
            "type": "string"
          }
        },
        "schema": {
          "$ref": "#/definitions/Error403_NG_AIS"
        }
      },
      "FORBIDDEN_403_PIIS": {
        "description": "Forbidden",
        "headers": {
          "Location": {
            "description": "Location of the created resource.\n",
            "format": "url",
            "required": false,
            "type": "string"
          },
          "X-Request-ID": {
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
            "format": "uuid",
            "required": true,
            "type": "string"
          }
        },
        "schema": {
          "$ref": "#/definitions/Error403_NG_PIIS"
        }
      },
      "FORBIDDEN_403_PIS": {
        "description": "Forbidden",
        "headers": {
          "Location": {
            "description": "Location of the created resource.\n",
            "format": "url",
            "required": false,
            "type": "string"
          },
          "X-Request-ID": {
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
            "format": "uuid",
            "required": true,
            "type": "string"
          }
        },
        "schema": {
          "$ref": "#/definitions/Error403_NG_PIS"
        }
      },
      "FORBIDDEN_403_SB": {
        "description": "Forbidden",
        "headers": {
          "Location": {
            "description": "Location of the created resource.\n",
            "format": "url",
            "required": false,
            "type": "string"
          },
          "X-Request-ID": {
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
            "format": "uuid",
            "required": true,
            "type": "string"
          }
        },
        "schema": {
          "$ref": "#/definitions/Error403_NG_SB"
        }
      },
      "INTERNAL_SERVER_ERROR_500_AIS": {
        "description": "Internal Server Error",
        "headers": {
          "Location": {
            "description": "Location of the created resource.\n",
            "format": "url",
            "required": false,
            "type": "string"
          },
          "X-Request-ID": {
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
            "format": "uuid",
            "required": true,
            "type": "string"
          }
        }
      },
      "INTERNAL_SERVER_ERROR_500_PIIS": {
        "description": "Internal Server Error",
        "headers": {
          "Location": {
            "description": "Location of the created resource.\n",
            "format": "url",
            "required": false,
            "type": "string"
          },
          "X-Request-ID": {
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
            "format": "uuid",
            "required": true,
            "type": "string"
          }
        }
      },
      "INTERNAL_SERVER_ERROR_500_PIS": {
        "description": "Internal Server Error",
        "headers": {
          "Location": {
            "description": "Location of the created resource.\n",
            "format": "url",
            "required": false,
            "type": "string"
          },
          "X-Request-ID": {
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
            "format": "uuid",
            "required": true,
            "type": "string"
          }
        }
      },
      "INTERNAL_SERVER_ERROR_500_SB": {
        "description": "Internal Server Error",
        "headers": {
          "Location": {
            "description": "Location of the created resource.\n",
            "format": "url",
            "required": false,
            "type": "string"
          },
          "X-Request-ID": {
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
            "format": "uuid",
            "required": true,
            "type": "string"
          }
        }
      },
      "METHOD_NOT_ALLOWED_405_AIS": {
        "description": "Method Not Allowed",
        "headers": {
          "Location": {
            "description": "Location of the created resource.\n",
            "format": "url",
            "required": false,
            "type": "string"
          },
          "X-Request-ID": {
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
            "format": "uuid",
            "required": true,
            "type": "string"
          }
        },
        "schema": {
          "$ref": "#/definitions/Error405_NG_AIS"
        }
      },
      "METHOD_NOT_ALLOWED_405_PIIS": {
        "description": "Method Not Allowed",
        "headers": {
          "Location": {
            "description": "Location of the created resource.\n",
            "format": "url",
            "required": false,
            "type": "string"
          },
          "X-Request-ID": {
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
            "format": "uuid",
            "required": true,
            "type": "string"
          }
        },
        "schema": {
          "$ref": "#/definitions/Error405_NG_PIIS"
        }
      },
      "METHOD_NOT_ALLOWED_405_PIS": {
        "description": "Method Not Allowed",
        "headers": {
          "Location": {
            "description": "Location of the created resource.\n",
            "format": "url",
            "required": false,
            "type": "string"
          },
          "X-Request-ID": {
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
            "format": "uuid",
            "required": true,
            "type": "string"
          }
        },
        "schema": {
          "$ref": "#/definitions/Error405_NG_PIS"
        }
      },
      "METHOD_NOT_ALLOWED_405_PIS_CANC": {
        "description": "Method Not Allowed",
        "headers": {
          "Location": {
            "description": "Location of the created resource.\n",
            "format": "url",
            "required": false,
            "type": "string"
          },
          "X-Request-ID": {
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
            "format": "uuid",
            "required": true,
            "type": "string"
          }
        },
        "schema": {
          "$ref": "#/definitions/Error405_NG_PIS_CANC"
        }
      },
      "METHOD_NOT_ALLOWED_405_SB": {
        "description": "Method Not Allowed",
        "headers": {
          "Location": {
            "description": "Location of the created resource.\n",
            "format": "url",
            "required": false,
            "type": "string"
          },
          "X-Request-ID": {
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
            "format": "uuid",
            "required": true,
            "type": "string"
          }
        },
        "schema": {
          "$ref": "#/definitions/Error405_NG_SB"
        }
      },
      "NOT_ACCEPTABLE_406_AIS": {
        "description": "Not Acceptable",
        "headers": {
          "Location": {
            "description": "Location of the created resource.\n",
            "format": "url",
            "required": false,
            "type": "string"
          },
          "X-Request-ID": {
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
            "format": "uuid",
            "required": true,
            "type": "string"
          }
        },
        "schema": {
          "$ref": "#/definitions/Error406_NG_AIS"
        }
      },
      "NOT_ACCEPTABLE_406_PIIS": {
        "description": "Not Acceptable",
        "headers": {
          "Location": {
            "description": "Location of the created resource.\n",
            "format": "url",
            "required": false,
            "type": "string"
          },
          "X-Request-ID": {
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
            "format": "uuid",
            "required": true,
            "type": "string"
          }
        }
      },
      "NOT_ACCEPTABLE_406_PIS": {
        "description": "Not Acceptable",
        "headers": {
          "Location": {
            "description": "Location of the created resource.\n",
            "format": "url",
            "required": false,
            "type": "string"
          },
          "X-Request-ID": {
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
            "format": "uuid",
            "required": true,
            "type": "string"
          }
        }
      },
      "NOT_ACCEPTABLE_406_SB": {
        "description": "Not Acceptable",
        "headers": {
          "Location": {
            "description": "Location of the created resource.\n",
            "format": "url",
            "required": false,
            "type": "string"
          },
          "X-Request-ID": {
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
            "format": "uuid",
            "required": true,
            "type": "string"
          }
        }
      },
      "NOT_FOUND_404_AIS": {
        "description": "Not found",
        "headers": {
          "Location": {
            "description": "Location of the created resource.\n",
            "format": "url",
            "required": false,
            "type": "string"
          },
          "X-Request-ID": {
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
            "format": "uuid",
            "required": true,
            "type": "string"
          }
        },
        "schema": {
          "$ref": "#/definitions/Error404_NG_AIS"
        }
      },
      "NOT_FOUND_404_PIIS": {
        "description": "Not found",
        "headers": {
          "Location": {
            "description": "Location of the created resource.\n",
            "format": "url",
            "required": false,
            "type": "string"
          },
          "X-Request-ID": {
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
            "format": "uuid",
            "required": true,
            "type": "string"
          }
        },
        "schema": {
          "$ref": "#/definitions/Error404_NG_PIIS"
        }
      },
      "NOT_FOUND_404_PIS": {
        "description": "Not found",
        "headers": {
          "Location": {
            "description": "Location of the created resource.\n",
            "format": "url",
            "required": false,
            "type": "string"
          },
          "X-Request-ID": {
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
            "format": "uuid",
            "required": true,
            "type": "string"
          }
        },
        "schema": {
          "$ref": "#/definitions/Error404_NG_PIS"
        }
      },
      "NOT_FOUND_404_SB": {
        "description": "Not found",
        "headers": {
          "Location": {
            "description": "Location of the created resource.\n",
            "format": "url",
            "required": false,
            "type": "string"
          },
          "X-Request-ID": {
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
            "format": "uuid",
            "required": true,
            "type": "string"
          }
        },
        "schema": {
          "$ref": "#/definitions/Error404_NG_SB"
        }
      },
      "NO_CONTENT_204_Consents": {
        "description": "No Content",
        "headers": {
          "X-Request-ID": {
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
            "format": "uuid",
            "required": true,
            "type": "string"
          }
        }
      },
      "NO_CONTENT_204_PaymentInitiationCancel": {
        "description": "OK",
        "headers": {
          "X-Request-ID": {
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
            "format": "uuid",
            "required": true,
            "type": "string"
          }
        },
        "schema": {
          "$ref": "#/definitions/paymentInitiationCancelResponse-204_202"
        }
      },
      "NO_CONTENT_204_SigningBasket": {
        "description": "No Content",
        "headers": {
          "X-Request-ID": {
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
            "format": "uuid",
            "required": true,
            "type": "string"
          }
        }
      },
      "OK_200_AccountDetails": {
        "description": "OK",
        "headers": {
          "X-Request-ID": {
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
            "format": "uuid",
            "required": true,
            "type": "string"
          }
        },
        "schema": {
          "$ref": "#/definitions/accountDetails"
        }
      },
      "OK_200_AccountList": {
        "description": "OK",
        "headers": {
          "X-Request-ID": {
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
            "format": "uuid",
            "required": true,
            "type": "string"
          }
        },
        "schema": {
          "$ref": "#/definitions/accountList"
        }
      },
      "OK_200_AccountsTransactions": {
        "description": "OK",
        "headers": {
          "X-Request-ID": {
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
            "format": "uuid",
            "required": true,
            "type": "string"
          }
        },
        "schema": {
          "$ref": "#/definitions/transactionsResponse-200_json"
        }
      },
      "OK_200_Authorisations": {
        "description": "OK",
        "headers": {
          "X-Request-ID": {
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
            "format": "uuid",
            "required": true,
            "type": "string"
          }
        },
        "schema": {
          "$ref": "#/definitions/authorisations"
        }
      },
      "OK_200_Balances": {
        "description": "OK",
        "headers": {
          "X-Request-ID": {
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
            "format": "uuid",
            "required": true,
            "type": "string"
          }
        },
        "schema": {
          "$ref": "#/definitions/readAccountBalanceResponse-200"
        }
      },
      "OK_200_CancellationList": {
        "description": "OK",
        "headers": {
          "X-Request-ID": {
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
            "format": "uuid",
            "required": true,
            "type": "string"
          }
        },
        "schema": {
          "$ref": "#/definitions/cancellationList"
        }
      },
      "OK_200_CardAccountBalances": {
        "description": "OK",
        "headers": {
          "X-Request-ID": {
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
            "format": "uuid",
            "required": true,
            "type": "string"
          }
        },
        "schema": {
          "$ref": "#/definitions/readCardAccountBalanceResponse-200"
        }
      },
      "OK_200_CardAccountDetails": {
        "description": "OK",
        "headers": {
          "X-Request-ID": {
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
            "format": "uuid",
            "required": true,
            "type": "string"
          }
        },
        "schema": {
          "$ref": "#/definitions/cardAccountDetails"
        }
      },
      "OK_200_CardAccountList": {
        "description": "OK",
        "headers": {
          "X-Request-ID": {
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
            "format": "uuid",
            "required": true,
            "type": "string"
          }
        },
        "schema": {
          "$ref": "#/definitions/cardAccountList"
        }
      },
      "OK_200_CardAccountsTransactions": {
        "description": "OK",
        "headers": {
          "X-Request-ID": {
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
            "format": "uuid",
            "required": true,
            "type": "string"
          }
        },
        "schema": {
          "$ref": "#/definitions/cardAccountsTransactionsResponse200"
        }
      },
      "OK_200_ConfirmationOfFunds": {
        "description": "OK",
        "headers": {
          "Location": {
            "description": "Location of the created resource.\n",
            "format": "url",
            "required": false,
            "type": "string"
          },
          "X-Request-ID": {
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
            "format": "uuid",
            "required": true,
            "type": "string"
          }
        },
        "schema": {
          "description": "Equals \"true\" if sufficient funds are available at the time of the request, \n\"false\" otherwise.\n",
          "properties": {
            "fundsAvailable": {
              "type": "boolean"
            }
          },
          "required": [
            "fundsAvailable"
          ],
          "type": "object"
        }
      },
      "OK_200_ConsentInformation": {
        "description": "OK",
        "headers": {
          "X-Request-ID": {
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
            "format": "uuid",
            "required": true,
            "type": "string"
          }
        },
        "schema": {
          "$ref": "#/definitions/consentInformationResponse-200_json"
        }
      },
      "OK_200_ConsentStatus": {
        "description": "OK",
        "headers": {
          "X-Request-ID": {
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
            "format": "uuid",
            "required": true,
            "type": "string"
          }
        },
        "schema": {
          "$ref": "#/definitions/consentStatusResponse-200"
        }
      },
      "OK_200_GetSigningBasket": {
        "description": "OK",
        "headers": {
          "X-Request-ID": {
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
            "format": "uuid",
            "required": true,
            "type": "string"
          }
        },
        "schema": {
          "$ref": "#/definitions/signingBasketResponse-200"
        }
      },
      "OK_200_PaymentInitiationInformation": {
        "description": "OK",
        "headers": {
          "X-Request-ID": {
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
            "format": "uuid",
            "required": true,
            "type": "string"
          }
        },
        "schema": {
          "oneOf": [
            {
              "$ref": "#/definitions/paymentInitiationSctWithStatusResponse"
            },
            {
              "$ref": "#/definitions/paymentInitiationSctInstWithStatusResponse"
            },
            {
              "$ref": "#/definitions/paymentInitiationTarget2WithStatusResponse"
            },
            {
              "$ref": "#/definitions/paymentInitiationCrossBorderWithStatusResponse"
            },
            {
              "$ref": "#/definitions/periodicPaymentInitiationSctWithStatusResponse"
            },
            {
              "$ref": "#/definitions/periodicPaymentInitiationSctInstWithStatusResponse"
            },
            {
              "$ref": "#/definitions/periodicPaymentInitiationTarget2WithStatusResponse"
            },
            {
              "$ref": "#/definitions/periodicPaymentInitiationCrossBorderWithStatusResponse"
            },
            {
              "$ref": "#/definitions/bulkPaymentInitiationSctWithStatusResponse"
            },
            {
              "$ref": "#/definitions/bulkPaymentInitiationSctInstWithStatusResponse"
            },
            {
              "$ref": "#/definitions/bulkPaymentInitiationTarget2WithStatusResponse"
            },
            {
              "$ref": "#/definitions/bulkPaymentInitiationCrossBorderWithStatusResponse"
            }
          ]
        }
      },
      "OK_200_PaymentInitiationStatus": {
        "description": "OK",
        "headers": {
          "X-Request-ID": {
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
            "format": "uuid",
            "required": true,
            "type": "string"
          }
        },
        "schema": {
          "$ref": "#/definitions/paymentInitiationStatusResponse-200_json"
        }
      },
      "OK_200_ScaStatus": {
        "description": "OK",
        "headers": {
          "X-Request-ID": {
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
            "format": "uuid",
            "required": true,
            "type": "string"
          }
        },
        "schema": {
          "$ref": "#/definitions/scaStatusResponse"
        }
      },
      "OK_200_SigningBasketStatus": {
        "description": "OK",
        "headers": {
          "X-Request-ID": {
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
            "format": "uuid",
            "required": true,
            "type": "string"
          }
        },
        "schema": {
          "$ref": "#/definitions/signingBasketStatusResponse-200"
        }
      },
      "OK_200_TransactionDetails": {
        "description": "OK",
        "headers": {
          "X-Request-ID": {
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
            "format": "uuid",
            "required": true,
            "type": "string"
          }
        },
        "schema": {
          "$ref": "#/definitions/transactionDetails"
        }
      },
      "OK_200_UpdatePsuData": {
        "description": "OK",
        "headers": {
          "ASPSP-SCA-Approach": {
            "description": "This data element must be contained, if the SCA Approach is already fixed.\nPossible values are\n  * EMBEDDED\n  * DECOUPLED\n  * REDIRECT\nThe OAuth SCA approach will be subsumed by REDIRECT.\n",
            "required": false,
            "type": "string"
          },
          "X-Request-ID": {
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
            "format": "uuid",
            "required": true,
            "type": "string"
          }
        },
        "schema": {
          "oneOf": [
            {
              "$ref": "#/definitions/updatePsuIdenticationResponse"
            },
            {
              "$ref": "#/definitions/updatePsuAuthenticationResponse"
            },
            {
              "$ref": "#/definitions/selectPsuAuthenticationMethodResponse"
            },
            {
              "$ref": "#/definitions/scaStatusResponse"
            }
          ]
        }
      },
      "RECEIVED_202_PaymentInitiationCancel": {
        "description": "Received",
        "headers": {
          "X-Request-ID": {
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
            "format": "uuid",
            "required": true,
            "type": "string"
          }
        },
        "schema": {
          "$ref": "#/definitions/paymentInitiationCancelResponse-204_202"
        }
      },
      "REQUEST_TIMEOUT_408_AIS": {
        "description": "Request Timeout",
        "headers": {
          "Location": {
            "description": "Location of the created resource.\n",
            "format": "url",
            "required": false,
            "type": "string"
          },
          "X-Request-ID": {
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
            "format": "uuid",
            "required": true,
            "type": "string"
          }
        }
      },
      "REQUEST_TIMEOUT_408_PIIS": {
        "description": "Request Timeout",
        "headers": {
          "Location": {
            "description": "Location of the created resource.\n",
            "format": "url",
            "required": false,
            "type": "string"
          },
          "X-Request-ID": {
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
            "format": "uuid",
            "required": true,
            "type": "string"
          }
        }
      },
      "REQUEST_TIMEOUT_408_PIS": {
        "description": "Request Timeout",
        "headers": {
          "Location": {
            "description": "Location of the created resource.\n",
            "format": "url",
            "required": false,
            "type": "string"
          },
          "X-Request-ID": {
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
            "format": "uuid",
            "required": true,
            "type": "string"
          }
        }
      },
      "REQUEST_TIMEOUT_408_SB": {
        "description": "Request Timeout",
        "headers": {
          "Location": {
            "description": "Location of the created resource.\n",
            "format": "url",
            "required": false,
            "type": "string"
          },
          "X-Request-ID": {
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
            "format": "uuid",
            "required": true,
            "type": "string"
          }
        }
      },
      "SERVICE_UNAVAILABLE_503_AIS": {
        "description": "Service Unavailable",
        "headers": {
          "Location": {
            "description": "Location of the created resource.\n",
            "format": "url",
            "required": false,
            "type": "string"
          },
          "X-Request-ID": {
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
            "format": "uuid",
            "required": true,
            "type": "string"
          }
        }
      },
      "SERVICE_UNAVAILABLE_503_PIIS": {
        "description": "Service Unavailable",
        "headers": {
          "Location": {
            "description": "Location of the created resource.\n",
            "format": "url",
            "required": false,
            "type": "string"
          },
          "X-Request-ID": {
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
            "format": "uuid",
            "required": true,
            "type": "string"
          }
        }
      },
      "SERVICE_UNAVAILABLE_503_PIS": {
        "description": "Service Unavailable",
        "headers": {
          "Location": {
            "description": "Location of the created resource.\n",
            "format": "url",
            "required": false,
            "type": "string"
          },
          "X-Request-ID": {
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
            "format": "uuid",
            "required": true,
            "type": "string"
          }
        }
      },
      "SERVICE_UNAVAILABLE_503_SB": {
        "description": "Service Unavailable",
        "headers": {
          "Location": {
            "description": "Location of the created resource.\n",
            "format": "url",
            "required": false,
            "type": "string"
          },
          "X-Request-ID": {
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
            "format": "uuid",
            "required": true,
            "type": "string"
          }
        }
      },
      "TOO_MANY_REQUESTS_429_AIS": {
        "description": "Too Many Requests",
        "headers": {
          "Location": {
            "description": "Location of the created resource.\n",
            "format": "url",
            "required": false,
            "type": "string"
          },
          "X-Request-ID": {
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
            "format": "uuid",
            "required": true,
            "type": "string"
          }
        },
        "schema": {
          "$ref": "#/definitions/Error429_NG_AIS"
        }
      },
      "TOO_MANY_REQUESTS_429_PIIS": {
        "description": "Too Many Requests",
        "headers": {
          "Location": {
            "description": "Location of the created resource.\n",
            "format": "url",
            "required": false,
            "type": "string"
          },
          "X-Request-ID": {
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
            "format": "uuid",
            "required": true,
            "type": "string"
          }
        }
      },
      "TOO_MANY_REQUESTS_429_PIS": {
        "description": "Too Many Requests",
        "headers": {
          "Location": {
            "description": "Location of the created resource.\n",
            "format": "url",
            "required": false,
            "type": "string"
          },
          "X-Request-ID": {
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
            "format": "uuid",
            "required": true,
            "type": "string"
          }
        }
      },
      "TOO_MANY_REQUESTS_429_SB": {
        "description": "Too Many Requests",
        "headers": {
          "Location": {
            "description": "Location of the created resource.\n",
            "format": "url",
            "required": false,
            "type": "string"
          },
          "X-Request-ID": {
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
            "format": "uuid",
            "required": true,
            "type": "string"
          }
        }
      },
      "UNAUTHORIZED_401_AIS": {
        "description": "Unauthorized",
        "headers": {
          "Location": {
            "description": "Location of the created resource.\n",
            "format": "url",
            "required": false,
            "type": "string"
          },
          "X-Request-ID": {
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
            "format": "uuid",
            "required": true,
            "type": "string"
          }
        },
        "schema": {
          "$ref": "#/definitions/Error401_NG_AIS"
        }
      },
      "UNAUTHORIZED_401_PIIS": {
        "description": "Unauthorized",
        "headers": {
          "Location": {
            "description": "Location of the created resource.\n",
            "format": "url",
            "required": false,
            "type": "string"
          },
          "X-Request-ID": {
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
            "format": "uuid",
            "required": true,
            "type": "string"
          }
        },
        "schema": {
          "$ref": "#/definitions/Error401_NG_PIIS"
        }
      },
      "UNAUTHORIZED_401_PIS": {
        "description": "Unauthorized",
        "headers": {
          "Location": {
            "description": "Location of the created resource.\n",
            "format": "url",
            "required": false,
            "type": "string"
          },
          "X-Request-ID": {
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
            "format": "uuid",
            "required": true,
            "type": "string"
          }
        },
        "schema": {
          "$ref": "#/definitions/Error401_NG_PIS"
        }
      },
      "UNAUTHORIZED_401_SB": {
        "description": "Unauthorized",
        "headers": {
          "Location": {
            "description": "Location of the created resource.\n",
            "format": "url",
            "required": false,
            "type": "string"
          },
          "X-Request-ID": {
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
            "format": "uuid",
            "required": true,
            "type": "string"
          }
        },
        "schema": {
          "$ref": "#/definitions/Error401_NG_SB"
        }
      },
      "UNSUPPORTED_MEDIA_TYPE_415_AIS": {
        "description": "Unsupported Media Type",
        "headers": {
          "Location": {
            "description": "Location of the created resource.\n",
            "format": "url",
            "required": false,
            "type": "string"
          },
          "X-Request-ID": {
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
            "format": "uuid",
            "required": true,
            "type": "string"
          }
        }
      },
      "UNSUPPORTED_MEDIA_TYPE_415_PIIS": {
        "description": "Unsupported Media Type",
        "headers": {
          "Location": {
            "description": "Location of the created resource.\n",
            "format": "url",
            "required": false,
            "type": "string"
          },
          "X-Request-ID": {
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
            "format": "uuid",
            "required": true,
            "type": "string"
          }
        }
      },
      "UNSUPPORTED_MEDIA_TYPE_415_PIS": {
        "description": "Unsupported Media Type",
        "headers": {
          "Location": {
            "description": "Location of the created resource.\n",
            "format": "url",
            "required": false,
            "type": "string"
          },
          "X-Request-ID": {
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
            "format": "uuid",
            "required": true,
            "type": "string"
          }
        }
      },
      "UNSUPPORTED_MEDIA_TYPE_415_SB": {
        "description": "Unsupported Media Type",
        "headers": {
          "Location": {
            "description": "Location of the created resource.\n",
            "format": "url",
            "required": false,
            "type": "string"
          },
          "X-Request-ID": {
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
            "format": "uuid",
            "required": true,
            "type": "string"
          }
        }
      }
    }
  }
}
